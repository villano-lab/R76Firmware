-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity data_mover is
generic (
    C_M_AXI_A_V_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_A_V_ID_WIDTH : INTEGER := 1;
    C_M_AXI_A_V_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_A_V_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_A_V_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_A_V_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_A_V_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_A_V_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_AXIL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_AXIL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_A_V_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_A_V_USER_VALUE : INTEGER := 0;
    C_M_AXI_A_V_PROT_VALUE : INTEGER := 0;
    C_M_AXI_A_V_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_a_V_AWVALID : OUT STD_LOGIC;
    m_axi_a_V_AWREADY : IN STD_LOGIC;
    m_axi_a_V_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_A_V_ADDR_WIDTH-1 downto 0);
    m_axi_a_V_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_A_V_ID_WIDTH-1 downto 0);
    m_axi_a_V_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_a_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_a_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_a_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_a_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_a_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_a_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_a_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_a_V_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_A_V_AWUSER_WIDTH-1 downto 0);
    m_axi_a_V_WVALID : OUT STD_LOGIC;
    m_axi_a_V_WREADY : IN STD_LOGIC;
    m_axi_a_V_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_A_V_DATA_WIDTH-1 downto 0);
    m_axi_a_V_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_A_V_DATA_WIDTH/8-1 downto 0);
    m_axi_a_V_WLAST : OUT STD_LOGIC;
    m_axi_a_V_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_A_V_ID_WIDTH-1 downto 0);
    m_axi_a_V_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_A_V_WUSER_WIDTH-1 downto 0);
    m_axi_a_V_ARVALID : OUT STD_LOGIC;
    m_axi_a_V_ARREADY : IN STD_LOGIC;
    m_axi_a_V_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_A_V_ADDR_WIDTH-1 downto 0);
    m_axi_a_V_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_A_V_ID_WIDTH-1 downto 0);
    m_axi_a_V_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_a_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_a_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_a_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_a_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_a_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_a_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_a_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_a_V_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_A_V_ARUSER_WIDTH-1 downto 0);
    m_axi_a_V_RVALID : IN STD_LOGIC;
    m_axi_a_V_RREADY : OUT STD_LOGIC;
    m_axi_a_V_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_A_V_DATA_WIDTH-1 downto 0);
    m_axi_a_V_RLAST : IN STD_LOGIC;
    m_axi_a_V_RID : IN STD_LOGIC_VECTOR (C_M_AXI_A_V_ID_WIDTH-1 downto 0);
    m_axi_a_V_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_A_V_RUSER_WIDTH-1 downto 0);
    m_axi_a_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_a_V_BVALID : IN STD_LOGIC;
    m_axi_a_V_BREADY : OUT STD_LOGIC;
    m_axi_a_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_a_V_BID : IN STD_LOGIC_VECTOR (C_M_AXI_A_V_ID_WIDTH-1 downto 0);
    m_axi_a_V_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_A_V_BUSER_WIDTH-1 downto 0);
    stream0_V_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    stream0_V_V_TVALID : IN STD_LOGIC;
    stream0_V_V_TREADY : OUT STD_LOGIC;
    debug_buffer_status : OUT STD_LOGIC_VECTOR (31 downto 0);
    debug_buffer_status_ap_vld : OUT STD_LOGIC;
    debug_bufsel_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    debug_bufsel_0_ap_vld : OUT STD_LOGIC;
    debug_buf0_p : OUT STD_LOGIC_VECTOR (31 downto 0);
    debug_buf0_p_ap_vld : OUT STD_LOGIC;
    debug_inbuffer_pointer : OUT STD_LOGIC_VECTOR (31 downto 0);
    debug_inbuffer_pointer_ap_vld : OUT STD_LOGIC;
    debug_dst_var_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    debug_dst_var_V_ap_vld : OUT STD_LOGIC;
    fifo_resetn : OUT STD_LOGIC;
    interrupt_r : OUT STD_LOGIC;
    interrupt_r_ap_vld : OUT STD_LOGIC;
    s_axi_axil_AWVALID : IN STD_LOGIC;
    s_axi_axil_AWREADY : OUT STD_LOGIC;
    s_axi_axil_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXIL_ADDR_WIDTH-1 downto 0);
    s_axi_axil_WVALID : IN STD_LOGIC;
    s_axi_axil_WREADY : OUT STD_LOGIC;
    s_axi_axil_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXIL_DATA_WIDTH-1 downto 0);
    s_axi_axil_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXIL_DATA_WIDTH/8-1 downto 0);
    s_axi_axil_ARVALID : IN STD_LOGIC;
    s_axi_axil_ARREADY : OUT STD_LOGIC;
    s_axi_axil_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXIL_ADDR_WIDTH-1 downto 0);
    s_axi_axil_RVALID : OUT STD_LOGIC;
    s_axi_axil_RREADY : IN STD_LOGIC;
    s_axi_axil_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXIL_DATA_WIDTH-1 downto 0);
    s_axi_axil_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_axil_BVALID : OUT STD_LOGIC;
    s_axi_axil_BREADY : IN STD_LOGIC;
    s_axi_axil_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of data_mover is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "data_mover,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z030fbg676-2,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.000000,HLS_SYN_LAT=1372,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=0,HLS_SYN_FF=2223,HLS_SYN_LUT=2531}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv32_400000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000010000000000000000000000";
    constant ap_const_lv32_989680 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100110001001011010000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal buffer_status : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_status_ap_vld : STD_LOGIC;
    signal buffer_ack : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_seq_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_seq_ce0 : STD_LOGIC;
    signal buffer_seq_we0 : STD_LOGIC;
    signal buffer_seq_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal bufsize_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufsize_ce0 : STD_LOGIC;
    signal bufsize_we0 : STD_LOGIC;
    signal bufsize_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal run : STD_LOGIC;
    signal DDROFFSET_V : STD_LOGIC_VECTOR (31 downto 0);
    signal stat_counter_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal stat_counter_ce0 : STD_LOGIC;
    signal stat_counter_we0 : STD_LOGIC;
    signal stat_counter_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal bufstatus_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal bufstatus_1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal inbuffer_pointer : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal out_counter : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal lost_counter : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal buftimeout : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal bufsel : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal swap_timeout : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal buf_p : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal inbuffer_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal inbuffer_V_ce0 : STD_LOGIC;
    signal inbuffer_V_we0 : STD_LOGIC;
    signal inbuffer_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inbuffer_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inbuffer_V_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal inbuffer_V_ce1 : STD_LOGIC;
    signal inbuffer_V_we1 : STD_LOGIC;
    signal inbuffer_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bsc : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal bsq_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal bsq_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal obuffer_ack : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal a_V_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal a_V_blk_n_W : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond3_reg_1452 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond3_reg_1452 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_V_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal stream0_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal run_read_read_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_load_phi_fu_879_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_nbreadreq_fu_210_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_V_AWVALID : STD_LOGIC;
    signal a_V_AWREADY : STD_LOGIC;
    signal a_V_WVALID : STD_LOGIC;
    signal a_V_WREADY : STD_LOGIC;
    signal a_V_ARREADY : STD_LOGIC;
    signal a_V_RVALID : STD_LOGIC;
    signal a_V_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal a_V_RLAST : STD_LOGIC;
    signal a_V_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal a_V_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal a_V_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal a_V_BVALID : STD_LOGIC;
    signal a_V_BREADY : STD_LOGIC;
    signal a_V_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal a_V_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal a_V_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_reg_531 : STD_LOGIC_VECTOR (12 downto 0);
    signal DDROFFSET_V_read_reg_1325 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op83_read_state1 : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal run_read_reg_1330 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_ack_read_reg_1334 : STD_LOGIC_VECTOR (31 downto 0);
    signal bufstatus_0_load_reg_1346 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_1_load_reg_1353 : STD_LOGIC_VECTOR (0 downto 0);
    signal buftimeout_load_reg_1379 : STD_LOGIC_VECTOR (31 downto 0);
    signal bufsel_load_reg_1385 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_875_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_1395 : STD_LOGIC_VECTOR (63 downto 0);
    signal bufstatus_load_phi_reg_1400 : STD_LOGIC_VECTOR (0 downto 0);
    signal swap_timeout_load_reg_1405 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_p_load_reg_1411 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1418 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_911_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1427 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_940_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_952_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal brmerge_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1442 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal a_V_addr_reg_1446 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond3_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_sig_ioackin_a_V_WREADY : STD_LOGIC;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_next_fu_1033_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal inbuffer_V_load_reg_1466 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_10_fu_1044_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal brmerge1_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_reg_1476 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_bufsel_load_t_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_bufsel_load_t_reg_1480 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_0_load_s_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_0_load_s_reg_1486 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_bufstatus_1_load_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_bufstatus_1_load_reg_1491 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_0_flag_2_fu_1174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_0_flag_2_reg_1496 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal bufstatus_0_new_2_fu_1180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_0_new_2_reg_1501 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_1_flag_2_fu_1225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_1_flag_2_reg_1506 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_1_new_2_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_1_new_2_reg_1511 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_a_V_AWREADY : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal inbuffer_pointer_fla_reg_443 : STD_LOGIC_VECTOR (0 downto 0);
    signal inbuffer_pointer_loc_reg_460 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_counter_loc_reg_472 : STD_LOGIC_VECTOR (63 downto 0);
    signal lost_counter_loc_reg_484 : STD_LOGIC_VECTOR (63 downto 0);
    signal inbuffer_pointer_loc_1_reg_496 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_counter_loc_1_reg_509 : STD_LOGIC_VECTOR (63 downto 0);
    signal lost_counter_loc_1_reg_520 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_bufstatus_0_flag_1_phi_fu_546_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_0_flag_1_reg_542 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_bufstatus_0_loc_1_phi_fu_559_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_0_loc_1_reg_556 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_bufstatus_1_flag_1_phi_fu_571_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_1_flag_1_reg_567 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_bufstatus_1_loc_1_phi_fu_584_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_1_loc_1_reg_581 : STD_LOGIC_VECTOR (0 downto 0);
    signal inbuffer_pointer_fla_1_reg_592 : STD_LOGIC_VECTOR (0 downto 0);
    signal inbuffer_pointer_new_1_reg_608 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_counter_loc_2_reg_624 : STD_LOGIC_VECTOR (63 downto 0);
    signal lost_counter_loc_2_reg_640 : STD_LOGIC_VECTOR (63 downto 0);
    signal swap_timeout_flag_reg_656 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_buf_p_flag_phi_fu_677_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_p_flag_reg_672 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_buf_p_loc_phi_fu_691_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_p_loc_reg_688 : STD_LOGIC_VECTOR (31 downto 0);
    signal buftimeout_loc_reg_701 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_bufsel_load_3_phi_fu_717_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufsel_load_3_reg_714 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_bufstatus_0_flag_3_phi_fu_729_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_0_flag_3_reg_725 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_phi_mux_bufstatus_0_new_3_phi_fu_740_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_0_new_3_reg_736 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_bufstatus_1_flag_3_phi_fu_751_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_1_flag_3_reg_747 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_bufstatus_1_new_3_phi_fu_762_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_1_new_3_reg_758 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_inbuffer_pointer_fla_2_phi_fu_773_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal inbuffer_pointer_fla_2_reg_769 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_inbuffer_pointer_new_2_phi_fu_785_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal inbuffer_pointer_new_2_reg_781 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_fu_1286_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_buftimeout_new_phi_fu_797_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buftimeout_new_reg_793 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_clear_fifo_load_phi_fu_808_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal clear_fifo_load_reg_804 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_901_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_918_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_1039_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buffer_seq_addr_2_gep_fu_393_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal buffer_seq_addr_3_gep_fu_402_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal p_sum1_cast_fu_1017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_a_V_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_a_V_WREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_23_fu_1268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal swap_timeout_flag_1_fu_1280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1085_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_1128_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_1263_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_895_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal swap_timeout_load_no_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_974_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_2_fu_990_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_11_cast_fu_997_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal op2_cast_fu_983_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp3_fu_1001_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp3_cast_fu_1007_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_2_cast_fu_987_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_sum1_fu_1011_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_11_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1124_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1143_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1159_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_0_flag_1_s_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_1192_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1206_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_1200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_1_flag_1_s_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev8_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bufstatus_load_4_fu_1186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1248_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bufstatus_load_5_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1274_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_308 : BOOLEAN;

    component data_mover_inbuffbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component data_mover_axil_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        buffer_status : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_status_ap_vld : IN STD_LOGIC;
        buffer_ack : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_seq_address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        buffer_seq_ce0 : IN STD_LOGIC;
        buffer_seq_we0 : IN STD_LOGIC;
        buffer_seq_d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        bufsize_address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        bufsize_ce0 : IN STD_LOGIC;
        bufsize_we0 : IN STD_LOGIC;
        bufsize_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        run : OUT STD_LOGIC;
        DDROFFSET_V : OUT STD_LOGIC_VECTOR (31 downto 0);
        stat_counter_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        stat_counter_ce0 : IN STD_LOGIC;
        stat_counter_we0 : IN STD_LOGIC;
        stat_counter_d0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component data_mover_a_V_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    inbuffer_V_U : component data_mover_inbuffbkb
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => inbuffer_V_address0,
        ce0 => inbuffer_V_ce0,
        we0 => inbuffer_V_we0,
        d0 => inbuffer_V_d0,
        q0 => inbuffer_V_q0,
        address1 => inbuffer_V_address1,
        ce1 => inbuffer_V_ce1,
        we1 => inbuffer_V_we1,
        d1 => inbuffer_V_d1);

    data_mover_axil_s_axi_U : component data_mover_axil_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXIL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXIL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_axil_AWVALID,
        AWREADY => s_axi_axil_AWREADY,
        AWADDR => s_axi_axil_AWADDR,
        WVALID => s_axi_axil_WVALID,
        WREADY => s_axi_axil_WREADY,
        WDATA => s_axi_axil_WDATA,
        WSTRB => s_axi_axil_WSTRB,
        ARVALID => s_axi_axil_ARVALID,
        ARREADY => s_axi_axil_ARREADY,
        ARADDR => s_axi_axil_ARADDR,
        RVALID => s_axi_axil_RVALID,
        RREADY => s_axi_axil_RREADY,
        RDATA => s_axi_axil_RDATA,
        RRESP => s_axi_axil_RRESP,
        BVALID => s_axi_axil_BVALID,
        BREADY => s_axi_axil_BREADY,
        BRESP => s_axi_axil_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        buffer_status => buffer_status,
        buffer_status_ap_vld => buffer_status_ap_vld,
        buffer_ack => buffer_ack,
        buffer_seq_address0 => buffer_seq_address0,
        buffer_seq_ce0 => buffer_seq_ce0,
        buffer_seq_we0 => buffer_seq_we0,
        buffer_seq_d0 => buffer_seq_d0,
        bufsize_address0 => bufsize_address0,
        bufsize_ce0 => bufsize_ce0,
        bufsize_we0 => bufsize_we0,
        bufsize_d0 => bufsize_d0,
        run => run,
        DDROFFSET_V => DDROFFSET_V,
        stat_counter_address0 => stat_counter_address0,
        stat_counter_ce0 => stat_counter_ce0,
        stat_counter_we0 => stat_counter_we0,
        stat_counter_d0 => stat_counter_d0);

    data_mover_a_V_m_axi_U : component data_mover_a_V_m_axi
    generic map (
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_A_V_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_A_V_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_A_V_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_A_V_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_A_V_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_A_V_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_A_V_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_A_V_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_A_V_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_A_V_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_A_V_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_A_V_CACHE_VALUE)
    port map (
        AWVALID => m_axi_a_V_AWVALID,
        AWREADY => m_axi_a_V_AWREADY,
        AWADDR => m_axi_a_V_AWADDR,
        AWID => m_axi_a_V_AWID,
        AWLEN => m_axi_a_V_AWLEN,
        AWSIZE => m_axi_a_V_AWSIZE,
        AWBURST => m_axi_a_V_AWBURST,
        AWLOCK => m_axi_a_V_AWLOCK,
        AWCACHE => m_axi_a_V_AWCACHE,
        AWPROT => m_axi_a_V_AWPROT,
        AWQOS => m_axi_a_V_AWQOS,
        AWREGION => m_axi_a_V_AWREGION,
        AWUSER => m_axi_a_V_AWUSER,
        WVALID => m_axi_a_V_WVALID,
        WREADY => m_axi_a_V_WREADY,
        WDATA => m_axi_a_V_WDATA,
        WSTRB => m_axi_a_V_WSTRB,
        WLAST => m_axi_a_V_WLAST,
        WID => m_axi_a_V_WID,
        WUSER => m_axi_a_V_WUSER,
        ARVALID => m_axi_a_V_ARVALID,
        ARREADY => m_axi_a_V_ARREADY,
        ARADDR => m_axi_a_V_ARADDR,
        ARID => m_axi_a_V_ARID,
        ARLEN => m_axi_a_V_ARLEN,
        ARSIZE => m_axi_a_V_ARSIZE,
        ARBURST => m_axi_a_V_ARBURST,
        ARLOCK => m_axi_a_V_ARLOCK,
        ARCACHE => m_axi_a_V_ARCACHE,
        ARPROT => m_axi_a_V_ARPROT,
        ARQOS => m_axi_a_V_ARQOS,
        ARREGION => m_axi_a_V_ARREGION,
        ARUSER => m_axi_a_V_ARUSER,
        RVALID => m_axi_a_V_RVALID,
        RREADY => m_axi_a_V_RREADY,
        RDATA => m_axi_a_V_RDATA,
        RLAST => m_axi_a_V_RLAST,
        RID => m_axi_a_V_RID,
        RUSER => m_axi_a_V_RUSER,
        RRESP => m_axi_a_V_RRESP,
        BVALID => m_axi_a_V_BVALID,
        BREADY => m_axi_a_V_BREADY,
        BRESP => m_axi_a_V_BRESP,
        BID => m_axi_a_V_BID,
        BUSER => m_axi_a_V_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => a_V_ARREADY,
        I_ARADDR => ap_const_lv32_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => a_V_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => a_V_RDATA,
        I_RID => a_V_RID,
        I_RUSER => a_V_RUSER,
        I_RRESP => a_V_RRESP,
        I_RLAST => a_V_RLAST,
        I_AWVALID => a_V_AWVALID,
        I_AWREADY => a_V_AWREADY,
        I_AWADDR => a_V_addr_reg_1446,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_1000,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => a_V_WVALID,
        I_WREADY => a_V_WREADY,
        I_WDATA => inbuffer_V_load_reg_1466,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => a_V_BVALID,
        I_BREADY => a_V_BREADY,
        I_BRESP => a_V_BRESP,
        I_BID => a_V_BID,
        I_BUSER => a_V_BUSER);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_sig_ioackin_a_V_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state5);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_sig_ioackin_a_V_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_a_V_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_a_V_AWREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    if ((ap_sig_ioackin_a_V_AWREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_a_V_AWREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = a_V_AWREADY)) then 
                        ap_reg_ioackin_a_V_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_a_V_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_a_V_WREADY <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_reg_pp0_iter1_exitcond3_reg_1452 = ap_const_lv1_0))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_a_V_WREADY <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = a_V_WREADY))) then 
                        ap_reg_ioackin_a_V_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    bsc_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_1))) then 
                bsc <= tmp_14_fu_1085_p2;
            elsif ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (run_read_read_fu_198_p2 = ap_const_lv1_0))) then 
                bsc <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    buf_p_flag_reg_672_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0)))) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0)))) then 
                buf_p_flag_reg_672 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1))))) then 
                buf_p_flag_reg_672 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    buf_p_loc_reg_688_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0))) then 
                buf_p_loc_reg_688 <= tmp_10_fu_1044_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
                buf_p_loc_reg_688 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1))))) then 
                buf_p_loc_reg_688 <= buf_p_load_reg_1411;
            end if; 
        end if;
    end process;

    bufsel_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_1))) then 
                bufsel <= not_bufsel_load_t_fu_1061_p2;
            elsif ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (run_read_read_fu_198_p2 = ap_const_lv1_0))) then 
                bufsel <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    bufsel_load_3_reg_714_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
                bufsel_load_3_reg_714 <= not_bufsel_load_t_reg_1480;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1)))) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0)))) then 
                bufsel_load_3_reg_714 <= bufsel_load_reg_1385;
            end if; 
        end if;
    end process;

    bufstatus_0_flag_1_reg_542_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
                bufstatus_0_flag_1_reg_542 <= not_bufsel_load_t_reg_1480;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1)))) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0)))) then 
                bufstatus_0_flag_1_reg_542 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    bufstatus_0_flag_3_reg_725_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                bufstatus_0_flag_3_reg_725 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
                bufstatus_0_flag_3_reg_725 <= bufstatus_0_flag_2_reg_1496;
            end if; 
        end if;
    end process;

    bufstatus_0_loc_1_reg_556_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
                bufstatus_0_loc_1_reg_556 <= bufstatus_0_load_s_reg_1486;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1)))) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0)))) then 
                bufstatus_0_loc_1_reg_556 <= bufstatus_0_load_reg_1346;
            end if; 
        end if;
    end process;

    bufstatus_0_new_3_reg_736_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                bufstatus_0_new_3_reg_736 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
                bufstatus_0_new_3_reg_736 <= bufstatus_0_new_2_reg_1501;
            end if; 
        end if;
    end process;

    bufstatus_1_flag_1_reg_567_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
                bufstatus_1_flag_1_reg_567 <= bufsel_load_reg_1385;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1)))) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0)))) then 
                bufstatus_1_flag_1_reg_567 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    bufstatus_1_flag_3_reg_747_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                bufstatus_1_flag_3_reg_747 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
                bufstatus_1_flag_3_reg_747 <= bufstatus_1_flag_2_reg_1506;
            end if; 
        end if;
    end process;

    bufstatus_1_loc_1_reg_581_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
                bufstatus_1_loc_1_reg_581 <= p_bufstatus_1_load_reg_1491;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1)))) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0)))) then 
                bufstatus_1_loc_1_reg_581 <= bufstatus_1_load_reg_1353;
            end if; 
        end if;
    end process;

    bufstatus_1_new_3_reg_758_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                bufstatus_1_new_3_reg_758 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
                bufstatus_1_new_3_reg_758 <= bufstatus_1_new_2_reg_1511;
            end if; 
        end if;
    end process;

    buftimeout_loc_reg_701_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
                buftimeout_loc_reg_701 <= ap_const_lv32_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1)))) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0)))) then 
                buftimeout_loc_reg_701 <= buftimeout_load_reg_1379;
            end if; 
        end if;
    end process;

    buftimeout_new_reg_793_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                buftimeout_new_reg_793 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
                buftimeout_new_reg_793 <= storemerge_fu_1286_p3;
            end if; 
        end if;
    end process;

    clear_fifo_load_reg_804_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                clear_fifo_load_reg_804 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
                clear_fifo_load_reg_804 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    inbuffer_pointer_fla_1_reg_592_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0)))) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0)))) then 
                inbuffer_pointer_fla_1_reg_592 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1))))) then 
                inbuffer_pointer_fla_1_reg_592 <= inbuffer_pointer_fla_reg_443;
            end if; 
        end if;
    end process;

    inbuffer_pointer_fla_2_reg_769_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                inbuffer_pointer_fla_2_reg_769 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
                inbuffer_pointer_fla_2_reg_769 <= inbuffer_pointer_fla_1_reg_592;
            end if; 
        end if;
    end process;

    inbuffer_pointer_fla_reg_443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_nbreadreq_fu_210_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (tmp_5_fu_934_p2 = ap_const_lv1_0) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0))) then 
                inbuffer_pointer_fla_reg_443 <= ap_const_lv1_1;
            elsif (((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1)) or (not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_210_p3 = ap_const_lv1_0) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0)))) then 
                inbuffer_pointer_fla_reg_443 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    inbuffer_pointer_loc_1_reg_496_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_5_fu_934_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_210_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0))) then 
                inbuffer_pointer_loc_1_reg_496 <= ap_const_lv32_1000;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_0) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_0) and (tmp_reg_1418 = ap_const_lv1_0)) or ((bufstatus_load_phi_reg_1400 = ap_const_lv1_1) and (brmerge_fu_969_p2 = ap_const_lv1_0))))) then 
                inbuffer_pointer_loc_1_reg_496 <= inbuffer_pointer_loc_reg_460;
            end if; 
        end if;
    end process;

    inbuffer_pointer_loc_reg_460_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_nbreadreq_fu_210_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (tmp_5_fu_934_p2 = ap_const_lv1_0) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0))) then 
                inbuffer_pointer_loc_reg_460 <= tmp_9_fu_911_p2;
            elsif (((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1)) or (not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_210_p3 = ap_const_lv1_0) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0)))) then 
                inbuffer_pointer_loc_reg_460 <= inbuffer_pointer;
            end if; 
        end if;
    end process;

    inbuffer_pointer_new_1_reg_608_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0)))) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0)))) then 
                inbuffer_pointer_new_1_reg_608 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1))))) then 
                inbuffer_pointer_new_1_reg_608 <= inbuffer_pointer_loc_reg_460;
            end if; 
        end if;
    end process;

    inbuffer_pointer_new_2_reg_781_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                inbuffer_pointer_new_2_reg_781 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
                inbuffer_pointer_new_2_reg_781 <= inbuffer_pointer_new_1_reg_608;
            end if; 
        end if;
    end process;

    indvar_reg_531_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond3_fu_1027_p2 = ap_const_lv1_0))) then 
                indvar_reg_531 <= indvar_next_fu_1033_p2;
            elsif (((ap_sig_ioackin_a_V_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvar_reg_531 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    lost_counter_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_308)) then
                if (((bufstatus_load_phi_fu_879_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1))) then 
                    lost_counter <= tmp_4_fu_952_p2;
                elsif ((run_read_read_fu_198_p2 = ap_const_lv1_0)) then 
                    lost_counter <= ap_const_lv64_0;
                end if;
            end if; 
        end if;
    end process;

    lost_counter_loc_1_reg_520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_5_fu_934_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_210_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0))) then 
                lost_counter_loc_1_reg_520 <= lost_counter;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_0) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_0) and (tmp_reg_1418 = ap_const_lv1_0)) or ((bufstatus_load_phi_reg_1400 = ap_const_lv1_1) and (brmerge_fu_969_p2 = ap_const_lv1_0))))) then 
                lost_counter_loc_1_reg_520 <= lost_counter_loc_reg_484;
            end if; 
        end if;
    end process;

    lost_counter_loc_2_reg_640_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0)))) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0)))) then 
                lost_counter_loc_2_reg_640 <= lost_counter_loc_1_reg_520;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1))))) then 
                lost_counter_loc_2_reg_640 <= lost_counter_loc_reg_484;
            end if; 
        end if;
    end process;

    lost_counter_loc_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_210_p3 = ap_const_lv1_0) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0)) or (not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_nbreadreq_fu_210_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (tmp_5_fu_934_p2 = ap_const_lv1_0) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0)))) then 
                lost_counter_loc_reg_484 <= lost_counter;
            elsif ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1))) then 
                lost_counter_loc_reg_484 <= tmp_4_fu_952_p2;
            end if; 
        end if;
    end process;

    obuffer_ack_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                obuffer_ack <= buffer_ack_read_reg_1334;
            elsif ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (run_read_read_fu_198_p2 = ap_const_lv1_0))) then 
                obuffer_ack <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    out_counter_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_308)) then
                if ((ap_predicate_op83_read_state1 = ap_const_boolean_1)) then 
                    out_counter <= tmp_6_fu_940_p2;
                elsif ((run_read_read_fu_198_p2 = ap_const_lv1_0)) then 
                    out_counter <= ap_const_lv64_0;
                end if;
            end if; 
        end if;
    end process;

    out_counter_loc_1_reg_509_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_5_fu_934_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_210_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0))) then 
                out_counter_loc_1_reg_509 <= tmp_6_fu_940_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_0) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_0) and (tmp_reg_1418 = ap_const_lv1_0)) or ((bufstatus_load_phi_reg_1400 = ap_const_lv1_1) and (brmerge_fu_969_p2 = ap_const_lv1_0))))) then 
                out_counter_loc_1_reg_509 <= out_counter_loc_reg_472;
            end if; 
        end if;
    end process;

    out_counter_loc_2_reg_624_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0)))) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0)))) then 
                out_counter_loc_2_reg_624 <= out_counter_loc_1_reg_509;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1))))) then 
                out_counter_loc_2_reg_624 <= out_counter_loc_reg_472;
            end if; 
        end if;
    end process;

    out_counter_loc_reg_472_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_nbreadreq_fu_210_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (tmp_5_fu_934_p2 = ap_const_lv1_0) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0))) then 
                out_counter_loc_reg_472 <= tmp_6_fu_940_p2;
            elsif (((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1)) or (not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_210_p3 = ap_const_lv1_0) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0)))) then 
                out_counter_loc_reg_472 <= out_counter;
            end if; 
        end if;
    end process;

    swap_timeout_flag_reg_656_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
                swap_timeout_flag_reg_656 <= ap_const_lv1_1;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1)))) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0)))) then 
                swap_timeout_flag_reg_656 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                DDROFFSET_V_read_reg_1325 <= DDROFFSET_V;
                buffer_ack_read_reg_1334 <= buffer_ack;
                bufstatus_0_load_reg_1346 <= bufstatus_0;
                bufstatus_1_load_reg_1353 <= bufstatus_1;
                buftimeout_load_reg_1379 <= buftimeout;
                run_read_reg_1330 <= (0=>run, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((brmerge_fu_969_p2 = ap_const_lv1_0) or ((tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then
                a_V_addr_reg_1446 <= p_sum1_cast_fu_1017_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_reg_pp0_iter1_exitcond3_reg_1452 <= exitcond3_reg_1452;
                exitcond3_reg_1452 <= exitcond3_fu_1027_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                brmerge1_reg_1476 <= brmerge1_fu_1056_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((bufstatus_load_phi_reg_1400 = ap_const_lv1_1) or (tmp_5_reg_1427 = ap_const_lv1_0) or (tmp_reg_1418 = ap_const_lv1_0)))) then
                brmerge_reg_1442 <= brmerge_fu_969_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_1) and (bufsel_load_reg_1385 = ap_const_lv1_1))) then
                bsq_0 <= tmp_14_fu_1085_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_1) and (bufsel_load_reg_1385 = ap_const_lv1_0))) then
                bsq_1 <= tmp_14_fu_1085_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (ap_phi_mux_buf_p_flag_phi_fu_677_p6 = ap_const_lv1_1))) then
                buf_p <= ap_phi_mux_buf_p_loc_phi_fu_691_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (run_read_read_fu_198_p2 = ap_const_lv1_1))) then
                buf_p_load_reg_1411 <= buf_p;
                bufsel_load_reg_1385 <= bufsel;
                bufstatus_load_phi_reg_1400 <= bufstatus_load_phi_fu_879_p3;
                swap_timeout_load_reg_1405 <= swap_timeout;
                    tmp_3_reg_1395(0) <= tmp_3_fu_875_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_phi_mux_bufstatus_0_flag_3_phi_fu_729_p4 = ap_const_lv1_1))) then
                bufstatus_0 <= ap_phi_mux_bufstatus_0_new_3_phi_fu_740_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                bufstatus_0_flag_2_reg_1496 <= bufstatus_0_flag_2_fu_1174_p2;
                bufstatus_0_new_2_reg_1501 <= bufstatus_0_new_2_fu_1180_p2;
                bufstatus_1_flag_2_reg_1506 <= bufstatus_1_flag_2_fu_1225_p2;
                bufstatus_1_new_2_reg_1511 <= bufstatus_1_new_2_fu_1231_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_1))) then
                bufstatus_0_load_s_reg_1486 <= bufstatus_0_load_s_fu_1066_p2;
                not_bufsel_load_t_reg_1480 <= not_bufsel_load_t_fu_1061_p2;
                p_bufstatus_1_load_reg_1491 <= p_bufstatus_1_load_fu_1071_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_phi_mux_bufstatus_1_flag_3_phi_fu_751_p4 = ap_const_lv1_1))) then
                bufstatus_1 <= ap_phi_mux_bufstatus_1_new_3_phi_fu_762_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                buftimeout <= ap_phi_mux_buftimeout_new_phi_fu_797_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond3_reg_1452 = ap_const_lv1_0))) then
                inbuffer_V_load_reg_1466 <= inbuffer_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_phi_mux_inbuffer_pointer_fla_2_phi_fu_773_p4 = ap_const_lv1_1))) then
                inbuffer_pointer <= ap_phi_mux_inbuffer_pointer_new_2_phi_fu_785_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (swap_timeout_flag_1_fu_1280_p2 = ap_const_lv1_1) and (run_read_reg_1330 = ap_const_lv1_1))) then
                swap_timeout <= tmp_23_fu_1268_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) then
                tmp_5_reg_1427 <= tmp_5_fu_934_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0))) then
                tmp_reg_1418 <= (0=>stream0_V_V_TVALID, others=>'-');
            end if;
        end if;
    end process;
    tmp_3_reg_1395(63 downto 1) <= "000000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (stream0_V_V_TVALID, ap_CS_fsm, ap_CS_fsm_state4, ap_enable_reg_pp0_iter2, ap_CS_fsm_state12, ap_CS_fsm_state1, run_read_read_fu_198_p2, a_V_BVALID, ap_predicate_op83_read_state1, bufstatus_load_phi_reg_1400, tmp_reg_1418, tmp_5_reg_1427, brmerge_fu_969_p2, ap_CS_fsm_state3, exitcond3_fu_1027_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, brmerge1_fu_1056_p2, ap_sig_ioackin_a_V_AWREADY, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (run_read_read_fu_198_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (run_read_read_fu_198_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_0)) or ((brmerge_fu_969_p2 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_sig_ioackin_a_V_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond3_fu_1027_p2 = ap_const_lv1_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond3_fu_1027_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;

    a_V_AWVALID_assign_proc : process(ap_CS_fsm_state4, ap_reg_ioackin_a_V_AWREADY)
    begin
        if (((ap_reg_ioackin_a_V_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            a_V_AWVALID <= ap_const_logic_1;
        else 
            a_V_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    a_V_BREADY_assign_proc : process(ap_CS_fsm_state12, a_V_BVALID)
    begin
        if (((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            a_V_BREADY <= ap_const_logic_1;
        else 
            a_V_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    a_V_WVALID_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond3_reg_1452, ap_reg_ioackin_a_V_WREADY, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_a_V_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_reg_pp0_iter1_exitcond3_reg_1452 = ap_const_lv1_0))) then 
            a_V_WVALID <= ap_const_logic_1;
        else 
            a_V_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    a_V_blk_n_AW_assign_proc : process(m_axi_a_V_AWREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_V_blk_n_AW <= m_axi_a_V_AWREADY;
        else 
            a_V_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    a_V_blk_n_B_assign_proc : process(m_axi_a_V_BVALID, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            a_V_blk_n_B <= m_axi_a_V_BVALID;
        else 
            a_V_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    a_V_blk_n_W_assign_proc : process(m_axi_a_V_WREADY, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_reg_pp0_iter1_exitcond3_reg_1452)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_reg_pp0_iter1_exitcond3_reg_1452 = ap_const_lv1_0))) then 
            a_V_blk_n_W <= m_axi_a_V_WREADY;
        else 
            a_V_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state13 <= ap_CS_fsm(10);
    ap_CS_fsm_state14 <= ap_CS_fsm(11);
    ap_CS_fsm_state15 <= ap_CS_fsm(12);
    ap_CS_fsm_state16 <= ap_CS_fsm(13);
    ap_CS_fsm_state17 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state7_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state7_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io));
    end process;


    ap_block_state1_assign_proc : process(stream0_V_V_TVALID, ap_predicate_op83_read_state1)
    begin
                ap_block_state1 <= ((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_io_assign_proc : process(ap_reg_pp0_iter1_exitcond3_reg_1452, ap_sig_ioackin_a_V_WREADY)
    begin
                ap_block_state7_io <= ((ap_sig_ioackin_a_V_WREADY = ap_const_logic_0) and (ap_reg_pp0_iter1_exitcond3_reg_1452 = ap_const_lv1_0));
    end process;

        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_308_assign_proc : process(stream0_V_V_TVALID, ap_CS_fsm_state1, ap_predicate_op83_read_state1)
    begin
                ap_condition_308 <= (not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1));
    end process;


    ap_condition_pp0_exit_iter0_state5_assign_proc : process(exitcond3_fu_1027_p2)
    begin
        if ((exitcond3_fu_1027_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_buf_p_flag_phi_fu_677_p6_assign_proc : process(bufstatus_load_phi_reg_1400, tmp_reg_1418, tmp_5_reg_1427, brmerge_reg_1442, brmerge1_reg_1476, ap_CS_fsm_state14, buf_p_flag_reg_672)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
            ap_phi_mux_buf_p_flag_phi_fu_677_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_buf_p_flag_phi_fu_677_p6 <= buf_p_flag_reg_672;
        end if; 
    end process;


    ap_phi_mux_buf_p_loc_phi_fu_691_p6_assign_proc : process(bufstatus_load_phi_reg_1400, tmp_reg_1418, tmp_5_reg_1427, brmerge_reg_1442, brmerge1_reg_1476, ap_CS_fsm_state14, buf_p_loc_reg_688)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
            ap_phi_mux_buf_p_loc_phi_fu_691_p6 <= ap_const_lv32_0;
        else 
            ap_phi_mux_buf_p_loc_phi_fu_691_p6 <= buf_p_loc_reg_688;
        end if; 
    end process;


    ap_phi_mux_bufsel_load_3_phi_fu_717_p6_assign_proc : process(bufstatus_load_phi_reg_1400, tmp_reg_1418, tmp_5_reg_1427, brmerge_reg_1442, brmerge1_reg_1476, not_bufsel_load_t_reg_1480, ap_CS_fsm_state14, bufsel_load_3_reg_714)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
            ap_phi_mux_bufsel_load_3_phi_fu_717_p6 <= not_bufsel_load_t_reg_1480;
        else 
            ap_phi_mux_bufsel_load_3_phi_fu_717_p6 <= bufsel_load_3_reg_714;
        end if; 
    end process;


    ap_phi_mux_bufstatus_0_flag_1_phi_fu_546_p6_assign_proc : process(bufstatus_load_phi_reg_1400, tmp_reg_1418, tmp_5_reg_1427, brmerge_reg_1442, brmerge1_reg_1476, not_bufsel_load_t_reg_1480, ap_CS_fsm_state14, bufstatus_0_flag_1_reg_542)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
            ap_phi_mux_bufstatus_0_flag_1_phi_fu_546_p6 <= not_bufsel_load_t_reg_1480;
        else 
            ap_phi_mux_bufstatus_0_flag_1_phi_fu_546_p6 <= bufstatus_0_flag_1_reg_542;
        end if; 
    end process;


    ap_phi_mux_bufstatus_0_flag_3_phi_fu_729_p4_assign_proc : process(run_read_reg_1330, bufstatus_0_flag_2_reg_1496, bufstatus_0_flag_3_reg_725, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
            ap_phi_mux_bufstatus_0_flag_3_phi_fu_729_p4 <= bufstatus_0_flag_2_reg_1496;
        else 
            ap_phi_mux_bufstatus_0_flag_3_phi_fu_729_p4 <= bufstatus_0_flag_3_reg_725;
        end if; 
    end process;


    ap_phi_mux_bufstatus_0_loc_1_phi_fu_559_p6_assign_proc : process(bufstatus_load_phi_reg_1400, tmp_reg_1418, tmp_5_reg_1427, brmerge_reg_1442, brmerge1_reg_1476, bufstatus_0_load_s_reg_1486, ap_CS_fsm_state14, bufstatus_0_loc_1_reg_556)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
            ap_phi_mux_bufstatus_0_loc_1_phi_fu_559_p6 <= bufstatus_0_load_s_reg_1486;
        else 
            ap_phi_mux_bufstatus_0_loc_1_phi_fu_559_p6 <= bufstatus_0_loc_1_reg_556;
        end if; 
    end process;


    ap_phi_mux_bufstatus_0_new_3_phi_fu_740_p4_assign_proc : process(run_read_reg_1330, bufstatus_0_new_2_reg_1501, ap_CS_fsm_state17, bufstatus_0_new_3_reg_736)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
            ap_phi_mux_bufstatus_0_new_3_phi_fu_740_p4 <= bufstatus_0_new_2_reg_1501;
        else 
            ap_phi_mux_bufstatus_0_new_3_phi_fu_740_p4 <= bufstatus_0_new_3_reg_736;
        end if; 
    end process;


    ap_phi_mux_bufstatus_1_flag_1_phi_fu_571_p6_assign_proc : process(bufsel_load_reg_1385, bufstatus_load_phi_reg_1400, tmp_reg_1418, tmp_5_reg_1427, brmerge_reg_1442, brmerge1_reg_1476, ap_CS_fsm_state14, bufstatus_1_flag_1_reg_567)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
            ap_phi_mux_bufstatus_1_flag_1_phi_fu_571_p6 <= bufsel_load_reg_1385;
        else 
            ap_phi_mux_bufstatus_1_flag_1_phi_fu_571_p6 <= bufstatus_1_flag_1_reg_567;
        end if; 
    end process;


    ap_phi_mux_bufstatus_1_flag_3_phi_fu_751_p4_assign_proc : process(run_read_reg_1330, bufstatus_1_flag_2_reg_1506, ap_CS_fsm_state17, bufstatus_1_flag_3_reg_747)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
            ap_phi_mux_bufstatus_1_flag_3_phi_fu_751_p4 <= bufstatus_1_flag_2_reg_1506;
        else 
            ap_phi_mux_bufstatus_1_flag_3_phi_fu_751_p4 <= bufstatus_1_flag_3_reg_747;
        end if; 
    end process;


    ap_phi_mux_bufstatus_1_loc_1_phi_fu_584_p6_assign_proc : process(bufstatus_load_phi_reg_1400, tmp_reg_1418, tmp_5_reg_1427, brmerge_reg_1442, brmerge1_reg_1476, p_bufstatus_1_load_reg_1491, ap_CS_fsm_state14, bufstatus_1_loc_1_reg_581)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
            ap_phi_mux_bufstatus_1_loc_1_phi_fu_584_p6 <= p_bufstatus_1_load_reg_1491;
        else 
            ap_phi_mux_bufstatus_1_loc_1_phi_fu_584_p6 <= bufstatus_1_loc_1_reg_581;
        end if; 
    end process;


    ap_phi_mux_bufstatus_1_new_3_phi_fu_762_p4_assign_proc : process(run_read_reg_1330, bufstatus_1_new_2_reg_1511, ap_CS_fsm_state17, bufstatus_1_new_3_reg_758)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
            ap_phi_mux_bufstatus_1_new_3_phi_fu_762_p4 <= bufstatus_1_new_2_reg_1511;
        else 
            ap_phi_mux_bufstatus_1_new_3_phi_fu_762_p4 <= bufstatus_1_new_3_reg_758;
        end if; 
    end process;


    ap_phi_mux_buftimeout_new_phi_fu_797_p4_assign_proc : process(run_read_reg_1330, ap_CS_fsm_state17, storemerge_fu_1286_p3, buftimeout_new_reg_793)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
            ap_phi_mux_buftimeout_new_phi_fu_797_p4 <= storemerge_fu_1286_p3;
        else 
            ap_phi_mux_buftimeout_new_phi_fu_797_p4 <= buftimeout_new_reg_793;
        end if; 
    end process;


    ap_phi_mux_clear_fifo_load_phi_fu_808_p4_assign_proc : process(run_read_reg_1330, ap_CS_fsm_state17, clear_fifo_load_reg_804)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
            ap_phi_mux_clear_fifo_load_phi_fu_808_p4 <= ap_const_lv1_1;
        else 
            ap_phi_mux_clear_fifo_load_phi_fu_808_p4 <= clear_fifo_load_reg_804;
        end if; 
    end process;


    ap_phi_mux_inbuffer_pointer_fla_2_phi_fu_773_p4_assign_proc : process(run_read_reg_1330, inbuffer_pointer_fla_1_reg_592, ap_CS_fsm_state17, inbuffer_pointer_fla_2_reg_769)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
            ap_phi_mux_inbuffer_pointer_fla_2_phi_fu_773_p4 <= inbuffer_pointer_fla_1_reg_592;
        else 
            ap_phi_mux_inbuffer_pointer_fla_2_phi_fu_773_p4 <= inbuffer_pointer_fla_2_reg_769;
        end if; 
    end process;


    ap_phi_mux_inbuffer_pointer_new_2_phi_fu_785_p4_assign_proc : process(run_read_reg_1330, inbuffer_pointer_new_1_reg_608, ap_CS_fsm_state17, inbuffer_pointer_new_2_reg_781)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1))) then 
            ap_phi_mux_inbuffer_pointer_new_2_phi_fu_785_p4 <= inbuffer_pointer_new_1_reg_608;
        else 
            ap_phi_mux_inbuffer_pointer_new_2_phi_fu_785_p4 <= inbuffer_pointer_new_2_reg_781;
        end if; 
    end process;


    ap_predicate_op83_read_state1_assign_proc : process(run_read_read_fu_198_p2, bufstatus_load_phi_fu_879_p3, tmp_nbreadreq_fu_210_p3)
    begin
                ap_predicate_op83_read_state1 <= ((tmp_nbreadreq_fu_210_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_a_V_AWREADY_assign_proc : process(a_V_AWREADY, ap_reg_ioackin_a_V_AWREADY)
    begin
        if ((ap_reg_ioackin_a_V_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_a_V_AWREADY <= a_V_AWREADY;
        else 
            ap_sig_ioackin_a_V_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_a_V_WREADY_assign_proc : process(a_V_WREADY, ap_reg_ioackin_a_V_WREADY)
    begin
        if ((ap_reg_ioackin_a_V_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_a_V_WREADY <= a_V_WREADY;
        else 
            ap_sig_ioackin_a_V_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    brmerge1_fu_1056_p2 <= (tmp_11_fu_1050_p2 or swap_timeout_load_reg_1405);
    brmerge_fu_969_p2 <= (swap_timeout_load_no_fu_964_p2 or bufstatus_load_phi_reg_1400);
    buffer_seq_addr_2_gep_fu_393_p3 <= ap_const_lv64_0(1 - 1 downto 0);
    buffer_seq_addr_3_gep_fu_402_p3 <= ap_const_lv64_1(1 - 1 downto 0);

    buffer_seq_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state14, ap_CS_fsm_state2, buffer_seq_addr_2_gep_fu_393_p3, ap_CS_fsm_state13, buffer_seq_addr_3_gep_fu_402_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            buffer_seq_address0 <= buffer_seq_addr_3_gep_fu_402_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            buffer_seq_address0 <= buffer_seq_addr_2_gep_fu_393_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buffer_seq_address0 <= ap_const_lv64_1(1 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            buffer_seq_address0 <= ap_const_lv64_0(1 - 1 downto 0);
        else 
            buffer_seq_address0 <= "X";
        end if; 
    end process;


    buffer_seq_ce0_assign_proc : process(stream0_V_V_TVALID, ap_CS_fsm_state1, ap_predicate_op83_read_state1, ap_CS_fsm_state14, ap_CS_fsm_state2, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state14) or (not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            buffer_seq_ce0 <= ap_const_logic_1;
        else 
            buffer_seq_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_seq_d0_assign_proc : process(bsq_0, bsq_1, ap_CS_fsm_state1, ap_CS_fsm_state14, ap_CS_fsm_state2, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            buffer_seq_d0 <= bsq_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            buffer_seq_d0 <= bsq_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buffer_seq_d0 <= ap_const_lv64_0;
        else 
            buffer_seq_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buffer_seq_we0_assign_proc : process(stream0_V_V_TVALID, ap_CS_fsm_state1, run_read_read_fu_198_p2, ap_predicate_op83_read_state1, bufstatus_load_phi_reg_1400, tmp_reg_1418, tmp_5_reg_1427, brmerge_reg_1442, brmerge1_reg_1476, ap_CS_fsm_state14, ap_CS_fsm_state2, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0)))) or (not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (run_read_read_fu_198_p2 = ap_const_lv1_0)))) then 
            buffer_seq_we0 <= ap_const_logic_1;
        else 
            buffer_seq_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_status_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state2, tmp_16_fu_1128_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            buffer_status <= tmp_16_fu_1128_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buffer_status <= ap_const_lv32_0;
        else 
            buffer_status <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buffer_status_ap_vld_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            buffer_status_ap_vld <= ap_const_logic_1;
        else 
            buffer_status_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bufsize_address0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state1, tmp_3_reg_1395, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            bufsize_address0 <= tmp_3_reg_1395(1 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bufsize_address0 <= ap_const_lv64_1(1 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            bufsize_address0 <= ap_const_lv64_0(1 - 1 downto 0);
        else 
            bufsize_address0 <= "X";
        end if; 
    end process;


    bufsize_ce0_assign_proc : process(stream0_V_V_TVALID, ap_CS_fsm_state12, ap_CS_fsm_state1, a_V_BVALID, ap_predicate_op83_read_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            bufsize_ce0 <= ap_const_logic_1;
        else 
            bufsize_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bufsize_d0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state1, tmp_10_fu_1044_p2, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            bufsize_d0 <= tmp_10_fu_1044_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            bufsize_d0 <= ap_const_lv32_0;
        else 
            bufsize_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bufsize_we0_assign_proc : process(stream0_V_V_TVALID, ap_CS_fsm_state12, ap_CS_fsm_state1, run_read_read_fu_198_p2, a_V_BVALID, ap_predicate_op83_read_state1, brmerge1_fu_1056_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (run_read_read_fu_198_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = a_V_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state12) and (brmerge1_fu_1056_p2 = ap_const_lv1_1)))) then 
            bufsize_we0 <= ap_const_logic_1;
        else 
            bufsize_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bufstatus_0_flag_1_s_fu_1168_p2 <= (tmp_25_fu_1159_p1 and tmp_18_fu_1147_p2);
    bufstatus_0_flag_2_fu_1174_p2 <= (bufstatus_0_flag_1_s_fu_1168_p2 or ap_phi_mux_bufstatus_0_flag_1_phi_fu_546_p6);
    bufstatus_0_load_s_fu_1066_p2 <= (not_bufsel_load_t_fu_1061_p2 or bufstatus_0_load_reg_1346);
    bufstatus_0_new_2_fu_1180_p2 <= (tmp_19_fu_1162_p2 or tmp_17_fu_1143_p1);
    bufstatus_1_flag_1_s_fu_1219_p2 <= (tmp_27_fu_1206_p3 and rev_fu_1200_p2);
    bufstatus_1_flag_2_fu_1225_p2 <= (bufstatus_1_flag_1_s_fu_1219_p2 or ap_phi_mux_bufstatus_1_flag_1_phi_fu_571_p6);
    bufstatus_1_new_2_fu_1231_p2 <= (tmp_26_fu_1192_p3 or rev8_fu_1213_p2);
    bufstatus_load_4_fu_1186_p2 <= (bufstatus_0_new_2_fu_1180_p2 and ap_phi_mux_bufstatus_0_loc_1_phi_fu_559_p6);
    bufstatus_load_5_fu_1237_p2 <= (bufstatus_1_new_2_fu_1231_p2 and ap_phi_mux_bufstatus_1_loc_1_phi_fu_584_p6);
    bufstatus_load_phi_fu_879_p3 <= 
        bufstatus_1 when (bufsel(0) = '1') else 
        bufstatus_0;
    debug_buf0_p <= ap_phi_mux_buf_p_loc_phi_fu_691_p6;

    debug_buf0_p_ap_vld_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            debug_buf0_p_ap_vld <= ap_const_logic_1;
        else 
            debug_buf0_p_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    
    debug_buffer_status_proc : process(tmp_20_fu_1248_p1, bufstatus_load_5_fu_1237_p2)
    begin
        debug_buffer_status <= tmp_20_fu_1248_p1;
        debug_buffer_status(1) <= bufstatus_load_5_fu_1237_p2(0);
    end process;


    debug_buffer_status_ap_vld_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            debug_buffer_status_ap_vld <= ap_const_logic_1;
        else 
            debug_buffer_status_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    debug_bufsel_0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_bufsel_load_3_phi_fu_717_p6),32));

    debug_bufsel_0_ap_vld_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            debug_bufsel_0_ap_vld <= ap_const_logic_1;
        else 
            debug_bufsel_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    debug_dst_var_V <= stream0_V_V_TDATA;

    debug_dst_var_V_ap_vld_assign_proc : process(stream0_V_V_TVALID, ap_CS_fsm_state1, ap_predicate_op83_read_state1)
    begin
        if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) then 
            debug_dst_var_V_ap_vld <= ap_const_logic_1;
        else 
            debug_dst_var_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    debug_inbuffer_pointer <= tmp_9_fu_911_p2;

    debug_inbuffer_pointer_ap_vld_assign_proc : process(stream0_V_V_TVALID, ap_CS_fsm_state1, ap_predicate_op83_read_state1)
    begin
        if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) then 
            debug_inbuffer_pointer_ap_vld <= ap_const_logic_1;
        else 
            debug_inbuffer_pointer_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    exitcond3_fu_1027_p2 <= "1" when (indvar_reg_531 = ap_const_lv13_1000) else "0";
    fifo_resetn <= ap_phi_mux_clear_fifo_load_phi_fu_808_p4(0);

    inbuffer_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_8_fu_901_p1, tmp_12_fu_1039_p1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            inbuffer_V_address0 <= tmp_12_fu_1039_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            inbuffer_V_address0 <= tmp_8_fu_901_p1(12 - 1 downto 0);
        else 
            inbuffer_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    inbuffer_V_address1 <= tmp_s_fu_918_p1(12 - 1 downto 0);

    inbuffer_V_ce0_assign_proc : process(stream0_V_V_TVALID, ap_CS_fsm_state1, ap_predicate_op83_read_state1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            inbuffer_V_ce0 <= ap_const_logic_1;
        else 
            inbuffer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inbuffer_V_ce1_assign_proc : process(stream0_V_V_TVALID, ap_CS_fsm_state1, ap_predicate_op83_read_state1)
    begin
        if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            inbuffer_V_ce1 <= ap_const_logic_1;
        else 
            inbuffer_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    inbuffer_V_d0 <= stream0_V_V_TDATA(32 - 1 downto 0);
    inbuffer_V_d1 <= stream0_V_V_TDATA(63 downto 32);

    inbuffer_V_we0_assign_proc : process(stream0_V_V_TVALID, ap_CS_fsm_state1, ap_predicate_op83_read_state1)
    begin
        if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) then 
            inbuffer_V_we0 <= ap_const_logic_1;
        else 
            inbuffer_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inbuffer_V_we1_assign_proc : process(stream0_V_V_TVALID, ap_CS_fsm_state1, ap_predicate_op83_read_state1)
    begin
        if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) then 
            inbuffer_V_we1 <= ap_const_logic_1;
        else 
            inbuffer_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    indvar_next_fu_1033_p2 <= std_logic_vector(unsigned(indvar_reg_531) + unsigned(ap_const_lv13_1));

    interrupt_r_assign_proc : process(bufstatus_load_phi_reg_1400, tmp_reg_1418, tmp_5_reg_1427, brmerge_reg_1442, brmerge1_reg_1476, ap_CS_fsm_state14, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0))))) then 
            interrupt_r <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            interrupt_r <= ap_const_logic_0;
        else 
            interrupt_r <= 'X';
        end if; 
    end process;


    interrupt_r_ap_vld_assign_proc : process(bufstatus_load_phi_reg_1400, tmp_reg_1418, tmp_5_reg_1427, brmerge_reg_1442, brmerge1_reg_1476, ap_CS_fsm_state14, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (((brmerge1_reg_1476 = ap_const_lv1_1) and (brmerge_reg_1442 = ap_const_lv1_0)) or ((brmerge1_reg_1476 = ap_const_lv1_1) and (tmp_5_reg_1427 = ap_const_lv1_1) and (tmp_reg_1418 = ap_const_lv1_1) and (bufstatus_load_phi_reg_1400 = ap_const_lv1_0)))))) then 
            interrupt_r_ap_vld <= ap_const_logic_1;
        else 
            interrupt_r_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    not_bufsel_load_t_fu_1061_p2 <= (bufsel_load_reg_1385 xor ap_const_lv1_1);
    op2_cast_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_974_p4),31));
    p_bufstatus_1_load_fu_1071_p2 <= (bufstatus_1_load_reg_1353 or bufsel_load_reg_1385);
        p_sum1_cast_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_sum1_fu_1011_p2),64));

    p_sum1_fu_1011_p2 <= std_logic_vector(unsigned(tmp3_cast_fu_1007_p1) + unsigned(tmp_2_cast_fu_987_p1));
    rev8_fu_1213_p2 <= (tmp_27_fu_1206_p3 xor ap_const_lv1_1);
    rev_fu_1200_p2 <= (tmp_26_fu_1192_p3 xor ap_const_lv1_1);
    run_read_read_fu_198_p2 <= (0=>run, others=>'-');

    stat_counter_address0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stat_counter_address0 <= ap_const_lv64_4(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stat_counter_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            stat_counter_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            stat_counter_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            stat_counter_address0 <= "XX";
        end if; 
    end process;


    stat_counter_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            stat_counter_ce0 <= ap_const_logic_1;
        else 
            stat_counter_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stat_counter_d0_assign_proc : process(ap_CS_fsm_state14, out_counter_loc_2_reg_624, lost_counter_loc_2_reg_640, ap_CS_fsm_state17, ap_CS_fsm_state15, ap_CS_fsm_state16, tmp_22_fu_1263_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stat_counter_d0 <= tmp_22_fu_1263_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stat_counter_d0 <= lost_counter_loc_2_reg_640;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            stat_counter_d0 <= out_counter_loc_2_reg_624;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            stat_counter_d0 <= ap_const_lv64_0;
        else 
            stat_counter_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stat_counter_we0_assign_proc : process(run_read_reg_1330, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (run_read_reg_1330 = ap_const_lv1_1)))) then 
            stat_counter_we0 <= ap_const_logic_1;
        else 
            stat_counter_we0 <= ap_const_logic_0;
        end if; 
    end process;

    storemerge_fu_1286_p3 <= 
        ap_const_lv32_0 when (tmp_23_fu_1268_p2(0) = '1') else 
        tmp_24_fu_1274_p2;

    stream0_V_V_TDATA_blk_n_assign_proc : process(stream0_V_V_TVALID, ap_CS_fsm_state1, run_read_read_fu_198_p2, bufstatus_load_phi_fu_879_p3, tmp_nbreadreq_fu_210_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_nbreadreq_fu_210_p3 = ap_const_lv1_1) and (run_read_read_fu_198_p2 = ap_const_lv1_1) and (bufstatus_load_phi_fu_879_p3 = ap_const_lv1_0))) then 
            stream0_V_V_TDATA_blk_n <= stream0_V_V_TVALID;
        else 
            stream0_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream0_V_V_TREADY_assign_proc : process(stream0_V_V_TVALID, ap_CS_fsm_state1, ap_predicate_op83_read_state1)
    begin
        if ((not(((stream0_V_V_TVALID = ap_const_logic_0) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_predicate_op83_read_state1 = ap_const_boolean_1))) then 
            stream0_V_V_TREADY <= ap_const_logic_1;
        else 
            stream0_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    swap_timeout_flag_1_fu_1280_p2 <= (tmp_23_fu_1268_p2 or swap_timeout_flag_reg_656);
    swap_timeout_load_no_fu_964_p2 <= (swap_timeout_load_reg_1405 xor ap_const_lv1_1);
    tmp3_cast_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_1001_p2),33));
    tmp3_fu_1001_p2 <= std_logic_vector(unsigned(tmp_11_cast_fu_997_p1) + unsigned(op2_cast_fu_983_p1));
    tmp_10_fu_1044_p2 <= std_logic_vector(unsigned(buf_p_load_reg_1411) + unsigned(inbuffer_pointer_loc_1_reg_496));
    tmp_11_cast_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_990_p3),31));
    tmp_11_fu_1050_p2 <= "1" when (tmp_10_fu_1044_p2 = ap_const_lv32_400000) else "0";
    tmp_12_fu_1039_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvar_reg_531),64));
    tmp_14_fu_1085_p2 <= std_logic_vector(unsigned(bsc) + unsigned(ap_const_lv64_1));
    tmp_15_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_bufstatus_0_loc_1_phi_fu_559_p6),32));
    
    tmp_16_fu_1128_p4_proc : process(tmp_15_fu_1124_p1, ap_phi_mux_bufstatus_1_loc_1_phi_fu_584_p6)
    begin
        tmp_16_fu_1128_p4 <= tmp_15_fu_1124_p1;
        tmp_16_fu_1128_p4(1) <= ap_phi_mux_bufstatus_1_loc_1_phi_fu_584_p6(0);
    end process;

    tmp_17_fu_1143_p1 <= obuffer_ack(1 - 1 downto 0);
    tmp_18_fu_1147_p2 <= (tmp_17_fu_1143_p1 xor ap_const_lv1_1);
    tmp_19_fu_1162_p2 <= (tmp_25_fu_1159_p1 xor ap_const_lv1_1);
    tmp_1_fu_974_p4 <= DDROFFSET_V_read_reg_1325(31 downto 2);
    tmp_20_fu_1248_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bufstatus_load_4_fu_1186_p2),32));
    tmp_22_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buftimeout_loc_reg_701),64));
    tmp_23_fu_1268_p2 <= "1" when (buftimeout_loc_reg_701 = ap_const_lv32_989680) else "0";
    tmp_24_fu_1274_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(buftimeout_loc_reg_701));
    tmp_25_fu_1159_p1 <= buffer_ack_read_reg_1334(1 - 1 downto 0);
    tmp_26_fu_1192_p3 <= obuffer_ack(1 downto 1);
    tmp_27_fu_1206_p3 <= buffer_ack_read_reg_1334(1 downto 1);
        tmp_2_cast_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(buf_p_load_reg_1411),33));

    tmp_2_fu_990_p3 <= (bufsel_load_reg_1385 & ap_const_lv22_0);
    tmp_3_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bufsel),64));
    tmp_4_fu_952_p2 <= std_logic_vector(unsigned(lost_counter) + unsigned(ap_const_lv64_1));
    tmp_5_fu_934_p2 <= "1" when (tmp_9_fu_911_p2 = ap_const_lv32_1000) else "0";
    tmp_6_fu_940_p2 <= std_logic_vector(unsigned(ap_const_lv64_1) + unsigned(out_counter));
    tmp_7_fu_895_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(inbuffer_pointer));
        tmp_8_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inbuffer_pointer),64));

    tmp_9_fu_911_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(inbuffer_pointer));
    tmp_nbreadreq_fu_210_p3 <= (0=>stream0_V_V_TVALID, others=>'-');
        tmp_s_fu_918_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_895_p2),64));

end behav;
