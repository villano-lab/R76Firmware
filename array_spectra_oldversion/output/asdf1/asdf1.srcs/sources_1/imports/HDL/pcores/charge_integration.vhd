-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity charge_integration is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    in1_V : IN STD_LOGIC_VECTOR (15 downto 0);
    in1_V_ap_vld : IN STD_LOGIC;
    base_line_V : IN STD_LOGIC_VECTOR (15 downto 0);
    trigger_signal : IN STD_LOGIC;
    p_int_length_V : IN STD_LOGIC_VECTOR (15 downto 0);
    p_pre_length_V : IN STD_LOGIC_VECTOR (15 downto 0);
    p_gain_V : IN STD_LOGIC_VECTOR (15 downto 0);
    p_offset_V : IN STD_LOGIC_VECTOR (15 downto 0);
    p_pileup_inib_V : IN STD_LOGIC_VECTOR (15 downto 0);
    enable : IN STD_LOGIC;
    energy_out_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    energy_trigger : OUT STD_LOGIC;
    energy_trigger_ap_vld : OUT STD_LOGIC;
    p_integrate : OUT STD_LOGIC;
    p_pileup : OUT STD_LOGIC;
    p_busy : OUT STD_LOGIC );
end;


architecture behav of charge_integration is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "charge_integration,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160tffg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.930000,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=1,HLS_SYN_DSP=2,HLS_SYN_FF=290,HLS_SYN_LUT=297}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";

    signal in1_V_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal in1_V_in_sig : STD_LOGIC_VECTOR (15 downto 0);
    signal in1_V_ap_vld_preg : STD_LOGIC := '0';
    signal in1_V_ap_vld_in_sig : STD_LOGIC;
    signal pileup_inib_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal write_pointer_V : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal pre_intbuff_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal pre_intbuff_V_ce0 : STD_LOGIC;
    signal pre_intbuff_V_we0 : STD_LOGIC;
    signal pre_intbuff_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal pre_intbuff_V_ce1 : STD_LOGIC;
    signal pre_intbuff_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_pointer_V : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal pre_length_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001010";
    signal intState : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal integration : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal baseline_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal icounter_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal energy : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pile_up_counter_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal i_integrate : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal i_busy : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal pileup_rj_enable : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal i_pileup : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal int_length_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000001100100";
    signal gain_V : STD_LOGIC_VECTOR (15 downto 0) := "0000001001011000";
    signal offset_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal in1_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal enable_read_read_fu_142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trigger_signal_read_read_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trigger_signal_read_reg_708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708 : STD_LOGIC_VECTOR (0 downto 0);
    signal base_line_V_read_reg_712 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_pipeline_reg_pp0_iter1_base_line_V_read_reg_712 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_353_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_reg_718 : STD_LOGIC_VECTOR (2 downto 0);
    signal intState_load_load_fu_371_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal intState_load_reg_723 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter1_intState_load_reg_723 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter2_intState_load_reg_723 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_727 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_12_reg_727 : STD_LOGIC_VECTOR (0 downto 0);
    signal pileup_rj_enable_loa_load_fu_419_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal pileup_rj_enable_loa_reg_731 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_pileup_rj_enable_loa_reg_731 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_735 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_10_reg_735 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_744 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_553_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_reg_748 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_phi_precharge_reg_pp0_iter2_energy_trigger_new_reg_255 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_reg_255 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_precharge_reg_pp0_iter0_energy_trigger_new_1_reg_268 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_precharge_reg_pp0_iter1_energy_trigger_new_1_reg_268 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_precharge_reg_pp0_iter2_energy_trigger_new_1_reg_268 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_1_reg_268 : STD_LOGIC_VECTOR (0 downto 0);
    signal energy_trigger_new_1_phi_fu_272_p14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_2_reg_295 : STD_LOGIC_VECTOR (0 downto 0);
    signal energy_trigger_new_2_phi_fu_299_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_precharge_reg_pp0_iter2_energy_trigger_new_2_reg_295 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_340_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_497_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_359_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_611_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_642_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_423_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_389_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_349_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal lhs_V_1_fu_525_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal rhs_V_1_fu_533_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_1_fu_537_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_15_fu_549_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_571_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_571_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_571_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal lhs_V_3_fu_593_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_3_fu_597_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_3_fu_601_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_9_fu_607_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_2_fu_629_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_2_fu_633_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_2_fu_636_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_idle_pp0 : STD_LOGIC;
    signal r_V_fu_571_p10 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_condition_163 : BOOLEAN;
    signal ap_condition_177 : BOOLEAN;
    signal ap_condition_485 : BOOLEAN;
    signal ap_condition_489 : BOOLEAN;
    signal ap_condition_483 : BOOLEAN;
    signal ap_condition_146 : BOOLEAN;
    signal ap_condition_275 : BOOLEAN;
    signal ap_condition_283 : BOOLEAN;
    signal ap_condition_287 : BOOLEAN;
    signal ap_condition_504 : BOOLEAN;
    signal ap_condition_113 : BOOLEAN;

    component charge_integratiobkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    pre_intbuff_V_U : component charge_integratiobkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pre_intbuff_V_address0,
        ce0 => pre_intbuff_V_ce0,
        we0 => pre_intbuff_V_we0,
        d0 => in1_V_in_sig,
        address1 => pre_intbuff_V_address1,
        ce1 => pre_intbuff_V_ce1,
        q1 => pre_intbuff_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (not(((in1_V_ap_vld_in_sig = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (not(((in1_V_ap_vld_in_sig = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    in1_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in1_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and ap_const_boolean_1 and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))))) then 
                    in1_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = in1_V_ap_vld)) then 
                    in1_V_ap_vld_preg <= in1_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    in1_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in1_V_preg <= ap_const_lv16_0;
            else
                if ((ap_const_logic_1 = in1_V_ap_vld)) then 
                    in1_V_preg <= in1_V;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_precharge_reg_pp0_iter1_energy_trigger_new_1_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and ap_const_boolean_1 and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and ((not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (intState_load_load_fu_371_p1 = ap_const_lv3_6)) or (not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (intState_load_load_fu_371_p1 = ap_const_lv3_7))))) then 
                ap_phi_precharge_reg_pp0_iter1_energy_trigger_new_1_reg_268 <= ap_const_lv1_0;
            elsif (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and ap_const_boolean_1 and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))))) then 
                ap_phi_precharge_reg_pp0_iter1_energy_trigger_new_1_reg_268 <= ap_phi_precharge_reg_pp0_iter0_energy_trigger_new_1_reg_268;
            end if; 
        end if;
    end process;

    ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_1_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_4)) or (not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_2)) or (not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_5)) or (not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_1)) or (not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv3_0 = ap_pipeline_reg_pp0_iter1_intState_load_reg_723)))) then 
                ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_1_reg_268 <= ap_const_lv1_0;
            elsif ((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
                ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_1_reg_268 <= ap_phi_precharge_reg_pp0_iter2_energy_trigger_new_1_reg_268;
            end if; 
        end if;
    end process;

    ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_2_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then
                if ((ap_const_lv1_0 = enable_read_read_fu_142_p2)) then 
                    ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_2_reg_295 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_2_reg_295 <= ap_phi_precharge_reg_pp0_iter2_energy_trigger_new_2_reg_295;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then
                if ((ap_condition_177 = ap_const_boolean_1)) then 
                    ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_reg_255 <= ap_const_lv1_0;
                elsif ((ap_condition_163 = ap_const_boolean_1)) then 
                    ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_reg_255 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_reg_255 <= ap_phi_precharge_reg_pp0_iter2_energy_trigger_new_reg_255;
                end if;
            end if; 
        end if;
    end process;

    i_busy_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv3_0 = ap_pipeline_reg_pp0_iter1_intState_load_reg_723) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708)))) then 
                i_busy <= ap_const_lv1_1;
            elsif (((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_3) and not((ap_const_lv1_0 = tmp_1_fu_543_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_12_reg_727))))) then 
                i_busy <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    i_integrate_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv3_0 = ap_pipeline_reg_pp0_iter1_intState_load_reg_723) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708)))) then 
                i_integrate <= ap_const_lv1_1;
            elsif (((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and ((not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_10_reg_735))) or (not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_pileup_rj_enable_loa_reg_731) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_10_reg_735))))) or (not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708)) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_pileup_rj_enable_loa_reg_731))))) then 
                i_integrate <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    i_pileup_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_483 = ap_const_boolean_1)) then
                if ((ap_condition_489 = ap_const_boolean_1)) then 
                    i_pileup <= ap_const_lv1_1;
                elsif ((ap_condition_485 = ap_const_boolean_1)) then 
                    i_pileup <= ap_const_lv1_0;
                end if;
            end if; 
        end if;
    end process;

    icounter_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))))) then
                if ((ap_condition_275 = ap_const_boolean_1)) then 
                    icounter_V <= ap_const_lv16_0;
                elsif ((ap_condition_146 = ap_const_boolean_1)) then 
                    icounter_V <= tmp_s_fu_423_p2;
                end if;
            end if; 
        end if;
    end process;

    intState_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and ap_const_boolean_1 and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and not((ap_const_lv1_0 = trigger_signal_read_read_fu_178_p2)) and (ap_const_lv3_0 = intState_load_load_fu_371_p1))) then 
                intState <= ap_const_lv3_1;
            elsif (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and ap_const_boolean_1 and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and ((not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_lv1_0 = trigger_signal_read_read_fu_178_p2) and (intState_load_load_fu_371_p1 = ap_const_lv3_1) and not((ap_const_lv1_0 = tmp_10_fu_439_p2))) or (not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (intState_load_load_fu_371_p1 = ap_const_lv3_1) and (ap_const_lv1_0 = pileup_rj_enable_loa_load_fu_419_p1) and not((ap_const_lv1_0 = tmp_10_fu_439_p2)))))) then 
                intState <= ap_const_lv3_2;
            elsif (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and ap_const_boolean_1 and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (intState_load_load_fu_371_p1 = ap_const_lv3_2))) then 
                intState <= ap_const_lv3_3;
            elsif (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and ap_const_boolean_1 and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (intState_load_load_fu_371_p1 = ap_const_lv3_4))) then 
                intState <= ap_const_lv3_5;
            elsif ((((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (intState_load_load_fu_371_p1 = ap_const_lv3_5) and not((ap_const_lv1_0 = trigger_signal_read_read_fu_178_p2))) or ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (intState_load_load_fu_371_p1 = ap_const_lv3_1) and not((ap_const_lv1_0 = trigger_signal_read_read_fu_178_p2)) and not((ap_const_lv1_0 = pileup_rj_enable_loa_load_fu_419_p1))))) then 
                intState <= ap_const_lv3_4;
            elsif ((((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and (ap_const_lv1_0 = enable_read_read_fu_142_p2)) or ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (intState_load_load_fu_371_p1 = ap_const_lv3_5) and (ap_const_lv1_0 = trigger_signal_read_read_fu_178_p2) and not((ap_const_lv1_0 = tmp_12_fu_383_p2))) or ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (intState_load_load_fu_371_p1 = ap_const_lv3_3)))) then 
                intState <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    integration_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then
                if ((ap_condition_287 = ap_const_boolean_1)) then 
                    integration <= tmp_8_fu_642_p1;
                elsif ((ap_condition_283 = ap_const_boolean_1)) then 
                    integration <= tmp_7_fu_611_p2;
                end if;
            end if; 
        end if;
    end process;

    pile_up_counter_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_113 = ap_const_boolean_1)) then
                if ((intState_load_load_fu_371_p1 = ap_const_lv3_4)) then 
                    pile_up_counter_V <= pileup_inib_V;
                elsif ((ap_condition_504 = ap_const_boolean_1)) then 
                    pile_up_counter_V <= tmp_13_fu_389_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                ap_phi_precharge_reg_pp0_iter2_energy_trigger_new_1_reg_268 <= ap_phi_precharge_reg_pp0_iter1_energy_trigger_new_1_reg_268;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))))) then
                ap_pipeline_reg_pp0_iter1_base_line_V_read_reg_712 <= base_line_V_read_reg_712;
                ap_pipeline_reg_pp0_iter1_intState_load_reg_723 <= intState_load_reg_723;
                ap_pipeline_reg_pp0_iter1_pileup_rj_enable_loa_reg_731 <= pileup_rj_enable_loa_reg_731;
                ap_pipeline_reg_pp0_iter1_tmp_10_reg_735 <= tmp_10_reg_735;
                ap_pipeline_reg_pp0_iter1_tmp_12_reg_727 <= tmp_12_reg_727;
                ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708 <= trigger_signal_read_reg_708;
                base_line_V_read_reg_712 <= base_line_V;
                trigger_signal_read_reg_708 <= (0=>trigger_signal, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((in1_V_ap_vld_in_sig = ap_const_logic_0)))) then
                ap_pipeline_reg_pp0_iter2_intState_load_reg_723 <= ap_pipeline_reg_pp0_iter1_intState_load_reg_723;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv3_0 = ap_pipeline_reg_pp0_iter1_intState_load_reg_723) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708)))) then
                baseline_V <= ap_pipeline_reg_pp0_iter1_base_line_V_read_reg_712;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_2))) then
                energy <= r_V_fu_571_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then
                gain_V <= p_gain_V;
                offset_V <= p_offset_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)))) then
                intState_load_reg_723 <= intState;
                tmp_5_reg_718 <= tmp_5_fu_353_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and ap_const_boolean_1 and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))))) then
                int_length_V <= p_int_length_V;
                pileup_inib_V <= p_pileup_inib_V;
                pre_length_V <= p_pre_length_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and ap_const_boolean_1 and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)))) then
                pileup_rj_enable <= tmp_14_fu_463_p2;
                write_pointer_V <= tmp_6_fu_359_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (intState_load_load_fu_371_p1 = ap_const_lv3_1) and not((ap_const_lv1_0 = trigger_signal_read_read_fu_178_p2)))) then
                pileup_rj_enable_loa_reg_731 <= pileup_rj_enable;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                read_pointer_V <= tmp_5_reg_718;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and ((not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_lv1_0 = trigger_signal_read_read_fu_178_p2) and (intState_load_load_fu_371_p1 = ap_const_lv3_1)) or (not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (intState_load_load_fu_371_p1 = ap_const_lv3_1) and (ap_const_lv1_0 = pileup_rj_enable_loa_load_fu_419_p1))))) then
                tmp_10_reg_735 <= tmp_10_fu_439_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_3) and not((ap_const_lv1_0 = tmp_1_fu_543_p2)))) then
                tmp_11_reg_748 <= tmp_11_fu_553_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (intState_load_load_fu_371_p1 = ap_const_lv3_5) and (ap_const_lv1_0 = trigger_signal_read_read_fu_178_p2))) then
                tmp_12_reg_727 <= tmp_12_fu_383_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_3))) then
                tmp_1_reg_744 <= tmp_1_fu_543_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (in1_V_ap_vld_in_sig, ap_CS_fsm, ap_pipeline_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0 downto 0);

    ap_condition_113_assign_proc : process(in1_V_ap_vld_in_sig, ap_CS_fsm_pp0_stage0, enable_read_read_fu_142_p2)
    begin
                ap_condition_113 <= ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)));
    end process;


    ap_condition_146_assign_proc : process(enable_read_read_fu_142_p2, trigger_signal_read_read_fu_178_p2, intState_load_load_fu_371_p1, pileup_rj_enable_loa_load_fu_419_p1)
    begin
                ap_condition_146 <= ((not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_lv1_0 = trigger_signal_read_read_fu_178_p2) and (intState_load_load_fu_371_p1 = ap_const_lv3_1)) or (not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (intState_load_load_fu_371_p1 = ap_const_lv3_1) and (ap_const_lv1_0 = pileup_rj_enable_loa_load_fu_419_p1)));
    end process;


    ap_condition_163_assign_proc : process(enable_read_read_fu_142_p2, ap_pipeline_reg_pp0_iter1_intState_load_reg_723, tmp_1_fu_543_p2)
    begin
                ap_condition_163 <= (not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_3) and not((ap_const_lv1_0 = tmp_1_fu_543_p2)));
    end process;


    ap_condition_177_assign_proc : process(enable_read_read_fu_142_p2, ap_pipeline_reg_pp0_iter1_intState_load_reg_723, tmp_1_fu_543_p2)
    begin
                ap_condition_177 <= (not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_3) and (ap_const_lv1_0 = tmp_1_fu_543_p2));
    end process;


    ap_condition_275_assign_proc : process(enable_read_read_fu_142_p2, trigger_signal_read_read_fu_178_p2, intState_load_load_fu_371_p1)
    begin
                ap_condition_275 <= (not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and not((ap_const_lv1_0 = trigger_signal_read_read_fu_178_p2)) and (ap_const_lv3_0 = intState_load_load_fu_371_p1));
    end process;


    ap_condition_283_assign_proc : process(enable_read_read_fu_142_p2, ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708, ap_pipeline_reg_pp0_iter1_intState_load_reg_723, ap_pipeline_reg_pp0_iter1_pileup_rj_enable_loa_reg_731)
    begin
                ap_condition_283 <= ((not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708)) or (not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_pileup_rj_enable_loa_reg_731)));
    end process;


    ap_condition_287_assign_proc : process(enable_read_read_fu_142_p2, ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708, ap_pipeline_reg_pp0_iter1_intState_load_reg_723)
    begin
                ap_condition_287 <= (not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_lv3_0 = ap_pipeline_reg_pp0_iter1_intState_load_reg_723) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708)));
    end process;


    ap_condition_483_assign_proc : process(in1_V_ap_vld_in_sig, enable_read_read_fu_142_p2, ap_enable_reg_pp0_iter2)
    begin
                ap_condition_483 <= (not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2));
    end process;


    ap_condition_485_assign_proc : process(ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708, ap_pipeline_reg_pp0_iter1_intState_load_reg_723, ap_pipeline_reg_pp0_iter1_tmp_12_reg_727)
    begin
                ap_condition_485 <= ((ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_12_reg_727)));
    end process;


    ap_condition_489_assign_proc : process(ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708, ap_pipeline_reg_pp0_iter1_intState_load_reg_723, ap_pipeline_reg_pp0_iter1_pileup_rj_enable_loa_reg_731)
    begin
                ap_condition_489 <= ((ap_pipeline_reg_pp0_iter1_intState_load_reg_723 = ap_const_lv3_1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_trigger_signal_read_reg_708)) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_pileup_rj_enable_loa_reg_731)));
    end process;


    ap_condition_504_assign_proc : process(trigger_signal_read_read_fu_178_p2, intState_load_load_fu_371_p1, tmp_12_fu_383_p2)
    begin
                ap_condition_504 <= ((intState_load_load_fu_371_p1 = ap_const_lv3_5) and (ap_const_lv1_0 = trigger_signal_read_read_fu_178_p2) and (ap_const_lv1_0 = tmp_12_fu_383_p2));
    end process;

    ap_phi_precharge_reg_pp0_iter0_energy_trigger_new_1_reg_268 <= "X";
    ap_phi_precharge_reg_pp0_iter2_energy_trigger_new_2_reg_295 <= "X";
    ap_phi_precharge_reg_pp0_iter2_energy_trigger_new_reg_255 <= "X";
    ap_pipeline_idle_pp0 <= ap_const_logic_0;
    enable_read_read_fu_142_p2 <= (0=>enable, others=>'-');
    energy_out_V <= tmp_11_reg_748;
    energy_trigger <= energy_trigger_new_2_phi_fu_299_p4(0);

    energy_trigger_ap_vld_assign_proc : process(in1_V_ap_vld_in_sig, ap_enable_reg_pp0_iter3)
    begin
        if ((not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            energy_trigger_ap_vld <= ap_const_logic_1;
        else 
            energy_trigger_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    energy_trigger_new_1_phi_fu_272_p14_assign_proc : process(enable_read_read_fu_142_p2, ap_pipeline_reg_pp0_iter2_intState_load_reg_723, ap_enable_reg_pp0_iter3, ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_reg_255, ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_1_reg_268)
    begin
        if ((not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_pipeline_reg_pp0_iter2_intState_load_reg_723 = ap_const_lv3_3))) then 
            energy_trigger_new_1_phi_fu_272_p14 <= ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_reg_255;
        else 
            energy_trigger_new_1_phi_fu_272_p14 <= ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_1_reg_268;
        end if; 
    end process;


    energy_trigger_new_2_phi_fu_299_p4_assign_proc : process(enable_read_read_fu_142_p2, ap_enable_reg_pp0_iter3, energy_trigger_new_1_phi_fu_272_p14, ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_2_reg_295)
    begin
        if ((not((ap_const_lv1_0 = enable_read_read_fu_142_p2)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            energy_trigger_new_2_phi_fu_299_p4 <= energy_trigger_new_1_phi_fu_272_p14;
        else 
            energy_trigger_new_2_phi_fu_299_p4 <= ap_phi_precharge_reg_pp0_iter3_energy_trigger_new_2_reg_295;
        end if; 
    end process;


    in1_V_ap_vld_in_sig_assign_proc : process(in1_V_ap_vld, in1_V_ap_vld_preg)
    begin
        if ((ap_const_logic_1 = in1_V_ap_vld)) then 
            in1_V_ap_vld_in_sig <= in1_V_ap_vld;
        else 
            in1_V_ap_vld_in_sig <= in1_V_ap_vld_preg;
        end if; 
    end process;


    in1_V_blk_n_assign_proc : process(in1_V_ap_vld, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and ap_const_boolean_1)) then 
            in1_V_blk_n <= in1_V_ap_vld;
        else 
            in1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in1_V_in_sig_assign_proc : process(in1_V, in1_V_preg, in1_V_ap_vld)
    begin
        if ((ap_const_logic_1 = in1_V_ap_vld)) then 
            in1_V_in_sig <= in1_V;
        else 
            in1_V_in_sig <= in1_V_preg;
        end if; 
    end process;

    intState_load_load_fu_371_p1 <= intState;
        lhs_V_1_fu_525_p1 <= std_logic_vector(resize(signed(energy),33));

    lhs_V_2_fu_629_p1 <= std_logic_vector(resize(unsigned(pre_intbuff_V_q1),17));
    lhs_V_3_fu_593_p1 <= std_logic_vector(resize(unsigned(pre_intbuff_V_q1),17));
    p_busy <= i_busy(0);
    p_integrate <= i_integrate(0);
    p_pileup <= i_pileup(0);
    pileup_rj_enable_loa_load_fu_419_p1 <= pileup_rj_enable;
    pre_intbuff_V_address0 <= tmp_2_fu_340_p1(7 - 1 downto 0);
    pre_intbuff_V_address1 <= tmp_3_fu_497_p1(7 - 1 downto 0);

    pre_intbuff_V_ce0_assign_proc : process(in1_V_ap_vld_in_sig, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and ap_const_boolean_1 and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))))) then 
            pre_intbuff_V_ce0 <= ap_const_logic_1;
        else 
            pre_intbuff_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pre_intbuff_V_ce1_assign_proc : process(in1_V_ap_vld_in_sig, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            pre_intbuff_V_ce1 <= ap_const_logic_1;
        else 
            pre_intbuff_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    pre_intbuff_V_we0_assign_proc : process(in1_V_ap_vld_in_sig, ap_CS_fsm_pp0_stage0, enable_read_read_fu_142_p2)
    begin
        if ((((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((in1_V_ap_vld_in_sig = ap_const_logic_0))) and not((ap_const_lv1_0 = enable_read_read_fu_142_p2))))) then 
            pre_intbuff_V_we0 <= ap_const_logic_1;
        else 
            pre_intbuff_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_1_fu_537_p2 <= std_logic_vector(signed(lhs_V_1_fu_525_p1) + signed(rhs_V_1_fu_533_p1));
    r_V_2_fu_636_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_629_p1) - unsigned(rhs_V_2_fu_633_p1));
    r_V_3_fu_601_p2 <= std_logic_vector(unsigned(lhs_V_3_fu_593_p1) - unsigned(rhs_V_3_fu_597_p1));
    r_V_fu_571_p0 <= integration;
    r_V_fu_571_p1 <= r_V_fu_571_p10(16 - 1 downto 0);
    r_V_fu_571_p10 <= std_logic_vector(resize(unsigned(gain_V),48));
    r_V_fu_571_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(r_V_fu_571_p0) * signed('0' &r_V_fu_571_p1))), 48));
    rhs_V_1_fu_533_p1 <= std_logic_vector(resize(unsigned(offset_V),33));
    rhs_V_2_fu_633_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter1_base_line_V_read_reg_712),17));
    rhs_V_3_fu_597_p1 <= std_logic_vector(resize(unsigned(baseline_V),17));
    tmp_10_fu_439_p2 <= "1" when (tmp_s_fu_423_p2 = int_length_V) else "0";
    tmp_11_fu_553_p2 <= std_logic_vector(unsigned(offset_V) + unsigned(tmp_15_fu_549_p1));
    tmp_12_fu_383_p2 <= "1" when (pile_up_counter_V = ap_const_lv16_0) else "0";
    tmp_13_fu_389_p2 <= std_logic_vector(unsigned(pile_up_counter_V) + unsigned(ap_const_lv16_FFFF));
    tmp_14_fu_463_p2 <= "0" when (pileup_inib_V = ap_const_lv16_0) else "1";
    tmp_15_fu_549_p1 <= energy(16 - 1 downto 0);
    tmp_1_fu_543_p2 <= "1" when (signed(r_V_1_fu_537_p2) > signed(ap_const_lv33_0)) else "0";
    tmp_2_fu_340_p1 <= std_logic_vector(resize(unsigned(write_pointer_V),32));
    tmp_3_fu_497_p1 <= std_logic_vector(resize(unsigned(read_pointer_V),32));
    tmp_4_fu_349_p1 <= pre_length_V(3 - 1 downto 0);
    tmp_5_fu_353_p2 <= std_logic_vector(unsigned(write_pointer_V) - unsigned(tmp_4_fu_349_p1));
    tmp_6_fu_359_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(write_pointer_V));
    tmp_7_fu_611_p2 <= std_logic_vector(unsigned(integration) + unsigned(tmp_9_fu_607_p1));
        tmp_8_fu_642_p1 <= std_logic_vector(resize(signed(r_V_2_fu_636_p2),32));

        tmp_9_fu_607_p1 <= std_logic_vector(resize(signed(r_V_3_fu_601_p2),32));

    tmp_s_fu_423_p2 <= std_logic_vector(unsigned(icounter_V) + unsigned(ap_const_lv16_1));
    trigger_signal_read_read_fu_178_p2 <= (0=>trigger_signal, others=>'-');
end behav;
