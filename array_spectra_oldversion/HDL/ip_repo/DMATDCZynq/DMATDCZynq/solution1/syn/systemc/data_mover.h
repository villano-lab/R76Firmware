// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _data_mover_HH_
#define _data_mover_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "data_mover_inbuffbkb.h"
#include "data_mover_axil_s_axi.h"
#include "data_mover_a_V_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_A_V_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_A_V_ID_WIDTH = 1,
         unsigned int C_M_AXI_A_V_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_V_DATA_WIDTH = 32,
         unsigned int C_M_AXI_A_V_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_V_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_V_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_V_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXIL_ADDR_WIDTH = 7,
         unsigned int C_S_AXI_AXIL_DATA_WIDTH = 32>
struct data_mover : public sc_module {
    // Port declarations 80
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_a_V_AWVALID;
    sc_in< sc_logic > m_axi_a_V_AWREADY;
    sc_out< sc_uint<C_M_AXI_A_V_ADDR_WIDTH> > m_axi_a_V_AWADDR;
    sc_out< sc_uint<C_M_AXI_A_V_ID_WIDTH> > m_axi_a_V_AWID;
    sc_out< sc_lv<8> > m_axi_a_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_a_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_a_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_a_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_a_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_a_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_a_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_a_V_AWREGION;
    sc_out< sc_uint<C_M_AXI_A_V_AWUSER_WIDTH> > m_axi_a_V_AWUSER;
    sc_out< sc_logic > m_axi_a_V_WVALID;
    sc_in< sc_logic > m_axi_a_V_WREADY;
    sc_out< sc_uint<C_M_AXI_A_V_DATA_WIDTH> > m_axi_a_V_WDATA;
    sc_out< sc_uint<C_M_AXI_A_V_DATA_WIDTH/8> > m_axi_a_V_WSTRB;
    sc_out< sc_logic > m_axi_a_V_WLAST;
    sc_out< sc_uint<C_M_AXI_A_V_ID_WIDTH> > m_axi_a_V_WID;
    sc_out< sc_uint<C_M_AXI_A_V_WUSER_WIDTH> > m_axi_a_V_WUSER;
    sc_out< sc_logic > m_axi_a_V_ARVALID;
    sc_in< sc_logic > m_axi_a_V_ARREADY;
    sc_out< sc_uint<C_M_AXI_A_V_ADDR_WIDTH> > m_axi_a_V_ARADDR;
    sc_out< sc_uint<C_M_AXI_A_V_ID_WIDTH> > m_axi_a_V_ARID;
    sc_out< sc_lv<8> > m_axi_a_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_a_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_a_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_a_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_a_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_a_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_a_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_a_V_ARREGION;
    sc_out< sc_uint<C_M_AXI_A_V_ARUSER_WIDTH> > m_axi_a_V_ARUSER;
    sc_in< sc_logic > m_axi_a_V_RVALID;
    sc_out< sc_logic > m_axi_a_V_RREADY;
    sc_in< sc_uint<C_M_AXI_A_V_DATA_WIDTH> > m_axi_a_V_RDATA;
    sc_in< sc_logic > m_axi_a_V_RLAST;
    sc_in< sc_uint<C_M_AXI_A_V_ID_WIDTH> > m_axi_a_V_RID;
    sc_in< sc_uint<C_M_AXI_A_V_RUSER_WIDTH> > m_axi_a_V_RUSER;
    sc_in< sc_lv<2> > m_axi_a_V_RRESP;
    sc_in< sc_logic > m_axi_a_V_BVALID;
    sc_out< sc_logic > m_axi_a_V_BREADY;
    sc_in< sc_lv<2> > m_axi_a_V_BRESP;
    sc_in< sc_uint<C_M_AXI_A_V_ID_WIDTH> > m_axi_a_V_BID;
    sc_in< sc_uint<C_M_AXI_A_V_BUSER_WIDTH> > m_axi_a_V_BUSER;
    sc_in< sc_lv<64> > stream0_V_V_TDATA;
    sc_in< sc_logic > stream0_V_V_TVALID;
    sc_out< sc_logic > stream0_V_V_TREADY;
    sc_out< sc_lv<32> > debug_buffer_status;
    sc_out< sc_logic > debug_buffer_status_ap_vld;
    sc_out< sc_lv<32> > debug_bufsel_0;
    sc_out< sc_logic > debug_bufsel_0_ap_vld;
    sc_out< sc_lv<32> > debug_buf0_p;
    sc_out< sc_logic > debug_buf0_p_ap_vld;
    sc_out< sc_lv<32> > debug_inbuffer_pointer;
    sc_out< sc_logic > debug_inbuffer_pointer_ap_vld;
    sc_out< sc_lv<64> > debug_dst_var_V;
    sc_out< sc_logic > debug_dst_var_V_ap_vld;
    sc_out< sc_logic > fifo_resetn;
    sc_out< sc_logic > interrupt_r;
    sc_out< sc_logic > interrupt_r_ap_vld;
    sc_in< sc_logic > s_axi_axil_AWVALID;
    sc_out< sc_logic > s_axi_axil_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXIL_ADDR_WIDTH> > s_axi_axil_AWADDR;
    sc_in< sc_logic > s_axi_axil_WVALID;
    sc_out< sc_logic > s_axi_axil_WREADY;
    sc_in< sc_uint<C_S_AXI_AXIL_DATA_WIDTH> > s_axi_axil_WDATA;
    sc_in< sc_uint<C_S_AXI_AXIL_DATA_WIDTH/8> > s_axi_axil_WSTRB;
    sc_in< sc_logic > s_axi_axil_ARVALID;
    sc_out< sc_logic > s_axi_axil_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXIL_ADDR_WIDTH> > s_axi_axil_ARADDR;
    sc_out< sc_logic > s_axi_axil_RVALID;
    sc_in< sc_logic > s_axi_axil_RREADY;
    sc_out< sc_uint<C_S_AXI_AXIL_DATA_WIDTH> > s_axi_axil_RDATA;
    sc_out< sc_lv<2> > s_axi_axil_RRESP;
    sc_out< sc_logic > s_axi_axil_BVALID;
    sc_in< sc_logic > s_axi_axil_BREADY;
    sc_out< sc_lv<2> > s_axi_axil_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<32> > ap_var_for_const7;
    sc_signal< sc_lv<3> > ap_var_for_const4;
    sc_signal< sc_lv<2> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const6;
    sc_signal< sc_lv<4> > ap_var_for_const8;


    // Module declarations
    data_mover(sc_module_name name);
    SC_HAS_PROCESS(data_mover);

    ~data_mover();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    data_mover_inbuffbkb* inbuffer_V_U;
    data_mover_axil_s_axi<C_S_AXI_AXIL_ADDR_WIDTH,C_S_AXI_AXIL_DATA_WIDTH>* data_mover_axil_s_axi_U;
    data_mover_a_V_m_axi<32,32,5,16,16,16,16,C_M_AXI_A_V_ID_WIDTH,C_M_AXI_A_V_ADDR_WIDTH,C_M_AXI_A_V_DATA_WIDTH,C_M_AXI_A_V_AWUSER_WIDTH,C_M_AXI_A_V_ARUSER_WIDTH,C_M_AXI_A_V_WUSER_WIDTH,C_M_AXI_A_V_RUSER_WIDTH,C_M_AXI_A_V_BUSER_WIDTH,C_M_AXI_A_V_TARGET_ADDR,C_M_AXI_A_V_USER_VALUE,C_M_AXI_A_V_PROT_VALUE,C_M_AXI_A_V_CACHE_VALUE>* data_mover_a_V_m_axi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > buffer_status;
    sc_signal< sc_logic > buffer_status_ap_vld;
    sc_signal< sc_lv<32> > buffer_ack;
    sc_signal< sc_lv<1> > buffer_seq_address0;
    sc_signal< sc_logic > buffer_seq_ce0;
    sc_signal< sc_logic > buffer_seq_we0;
    sc_signal< sc_lv<64> > buffer_seq_d0;
    sc_signal< sc_lv<1> > bufsize_address0;
    sc_signal< sc_logic > bufsize_ce0;
    sc_signal< sc_logic > bufsize_we0;
    sc_signal< sc_lv<32> > bufsize_d0;
    sc_signal< sc_logic > run;
    sc_signal< sc_lv<32> > DDROFFSET_V;
    sc_signal< sc_lv<2> > stat_counter_address0;
    sc_signal< sc_logic > stat_counter_ce0;
    sc_signal< sc_logic > stat_counter_we0;
    sc_signal< sc_lv<64> > stat_counter_d0;
    sc_signal< sc_lv<1> > bufstatus_0;
    sc_signal< sc_lv<1> > bufstatus_1;
    sc_signal< sc_lv<32> > inbuffer_pointer;
    sc_signal< sc_lv<64> > out_counter;
    sc_signal< sc_lv<64> > lost_counter;
    sc_signal< sc_lv<32> > buftimeout;
    sc_signal< sc_lv<1> > bufsel;
    sc_signal< sc_lv<1> > swap_timeout;
    sc_signal< sc_lv<32> > buf_p;
    sc_signal< sc_lv<12> > inbuffer_V_address0;
    sc_signal< sc_logic > inbuffer_V_ce0;
    sc_signal< sc_logic > inbuffer_V_we0;
    sc_signal< sc_lv<32> > inbuffer_V_d0;
    sc_signal< sc_lv<32> > inbuffer_V_q0;
    sc_signal< sc_lv<12> > inbuffer_V_address1;
    sc_signal< sc_logic > inbuffer_V_ce1;
    sc_signal< sc_logic > inbuffer_V_we1;
    sc_signal< sc_lv<32> > inbuffer_V_d1;
    sc_signal< sc_lv<64> > bsc;
    sc_signal< sc_lv<64> > bsq_0;
    sc_signal< sc_lv<64> > bsq_1;
    sc_signal< sc_lv<32> > obuffer_ack;
    sc_signal< sc_logic > a_V_blk_n_AW;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > a_V_blk_n_W;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond3_reg_1452;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond3_reg_1452;
    sc_signal< sc_logic > a_V_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > stream0_V_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > run_read_read_fu_198_p2;
    sc_signal< sc_lv<1> > bufstatus_load_phi_fu_879_p3;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_210_p3;
    sc_signal< sc_logic > a_V_AWVALID;
    sc_signal< sc_logic > a_V_AWREADY;
    sc_signal< sc_logic > a_V_WVALID;
    sc_signal< sc_logic > a_V_WREADY;
    sc_signal< sc_logic > a_V_ARREADY;
    sc_signal< sc_logic > a_V_RVALID;
    sc_signal< sc_lv<32> > a_V_RDATA;
    sc_signal< sc_logic > a_V_RLAST;
    sc_signal< sc_lv<1> > a_V_RID;
    sc_signal< sc_lv<1> > a_V_RUSER;
    sc_signal< sc_lv<2> > a_V_RRESP;
    sc_signal< sc_logic > a_V_BVALID;
    sc_signal< sc_logic > a_V_BREADY;
    sc_signal< sc_lv<2> > a_V_BRESP;
    sc_signal< sc_lv<1> > a_V_BID;
    sc_signal< sc_lv<1> > a_V_BUSER;
    sc_signal< sc_lv<13> > indvar_reg_531;
    sc_signal< sc_lv<32> > DDROFFSET_V_read_reg_1325;
    sc_signal< bool > ap_predicate_op83_read_state1;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > run_read_reg_1330;
    sc_signal< sc_lv<32> > buffer_ack_read_reg_1334;
    sc_signal< sc_lv<1> > bufstatus_0_load_reg_1346;
    sc_signal< sc_lv<1> > bufstatus_1_load_reg_1353;
    sc_signal< sc_lv<32> > buftimeout_load_reg_1379;
    sc_signal< sc_lv<1> > bufsel_load_reg_1385;
    sc_signal< sc_lv<64> > tmp_3_fu_875_p1;
    sc_signal< sc_lv<64> > tmp_3_reg_1395;
    sc_signal< sc_lv<1> > bufstatus_load_phi_reg_1400;
    sc_signal< sc_lv<1> > swap_timeout_load_reg_1405;
    sc_signal< sc_lv<32> > buf_p_load_reg_1411;
    sc_signal< sc_lv<1> > tmp_reg_1418;
    sc_signal< sc_lv<32> > tmp_9_fu_911_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_934_p2;
    sc_signal< sc_lv<1> > tmp_5_reg_1427;
    sc_signal< sc_lv<64> > tmp_6_fu_940_p2;
    sc_signal< sc_lv<64> > tmp_4_fu_952_p2;
    sc_signal< sc_lv<1> > brmerge_fu_969_p2;
    sc_signal< sc_lv<1> > brmerge_reg_1442;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > a_V_addr_reg_1446;
    sc_signal< sc_lv<1> > exitcond3_fu_1027_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter2;
    sc_signal< sc_logic > ap_sig_ioackin_a_V_WREADY;
    sc_signal< bool > ap_block_state7_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<13> > indvar_next_fu_1033_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > inbuffer_V_load_reg_1466;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > tmp_10_fu_1044_p2;
    sc_signal< sc_lv<1> > brmerge1_fu_1056_p2;
    sc_signal< sc_lv<1> > brmerge1_reg_1476;
    sc_signal< sc_lv<1> > not_bufsel_load_t_fu_1061_p2;
    sc_signal< sc_lv<1> > not_bufsel_load_t_reg_1480;
    sc_signal< sc_lv<1> > bufstatus_0_load_s_fu_1066_p2;
    sc_signal< sc_lv<1> > bufstatus_0_load_s_reg_1486;
    sc_signal< sc_lv<1> > p_bufstatus_1_load_fu_1071_p2;
    sc_signal< sc_lv<1> > p_bufstatus_1_load_reg_1491;
    sc_signal< sc_lv<1> > bufstatus_0_flag_2_fu_1174_p2;
    sc_signal< sc_lv<1> > bufstatus_0_flag_2_reg_1496;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<1> > bufstatus_0_new_2_fu_1180_p2;
    sc_signal< sc_lv<1> > bufstatus_0_new_2_reg_1501;
    sc_signal< sc_lv<1> > bufstatus_1_flag_2_fu_1225_p2;
    sc_signal< sc_lv<1> > bufstatus_1_flag_2_reg_1506;
    sc_signal< sc_lv<1> > bufstatus_1_new_2_fu_1231_p2;
    sc_signal< sc_lv<1> > bufstatus_1_new_2_reg_1511;
    sc_signal< sc_logic > ap_sig_ioackin_a_V_AWREADY;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state5;
    sc_signal< sc_lv<1> > inbuffer_pointer_fla_reg_443;
    sc_signal< sc_lv<32> > inbuffer_pointer_loc_reg_460;
    sc_signal< sc_lv<64> > out_counter_loc_reg_472;
    sc_signal< sc_lv<64> > lost_counter_loc_reg_484;
    sc_signal< sc_lv<32> > inbuffer_pointer_loc_1_reg_496;
    sc_signal< sc_lv<64> > out_counter_loc_1_reg_509;
    sc_signal< sc_lv<64> > lost_counter_loc_1_reg_520;
    sc_signal< sc_lv<1> > ap_phi_mux_bufstatus_0_flag_1_phi_fu_546_p6;
    sc_signal< sc_lv<1> > bufstatus_0_flag_1_reg_542;
    sc_signal< sc_lv<1> > ap_phi_mux_bufstatus_0_loc_1_phi_fu_559_p6;
    sc_signal< sc_lv<1> > bufstatus_0_loc_1_reg_556;
    sc_signal< sc_lv<1> > ap_phi_mux_bufstatus_1_flag_1_phi_fu_571_p6;
    sc_signal< sc_lv<1> > bufstatus_1_flag_1_reg_567;
    sc_signal< sc_lv<1> > ap_phi_mux_bufstatus_1_loc_1_phi_fu_584_p6;
    sc_signal< sc_lv<1> > bufstatus_1_loc_1_reg_581;
    sc_signal< sc_lv<1> > inbuffer_pointer_fla_1_reg_592;
    sc_signal< sc_lv<32> > inbuffer_pointer_new_1_reg_608;
    sc_signal< sc_lv<64> > out_counter_loc_2_reg_624;
    sc_signal< sc_lv<64> > lost_counter_loc_2_reg_640;
    sc_signal< sc_lv<1> > swap_timeout_flag_reg_656;
    sc_signal< sc_lv<1> > ap_phi_mux_buf_p_flag_phi_fu_677_p6;
    sc_signal< sc_lv<1> > buf_p_flag_reg_672;
    sc_signal< sc_lv<32> > ap_phi_mux_buf_p_loc_phi_fu_691_p6;
    sc_signal< sc_lv<32> > buf_p_loc_reg_688;
    sc_signal< sc_lv<32> > buftimeout_loc_reg_701;
    sc_signal< sc_lv<1> > ap_phi_mux_bufsel_load_3_phi_fu_717_p6;
    sc_signal< sc_lv<1> > bufsel_load_3_reg_714;
    sc_signal< sc_lv<1> > ap_phi_mux_bufstatus_0_flag_3_phi_fu_729_p4;
    sc_signal< sc_lv<1> > bufstatus_0_flag_3_reg_725;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > ap_phi_mux_bufstatus_0_new_3_phi_fu_740_p4;
    sc_signal< sc_lv<1> > bufstatus_0_new_3_reg_736;
    sc_signal< sc_lv<1> > ap_phi_mux_bufstatus_1_flag_3_phi_fu_751_p4;
    sc_signal< sc_lv<1> > bufstatus_1_flag_3_reg_747;
    sc_signal< sc_lv<1> > ap_phi_mux_bufstatus_1_new_3_phi_fu_762_p4;
    sc_signal< sc_lv<1> > bufstatus_1_new_3_reg_758;
    sc_signal< sc_lv<1> > ap_phi_mux_inbuffer_pointer_fla_2_phi_fu_773_p4;
    sc_signal< sc_lv<1> > inbuffer_pointer_fla_2_reg_769;
    sc_signal< sc_lv<32> > ap_phi_mux_inbuffer_pointer_new_2_phi_fu_785_p4;
    sc_signal< sc_lv<32> > inbuffer_pointer_new_2_reg_781;
    sc_signal< sc_lv<32> > storemerge_fu_1286_p3;
    sc_signal< sc_lv<32> > ap_phi_mux_buftimeout_new_phi_fu_797_p4;
    sc_signal< sc_lv<32> > buftimeout_new_reg_793;
    sc_signal< sc_lv<1> > ap_phi_mux_clear_fifo_load_phi_fu_808_p4;
    sc_signal< sc_lv<1> > clear_fifo_load_reg_804;
    sc_signal< sc_lv<64> > tmp_8_fu_901_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_918_p1;
    sc_signal< sc_lv<64> > tmp_12_fu_1039_p1;
    sc_signal< sc_lv<1> > buffer_seq_addr_2_gep_fu_393_p3;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<1> > buffer_seq_addr_3_gep_fu_402_p3;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<64> > p_sum1_cast_fu_1017_p1;
    sc_signal< sc_logic > ap_reg_ioackin_a_V_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_a_V_WREADY;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > tmp_23_fu_1268_p2;
    sc_signal< sc_lv<1> > swap_timeout_flag_1_fu_1280_p2;
    sc_signal< sc_lv<64> > tmp_14_fu_1085_p2;
    sc_signal< sc_lv<32> > tmp_16_fu_1128_p4;
    sc_signal< sc_lv<64> > tmp_22_fu_1263_p1;
    sc_signal< sc_lv<32> > tmp_7_fu_895_p2;
    sc_signal< sc_lv<1> > swap_timeout_load_no_fu_964_p2;
    sc_signal< sc_lv<30> > tmp_1_fu_974_p4;
    sc_signal< sc_lv<23> > tmp_2_fu_990_p3;
    sc_signal< sc_lv<31> > tmp_11_cast_fu_997_p1;
    sc_signal< sc_lv<31> > op2_cast_fu_983_p1;
    sc_signal< sc_lv<31> > tmp3_fu_1001_p2;
    sc_signal< sc_lv<33> > tmp3_cast_fu_1007_p1;
    sc_signal< sc_lv<33> > tmp_2_cast_fu_987_p1;
    sc_signal< sc_lv<33> > p_sum1_fu_1011_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_1050_p2;
    sc_signal< sc_lv<32> > tmp_15_fu_1124_p1;
    sc_signal< sc_lv<1> > tmp_17_fu_1143_p1;
    sc_signal< sc_lv<1> > tmp_25_fu_1159_p1;
    sc_signal< sc_lv<1> > tmp_18_fu_1147_p2;
    sc_signal< sc_lv<1> > bufstatus_0_flag_1_s_fu_1168_p2;
    sc_signal< sc_lv<1> > tmp_19_fu_1162_p2;
    sc_signal< sc_lv<1> > tmp_26_fu_1192_p3;
    sc_signal< sc_lv<1> > tmp_27_fu_1206_p3;
    sc_signal< sc_lv<1> > rev_fu_1200_p2;
    sc_signal< sc_lv<1> > bufstatus_1_flag_1_s_fu_1219_p2;
    sc_signal< sc_lv<1> > rev8_fu_1213_p2;
    sc_signal< sc_lv<1> > bufstatus_load_4_fu_1186_p2;
    sc_signal< sc_lv<32> > tmp_20_fu_1248_p1;
    sc_signal< sc_lv<1> > bufstatus_load_5_fu_1237_p2;
    sc_signal< sc_lv<32> > tmp_24_fu_1274_p2;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_308;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_pp0_stage0;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<15> ap_ST_fsm_state16;
    static const sc_lv<15> ap_ST_fsm_state17;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<1> ap_const_lv1_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_A_V_TARGET_ADDR;
    static const int C_M_AXI_A_V_USER_VALUE;
    static const int C_M_AXI_A_V_PROT_VALUE;
    static const int C_M_AXI_A_V_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_1000;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<22> ap_const_lv22_0;
    static const sc_lv<13> ap_const_lv13_1000;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<32> ap_const_lv32_400000;
    static const sc_lv<32> ap_const_lv32_989680;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const8();
    void thread_ap_clk_no_reset_();
    void thread_a_V_AWVALID();
    void thread_a_V_BREADY();
    void thread_a_V_WVALID();
    void thread_a_V_blk_n_AW();
    void thread_a_V_blk_n_B();
    void thread_a_V_blk_n_W();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state5_pp0_stage0_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_block_state7_io();
    void thread_ap_block_state7_pp0_stage0_iter2();
    void thread_ap_condition_308();
    void thread_ap_condition_pp0_exit_iter0_state5();
    void thread_ap_enable_pp0();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_buf_p_flag_phi_fu_677_p6();
    void thread_ap_phi_mux_buf_p_loc_phi_fu_691_p6();
    void thread_ap_phi_mux_bufsel_load_3_phi_fu_717_p6();
    void thread_ap_phi_mux_bufstatus_0_flag_1_phi_fu_546_p6();
    void thread_ap_phi_mux_bufstatus_0_flag_3_phi_fu_729_p4();
    void thread_ap_phi_mux_bufstatus_0_loc_1_phi_fu_559_p6();
    void thread_ap_phi_mux_bufstatus_0_new_3_phi_fu_740_p4();
    void thread_ap_phi_mux_bufstatus_1_flag_1_phi_fu_571_p6();
    void thread_ap_phi_mux_bufstatus_1_flag_3_phi_fu_751_p4();
    void thread_ap_phi_mux_bufstatus_1_loc_1_phi_fu_584_p6();
    void thread_ap_phi_mux_bufstatus_1_new_3_phi_fu_762_p4();
    void thread_ap_phi_mux_buftimeout_new_phi_fu_797_p4();
    void thread_ap_phi_mux_clear_fifo_load_phi_fu_808_p4();
    void thread_ap_phi_mux_inbuffer_pointer_fla_2_phi_fu_773_p4();
    void thread_ap_phi_mux_inbuffer_pointer_new_2_phi_fu_785_p4();
    void thread_ap_predicate_op83_read_state1();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_a_V_AWREADY();
    void thread_ap_sig_ioackin_a_V_WREADY();
    void thread_brmerge1_fu_1056_p2();
    void thread_brmerge_fu_969_p2();
    void thread_buffer_seq_addr_2_gep_fu_393_p3();
    void thread_buffer_seq_addr_3_gep_fu_402_p3();
    void thread_buffer_seq_address0();
    void thread_buffer_seq_ce0();
    void thread_buffer_seq_d0();
    void thread_buffer_seq_we0();
    void thread_buffer_status();
    void thread_buffer_status_ap_vld();
    void thread_bufsize_address0();
    void thread_bufsize_ce0();
    void thread_bufsize_d0();
    void thread_bufsize_we0();
    void thread_bufstatus_0_flag_1_s_fu_1168_p2();
    void thread_bufstatus_0_flag_2_fu_1174_p2();
    void thread_bufstatus_0_load_s_fu_1066_p2();
    void thread_bufstatus_0_new_2_fu_1180_p2();
    void thread_bufstatus_1_flag_1_s_fu_1219_p2();
    void thread_bufstatus_1_flag_2_fu_1225_p2();
    void thread_bufstatus_1_new_2_fu_1231_p2();
    void thread_bufstatus_load_4_fu_1186_p2();
    void thread_bufstatus_load_5_fu_1237_p2();
    void thread_bufstatus_load_phi_fu_879_p3();
    void thread_debug_buf0_p();
    void thread_debug_buf0_p_ap_vld();
    void thread_debug_buffer_status();
    void thread_debug_buffer_status_ap_vld();
    void thread_debug_bufsel_0();
    void thread_debug_bufsel_0_ap_vld();
    void thread_debug_dst_var_V();
    void thread_debug_dst_var_V_ap_vld();
    void thread_debug_inbuffer_pointer();
    void thread_debug_inbuffer_pointer_ap_vld();
    void thread_exitcond3_fu_1027_p2();
    void thread_fifo_resetn();
    void thread_inbuffer_V_address0();
    void thread_inbuffer_V_address1();
    void thread_inbuffer_V_ce0();
    void thread_inbuffer_V_ce1();
    void thread_inbuffer_V_d0();
    void thread_inbuffer_V_d1();
    void thread_inbuffer_V_we0();
    void thread_inbuffer_V_we1();
    void thread_indvar_next_fu_1033_p2();
    void thread_interrupt_r();
    void thread_interrupt_r_ap_vld();
    void thread_not_bufsel_load_t_fu_1061_p2();
    void thread_op2_cast_fu_983_p1();
    void thread_p_bufstatus_1_load_fu_1071_p2();
    void thread_p_sum1_cast_fu_1017_p1();
    void thread_p_sum1_fu_1011_p2();
    void thread_rev8_fu_1213_p2();
    void thread_rev_fu_1200_p2();
    void thread_run_read_read_fu_198_p2();
    void thread_stat_counter_address0();
    void thread_stat_counter_ce0();
    void thread_stat_counter_d0();
    void thread_stat_counter_we0();
    void thread_storemerge_fu_1286_p3();
    void thread_stream0_V_V_TDATA_blk_n();
    void thread_stream0_V_V_TREADY();
    void thread_swap_timeout_flag_1_fu_1280_p2();
    void thread_swap_timeout_load_no_fu_964_p2();
    void thread_tmp3_cast_fu_1007_p1();
    void thread_tmp3_fu_1001_p2();
    void thread_tmp_10_fu_1044_p2();
    void thread_tmp_11_cast_fu_997_p1();
    void thread_tmp_11_fu_1050_p2();
    void thread_tmp_12_fu_1039_p1();
    void thread_tmp_14_fu_1085_p2();
    void thread_tmp_15_fu_1124_p1();
    void thread_tmp_16_fu_1128_p4();
    void thread_tmp_17_fu_1143_p1();
    void thread_tmp_18_fu_1147_p2();
    void thread_tmp_19_fu_1162_p2();
    void thread_tmp_1_fu_974_p4();
    void thread_tmp_20_fu_1248_p1();
    void thread_tmp_22_fu_1263_p1();
    void thread_tmp_23_fu_1268_p2();
    void thread_tmp_24_fu_1274_p2();
    void thread_tmp_25_fu_1159_p1();
    void thread_tmp_26_fu_1192_p3();
    void thread_tmp_27_fu_1206_p3();
    void thread_tmp_2_cast_fu_987_p1();
    void thread_tmp_2_fu_990_p3();
    void thread_tmp_3_fu_875_p1();
    void thread_tmp_4_fu_952_p2();
    void thread_tmp_5_fu_934_p2();
    void thread_tmp_6_fu_940_p2();
    void thread_tmp_7_fu_895_p2();
    void thread_tmp_8_fu_901_p1();
    void thread_tmp_9_fu_911_p2();
    void thread_tmp_nbreadreq_fu_210_p3();
    void thread_tmp_s_fu_918_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
