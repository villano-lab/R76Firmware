
####################################################################################
# Generated by Vivado 2017.4 built on 'Fri Dec 15 20:55:39 MST 2017' by 'xbuild'
# Command Used: write_xdc R5560.xdc -force
####################################################################################


####################################################################################
# Constraints from file : 'ZynqDesign_processing_system7_0_0.xdc'
####################################################################################

############################################################################
##
##  Xilinx, Inc. 2006            www.xilinx.com
############################################################################
##  File name :       ps7_constraints.xdc
##
##  Details :     Constraints file
##                    FPGA family:       zynq
##                    FPGA:              xc7z045ffg676-2
##                    Device Size:        xc7z045
##                    Package:            ffg676
##                    Speedgrade:         -2
##
##
############################################################################
############################################################################
############################################################################
# Clock constraints                                                        #
############################################################################
current_instance zynq_subsystem/ZynqDesign_i/processing_system7_0/inst
create_clock -period 8.000 -name clk_fpga_0 [get_pins {PS7_i/FCLKCLK[0]}]
set_input_jitter clk_fpga_0 0.240
#The clocks are asynchronous, user should constrain them appropriately.#


############################################################################
# I/O STANDARDS and Location Constraints                                   #
############################################################################

#  Enet 0 / mdio / MIO[53]
current_instance -quiet
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[53]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[53]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[53]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[53]}]
#  Enet 0 / mdc / MIO[52]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[52]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[52]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[52]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[52]}]
#  GPIO / gpio[51] / MIO[51]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[51]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[51]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[51]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[51]}]
#  SD 0 / wp / MIO[50]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[50]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[50]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[50]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[50]}]
#  UART 1 / rx / MIO[49]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[49]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[49]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[49]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[49]}]
#  UART 1 / tx / MIO[48]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[48]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[48]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[48]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[48]}]
#  UART 0 / tx / MIO[47]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[47]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[47]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[47]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[47]}]
#  UART 0 / rx / MIO[46]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[46]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[46]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[46]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[46]}]
#  SD 0 / data[3] / MIO[45]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[45]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[45]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[45]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[45]}]
#  SD 0 / data[2] / MIO[44]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[44]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[44]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[44]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[44]}]
#  SD 0 / data[1] / MIO[43]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[43]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[43]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[43]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[43]}]
#  SD 0 / data[0] / MIO[42]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[42]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[42]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[42]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[42]}]
#  SD 0 / cmd / MIO[41]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[41]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[41]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[41]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[41]}]
#  SD 0 / clk / MIO[40]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[40]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[40]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[40]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[40]}]
#  USB 0 / data[7] / MIO[39]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[39]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[39]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[39]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[39]}]
#  USB 0 / data[6] / MIO[38]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[38]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[38]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[38]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[38]}]
#  USB 0 / data[5] / MIO[37]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[37]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[37]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[37]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[37]}]
#  USB 0 / clk / MIO[36]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[36]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[36]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[36]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[36]}]
#  USB 0 / data[3] / MIO[35]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[35]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[35]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[35]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[35]}]
#  USB 0 / data[2] / MIO[34]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[34]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[34]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[34]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[34]}]
#  USB 0 / data[1] / MIO[33]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[33]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[33]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[33]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[33]}]
#  USB 0 / data[0] / MIO[32]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[32]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[32]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[32]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[32]}]
#  USB 0 / nxt / MIO[31]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[31]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[31]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[31]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[31]}]
#  USB 0 / stp / MIO[30]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[30]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[30]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[30]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[30]}]
#  USB 0 / dir / MIO[29]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[29]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[29]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[29]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[29]}]
#  USB 0 / data[4] / MIO[28]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[28]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[28]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[28]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[28]}]
#  Enet 0 / rx_ctl / MIO[27]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[27]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[27]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[27]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[27]}]
#  Enet 0 / rxd[3] / MIO[26]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[26]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[26]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[26]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[26]}]
#  Enet 0 / rxd[2] / MIO[25]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[25]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[25]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[25]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[25]}]
#  Enet 0 / rxd[1] / MIO[24]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[24]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[24]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[24]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[24]}]
#  Enet 0 / rxd[0] / MIO[23]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[23]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[23]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[23]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[23]}]
#  Enet 0 / rx_clk / MIO[22]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[22]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[22]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[22]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[22]}]
#  Enet 0 / tx_ctl / MIO[21]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[21]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[21]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[21]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[21]}]
#  Enet 0 / txd[3] / MIO[20]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[20]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[20]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[20]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[20]}]
#  Enet 0 / txd[2] / MIO[19]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[19]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[19]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[19]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[19]}]
#  Enet 0 / txd[1] / MIO[18]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[18]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[18]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[18]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[18]}]
#  Enet 0 / txd[0] / MIO[17]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[17]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[17]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[17]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[17]}]
#  Enet 0 / tx_clk / MIO[16]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[16]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[16]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[16]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[16]}]
#  GPIO / gpio[15] / MIO[15]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[15]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[15]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[15]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[15]}]
#  GPIO / gpio[14] / MIO[14]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[14]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[14]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[14]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[14]}]
#  GPIO / gpio[13] / MIO[13]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[13]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[13]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[13]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[13]}]
#  GPIO / gpio[12] / MIO[12]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[12]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[12]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[12]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[12]}]
#  I2C 0 / sda / MIO[11]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[11]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[11]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[11]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[11]}]
#  I2C 0 / scl / MIO[10]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[10]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[10]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[10]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[10]}]
#  GPIO / gpio[9] / MIO[9]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[9]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[9]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[9]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[9]}]
#  Quad SPI Flash / qspi_fbclk / MIO[8]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[8]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[8]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[8]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[8]}]
#  USB Reset / reset / MIO[7]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[7]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[7]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[7]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[7]}]
#  Quad SPI Flash / qspi0_sclk / MIO[6]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[6]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[6]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[6]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[6]}]
#  Quad SPI Flash / qspi0_io[3]/HOLD_B / MIO[5]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[5]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[5]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[5]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[5]}]
#  Quad SPI Flash / qspi0_io[2] / MIO[4]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[4]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[4]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[4]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[4]}]
#  Quad SPI Flash / qspi0_io[1] / MIO[3]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[3]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[3]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[3]}]
#  Quad SPI Flash / qspi0_io[0] / MIO[2]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[2]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[2]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[2]}]
#  Quad SPI Flash / qspi0_ss_b / MIO[1]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[1]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[1]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[1]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[1]}]
#  ENET Reset / reset / MIO[0]
set_property IOSTANDARD LVCMOS33 [get_ports {FIXED_IO_mio[0]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[0]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[0]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[0]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports FIXED_IO_ddr_vrp]
set_property SLEW FAST [get_ports FIXED_IO_ddr_vrp]
set_property PIO_DIRECTION BIDIR [get_ports FIXED_IO_ddr_vrp]
set_property IOSTANDARD SSTL15_T_DCI [get_ports FIXED_IO_ddr_vrn]
set_property SLEW FAST [get_ports FIXED_IO_ddr_vrn]
set_property PIO_DIRECTION BIDIR [get_ports FIXED_IO_ddr_vrn]
set_property IOSTANDARD SSTL15 [get_ports DDR_we_n]
set_property SLEW SLOW [get_ports DDR_we_n]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_we_n]
set_property IOSTANDARD SSTL15 [get_ports DDR_ras_n]
set_property SLEW SLOW [get_ports DDR_ras_n]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_ras_n]
set_property IOSTANDARD SSTL15 [get_ports DDR_odt]
set_property SLEW SLOW [get_ports DDR_odt]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_odt]
set_property IOSTANDARD SSTL15 [get_ports DDR_reset_n]
set_property SLEW FAST [get_ports DDR_reset_n]
set_property PIO_DIRECTION BIDIR [get_ports DDR_reset_n]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_p[3]}]
set_property SLEW FAST [get_ports {DDR_dqs_p[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_p[3]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_p[2]}]
set_property SLEW FAST [get_ports {DDR_dqs_p[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_p[2]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_p[1]}]
set_property SLEW FAST [get_ports {DDR_dqs_p[1]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_p[1]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_p[0]}]
set_property SLEW FAST [get_ports {DDR_dqs_p[0]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_p[0]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_n[3]}]
set_property SLEW FAST [get_ports {DDR_dqs_n[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_n[3]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_n[2]}]
set_property SLEW FAST [get_ports {DDR_dqs_n[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_n[2]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_n[1]}]
set_property SLEW FAST [get_ports {DDR_dqs_n[1]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_n[1]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_n[0]}]
set_property SLEW FAST [get_ports {DDR_dqs_n[0]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_n[0]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[9]}]
set_property SLEW FAST [get_ports {DDR_dq[9]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[9]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[8]}]
set_property SLEW FAST [get_ports {DDR_dq[8]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[8]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[7]}]
set_property SLEW FAST [get_ports {DDR_dq[7]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[7]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[6]}]
set_property SLEW FAST [get_ports {DDR_dq[6]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[6]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[5]}]
set_property SLEW FAST [get_ports {DDR_dq[5]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[5]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[4]}]
set_property SLEW FAST [get_ports {DDR_dq[4]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[4]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[3]}]
set_property SLEW FAST [get_ports {DDR_dq[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[3]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[31]}]
set_property SLEW FAST [get_ports {DDR_dq[31]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[31]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[30]}]
set_property SLEW FAST [get_ports {DDR_dq[30]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[30]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[2]}]
set_property SLEW FAST [get_ports {DDR_dq[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[2]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[29]}]
set_property SLEW FAST [get_ports {DDR_dq[29]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[29]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[28]}]
set_property SLEW FAST [get_ports {DDR_dq[28]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[28]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[27]}]
set_property SLEW FAST [get_ports {DDR_dq[27]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[27]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[26]}]
set_property SLEW FAST [get_ports {DDR_dq[26]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[26]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[25]}]
set_property SLEW FAST [get_ports {DDR_dq[25]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[25]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[24]}]
set_property SLEW FAST [get_ports {DDR_dq[24]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[24]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[23]}]
set_property SLEW FAST [get_ports {DDR_dq[23]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[23]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[22]}]
set_property SLEW FAST [get_ports {DDR_dq[22]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[22]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[21]}]
set_property SLEW FAST [get_ports {DDR_dq[21]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[21]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[20]}]
set_property SLEW FAST [get_ports {DDR_dq[20]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[20]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[1]}]
set_property SLEW FAST [get_ports {DDR_dq[1]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[1]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[19]}]
set_property SLEW FAST [get_ports {DDR_dq[19]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[19]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[18]}]
set_property SLEW FAST [get_ports {DDR_dq[18]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[18]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[17]}]
set_property SLEW FAST [get_ports {DDR_dq[17]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[17]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[16]}]
set_property SLEW FAST [get_ports {DDR_dq[16]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[16]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[15]}]
set_property SLEW FAST [get_ports {DDR_dq[15]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[15]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[14]}]
set_property SLEW FAST [get_ports {DDR_dq[14]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[14]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[13]}]
set_property SLEW FAST [get_ports {DDR_dq[13]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[13]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[12]}]
set_property SLEW FAST [get_ports {DDR_dq[12]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[12]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[11]}]
set_property SLEW FAST [get_ports {DDR_dq[11]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[11]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[10]}]
set_property SLEW FAST [get_ports {DDR_dq[10]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[10]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[0]}]
set_property SLEW FAST [get_ports {DDR_dq[0]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[0]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dm[3]}]
set_property SLEW FAST [get_ports {DDR_dm[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dm[3]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dm[2]}]
set_property SLEW FAST [get_ports {DDR_dm[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dm[2]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dm[1]}]
set_property SLEW FAST [get_ports {DDR_dm[1]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dm[1]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dm[0]}]
set_property SLEW FAST [get_ports {DDR_dm[0]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dm[0]}]
set_property IOSTANDARD SSTL15 [get_ports DDR_cs_n]
set_property SLEW SLOW [get_ports DDR_cs_n]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_cs_n]
set_property IOSTANDARD SSTL15 [get_ports DDR_cke]
set_property SLEW SLOW [get_ports DDR_cke]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_cke]
set_property IOSTANDARD DIFF_SSTL15 [get_ports DDR_ck_p]
set_property SLEW FAST [get_ports DDR_ck_p]
set_property PIO_DIRECTION INPUT [get_ports DDR_ck_p]
set_property IOSTANDARD DIFF_SSTL15 [get_ports DDR_ck_n]
set_property SLEW FAST [get_ports DDR_ck_n]
set_property PIO_DIRECTION INPUT [get_ports DDR_ck_n]
set_property IOSTANDARD SSTL15 [get_ports DDR_cas_n]
set_property SLEW SLOW [get_ports DDR_cas_n]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_cas_n]
set_property IOSTANDARD SSTL15 [get_ports {DDR_ba[2]}]
set_property SLEW SLOW [get_ports {DDR_ba[2]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_ba[2]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_ba[1]}]
set_property SLEW SLOW [get_ports {DDR_ba[1]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_ba[1]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_ba[0]}]
set_property SLEW SLOW [get_ports {DDR_ba[0]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_ba[0]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[9]}]
set_property SLEW SLOW [get_ports {DDR_addr[9]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[9]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[8]}]
set_property SLEW SLOW [get_ports {DDR_addr[8]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[8]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[7]}]
set_property SLEW SLOW [get_ports {DDR_addr[7]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[7]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[6]}]
set_property SLEW SLOW [get_ports {DDR_addr[6]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[6]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[5]}]
set_property SLEW SLOW [get_ports {DDR_addr[5]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[5]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[4]}]
set_property SLEW SLOW [get_ports {DDR_addr[4]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[4]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[3]}]
set_property SLEW SLOW [get_ports {DDR_addr[3]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[3]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[2]}]
set_property SLEW SLOW [get_ports {DDR_addr[2]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[2]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[1]}]
set_property SLEW SLOW [get_ports {DDR_addr[1]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[1]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[14]}]
set_property SLEW SLOW [get_ports {DDR_addr[14]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[14]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[13]}]
set_property SLEW SLOW [get_ports {DDR_addr[13]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[13]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[12]}]
set_property SLEW SLOW [get_ports {DDR_addr[12]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[12]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[11]}]
set_property SLEW SLOW [get_ports {DDR_addr[11]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[11]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[10]}]
set_property SLEW SLOW [get_ports {DDR_addr[10]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[10]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[0]}]
set_property SLEW SLOW [get_ports {DDR_addr[0]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[0]}]
set_property IOSTANDARD LVCMOS33 [get_ports FIXED_IO_ps_porb]
set_property SLEW FAST [get_ports FIXED_IO_ps_porb]
set_property IOSTANDARD LVCMOS18 [get_ports FIXED_IO_ps_srstb]
set_property SLEW FAST [get_ports FIXED_IO_ps_srstb]
set_property IOSTANDARD LVCMOS33 [get_ports FIXED_IO_ps_clk]
set_property PACKAGE_PIN K22 [get_ports {DDR_addr[0]}]
set_property PACKAGE_PIN K20 [get_ports {DDR_addr[1]}]
set_property PACKAGE_PIN N21 [get_ports {DDR_addr[2]}]
set_property PACKAGE_PIN L22 [get_ports {DDR_addr[3]}]
set_property PACKAGE_PIN M20 [get_ports {DDR_addr[4]}]
set_property PACKAGE_PIN N22 [get_ports {DDR_addr[5]}]
set_property PACKAGE_PIN L20 [get_ports {DDR_addr[6]}]
set_property PACKAGE_PIN J21 [get_ports {DDR_addr[7]}]
set_property PACKAGE_PIN T20 [get_ports {DDR_addr[8]}]
set_property PACKAGE_PIN U20 [get_ports {DDR_addr[9]}]
set_property PACKAGE_PIN M22 [get_ports {DDR_addr[10]}]
set_property PACKAGE_PIN H21 [get_ports {DDR_addr[11]}]
set_property PACKAGE_PIN P20 [get_ports {DDR_addr[12]}]
set_property PACKAGE_PIN J20 [get_ports {DDR_addr[13]}]
set_property PACKAGE_PIN R20 [get_ports {DDR_addr[14]}]
set_property PACKAGE_PIN U22 [get_ports {DDR_ba[0]}]
set_property PACKAGE_PIN T22 [get_ports {DDR_ba[1]}]
set_property PACKAGE_PIN R22 [get_ports {DDR_ba[2]}]
set_property PACKAGE_PIN Y23 [get_ports DDR_cas_n]
set_property PACKAGE_PIN P21 [get_ports DDR_ck_n]
set_property PACKAGE_PIN R21 [get_ports DDR_ck_p]
set_property PACKAGE_PIN U21 [get_ports DDR_cke]
set_property PACKAGE_PIN Y21 [get_ports DDR_cs_n]
set_property PACKAGE_PIN G24 [get_ports {DDR_dm[0]}]
set_property PACKAGE_PIN K25 [get_ports {DDR_dm[1]}]
set_property PACKAGE_PIN P26 [get_ports {DDR_dm[2]}]
set_property PACKAGE_PIN V26 [get_ports {DDR_dm[3]}]
set_property PACKAGE_PIN J26 [get_ports {DDR_dq[0]}]
set_property PACKAGE_PIN F25 [get_ports {DDR_dq[1]}]
set_property PACKAGE_PIN J25 [get_ports {DDR_dq[2]}]
set_property PACKAGE_PIN G26 [get_ports {DDR_dq[3]}]
set_property PACKAGE_PIN H26 [get_ports {DDR_dq[4]}]
set_property PACKAGE_PIN H23 [get_ports {DDR_dq[5]}]
set_property PACKAGE_PIN J24 [get_ports {DDR_dq[6]}]
set_property PACKAGE_PIN J23 [get_ports {DDR_dq[7]}]
set_property PACKAGE_PIN K26 [get_ports {DDR_dq[8]}]
set_property PACKAGE_PIN L23 [get_ports {DDR_dq[9]}]
set_property PACKAGE_PIN M26 [get_ports {DDR_dq[10]}]
set_property PACKAGE_PIN K23 [get_ports {DDR_dq[11]}]
set_property PACKAGE_PIN M25 [get_ports {DDR_dq[12]}]
set_property PACKAGE_PIN N24 [get_ports {DDR_dq[13]}]
set_property PACKAGE_PIN M24 [get_ports {DDR_dq[14]}]
set_property PACKAGE_PIN N23 [get_ports {DDR_dq[15]}]
set_property PACKAGE_PIN R26 [get_ports {DDR_dq[16]}]
set_property PACKAGE_PIN P24 [get_ports {DDR_dq[17]}]
set_property PACKAGE_PIN N26 [get_ports {DDR_dq[18]}]
set_property PACKAGE_PIN P23 [get_ports {DDR_dq[19]}]
set_property PACKAGE_PIN T24 [get_ports {DDR_dq[20]}]
set_property PACKAGE_PIN T25 [get_ports {DDR_dq[21]}]
set_property PACKAGE_PIN T23 [get_ports {DDR_dq[22]}]
set_property PACKAGE_PIN R23 [get_ports {DDR_dq[23]}]
set_property PACKAGE_PIN V24 [get_ports {DDR_dq[24]}]
set_property PACKAGE_PIN U26 [get_ports {DDR_dq[25]}]
set_property PACKAGE_PIN U24 [get_ports {DDR_dq[26]}]
set_property PACKAGE_PIN U25 [get_ports {DDR_dq[27]}]
set_property PACKAGE_PIN W26 [get_ports {DDR_dq[28]}]
set_property PACKAGE_PIN Y25 [get_ports {DDR_dq[29]}]
set_property PACKAGE_PIN Y26 [get_ports {DDR_dq[30]}]
set_property PACKAGE_PIN W23 [get_ports {DDR_dq[31]}]
set_property PACKAGE_PIN G25 [get_ports {DDR_dqs_n[0]}]
set_property PACKAGE_PIN L25 [get_ports {DDR_dqs_n[1]}]
set_property PACKAGE_PIN R25 [get_ports {DDR_dqs_n[2]}]
set_property PACKAGE_PIN W25 [get_ports {DDR_dqs_n[3]}]
set_property PACKAGE_PIN H24 [get_ports {DDR_dqs_p[0]}]
set_property PACKAGE_PIN L24 [get_ports {DDR_dqs_p[1]}]
set_property PACKAGE_PIN P25 [get_ports {DDR_dqs_p[2]}]
set_property PACKAGE_PIN W24 [get_ports {DDR_dqs_p[3]}]
set_property PACKAGE_PIN Y22 [get_ports DDR_odt]
set_property PACKAGE_PIN V23 [get_ports DDR_ras_n]
set_property PACKAGE_PIN H22 [get_ports DDR_reset_n]
set_property PACKAGE_PIN V22 [get_ports DDR_we_n]
set_property PACKAGE_PIN V21 [get_ports FIXED_IO_ddr_vrn]
set_property PACKAGE_PIN W21 [get_ports FIXED_IO_ddr_vrp]
set_property PACKAGE_PIN E26 [get_ports {FIXED_IO_mio[0]}]
set_property PACKAGE_PIN D26 [get_ports {FIXED_IO_mio[1]}]
set_property PACKAGE_PIN E25 [get_ports {FIXED_IO_mio[2]}]
set_property PACKAGE_PIN D25 [get_ports {FIXED_IO_mio[3]}]
set_property PACKAGE_PIN F24 [get_ports {FIXED_IO_mio[4]}]
set_property PACKAGE_PIN C26 [get_ports {FIXED_IO_mio[5]}]
set_property PACKAGE_PIN F23 [get_ports {FIXED_IO_mio[6]}]
set_property PACKAGE_PIN E23 [get_ports {FIXED_IO_mio[7]}]
set_property PACKAGE_PIN A24 [get_ports {FIXED_IO_mio[8]}]
set_property PACKAGE_PIN D24 [get_ports {FIXED_IO_mio[9]}]
set_property PACKAGE_PIN A25 [get_ports {FIXED_IO_mio[10]}]
set_property PACKAGE_PIN B26 [get_ports {FIXED_IO_mio[11]}]
set_property PACKAGE_PIN A23 [get_ports {FIXED_IO_mio[12]}]
set_property PACKAGE_PIN B25 [get_ports {FIXED_IO_mio[13]}]
set_property PACKAGE_PIN D23 [get_ports {FIXED_IO_mio[14]}]
set_property PACKAGE_PIN C24 [get_ports {FIXED_IO_mio[15]}]
set_property PACKAGE_PIN G21 [get_ports {FIXED_IO_mio[16]}]
set_property PACKAGE_PIN G17 [get_ports {FIXED_IO_mio[17]}]
set_property PACKAGE_PIN G20 [get_ports {FIXED_IO_mio[18]}]
set_property PACKAGE_PIN G19 [get_ports {FIXED_IO_mio[19]}]
set_property PACKAGE_PIN H19 [get_ports {FIXED_IO_mio[20]}]
set_property PACKAGE_PIN F22 [get_ports {FIXED_IO_mio[21]}]
set_property PACKAGE_PIN G22 [get_ports {FIXED_IO_mio[22]}]
set_property PACKAGE_PIN F20 [get_ports {FIXED_IO_mio[23]}]
set_property PACKAGE_PIN J19 [get_ports {FIXED_IO_mio[24]}]
set_property PACKAGE_PIN F19 [get_ports {FIXED_IO_mio[25]}]
set_property PACKAGE_PIN H17 [get_ports {FIXED_IO_mio[26]}]
set_property PACKAGE_PIN F18 [get_ports {FIXED_IO_mio[27]}]
set_property PACKAGE_PIN J18 [get_ports {FIXED_IO_mio[28]}]
set_property PACKAGE_PIN E20 [get_ports {FIXED_IO_mio[29]}]
set_property PACKAGE_PIN K19 [get_ports {FIXED_IO_mio[30]}]
set_property PACKAGE_PIN E21 [get_ports {FIXED_IO_mio[31]}]
set_property PACKAGE_PIN K17 [get_ports {FIXED_IO_mio[32]}]
set_property PACKAGE_PIN E22 [get_ports {FIXED_IO_mio[33]}]
set_property PACKAGE_PIN J16 [get_ports {FIXED_IO_mio[34]}]
set_property PACKAGE_PIN D19 [get_ports {FIXED_IO_mio[35]}]
set_property PACKAGE_PIN K16 [get_ports {FIXED_IO_mio[36]}]
set_property PACKAGE_PIN D20 [get_ports {FIXED_IO_mio[37]}]
set_property PACKAGE_PIN D21 [get_ports {FIXED_IO_mio[38]}]
set_property PACKAGE_PIN C21 [get_ports {FIXED_IO_mio[39]}]
set_property PACKAGE_PIN C22 [get_ports {FIXED_IO_mio[40]}]
set_property PACKAGE_PIN C19 [get_ports {FIXED_IO_mio[41]}]
set_property PACKAGE_PIN F17 [get_ports {FIXED_IO_mio[42]}]
set_property PACKAGE_PIN D18 [get_ports {FIXED_IO_mio[43]}]
set_property PACKAGE_PIN E18 [get_ports {FIXED_IO_mio[44]}]
set_property PACKAGE_PIN C18 [get_ports {FIXED_IO_mio[45]}]
set_property PACKAGE_PIN E17 [get_ports {FIXED_IO_mio[46]}]
set_property PACKAGE_PIN B19 [get_ports {FIXED_IO_mio[47]}]
set_property PACKAGE_PIN B21 [get_ports {FIXED_IO_mio[48]}]
set_property PACKAGE_PIN A18 [get_ports {FIXED_IO_mio[49]}]
set_property PACKAGE_PIN B22 [get_ports {FIXED_IO_mio[50]}]
set_property PACKAGE_PIN B20 [get_ports {FIXED_IO_mio[51]}]
set_property PACKAGE_PIN A20 [get_ports {FIXED_IO_mio[52]}]
set_property PACKAGE_PIN A19 [get_ports {FIXED_IO_mio[53]}]
set_property PACKAGE_PIN B24 [get_ports FIXED_IO_ps_clk]
set_property PACKAGE_PIN C23 [get_ports FIXED_IO_ps_porb]
set_property PACKAGE_PIN A22 [get_ports FIXED_IO_ps_srstb]
set_property SLEW FAST [get_ports FIXED_IO_ps_clk]



####################################################################################
# Constraints from file : 'ZynqDesign_rst_ps7_0_125M_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'ZynqDesign_rst_ps7_0_125M_0.xdc'
####################################################################################


# file: ZynqDesign_rst_ps7_0_125M_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.

current_instance zynq_subsystem/ZynqDesign_i/rst_ps7_0_125M/U0
set_false_path -to [get_pins -hier *cdc_to*/D]


####################################################################################
# Constraints from file : 'ZynqDesign_axi_amm_bridge_0_0.xdc'
####################################################################################

# file: ZynqDesign_axi_amm_bridge_0_0.xdc
# (c) Copyright 2009 - 2016 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
###################################################




####################################################################################
# Constraints from file : 'ZynqDesign_OPTOLINK_0_0.xdc'
####################################################################################

##################################################################################
##
## Project:  Aurora 64B/66B
## Company:  Xilinx
##
##
##
## (c) Copyright 2012 - 2013 Xilinx, Inc. All rights reserved.
##
## This file contains confidential and proprietary information
## of Xilinx, Inc. and is protected under U.S. and
## international copyright and other intellectual property
## laws.
##
## DISCLAIMER
## This disclaimer is not a license and does not grant any
## rights to the materials distributed herewith. Except as
## otherwise provided in a valid license issued to you by
## Xilinx, and to the maximum extent permitted by applicable
## law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
## WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
## AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
## BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
## INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
## (2) Xilinx shall not be liable (whether in contract or tort,
## including negligence, or under any other theory of
## liability) for any loss or damage of any kind or nature
## related to, arising under or in connection with these
## materials, including for any direct, or any indirect,
## special, incidental, or consequential loss or damage
## (including loss of data, profits, goodwill, or any type of
## loss or damage suffered as a result of any action brought
## by a third party) even if such damage or loss was
## reasonably foreseeable or Xilinx had been advised of the
## possibility of the same.
##
## CRITICAL APPLICATIONS
## Xilinx products are not designed or intended to be fail-
## safe, or for use in any application requiring fail-safe
## performance, such as life-support or safety devices or
## systems, Class III medical devices, nuclear facilities,
## applications related to the deployment of airbags, or any
## other applications that could lead to death, personal
## injury, or severe property or environmental damage
## (individually and collectively, "Critical
## Applications"). Customer assumes the sole risk and
## liability of any use of Xilinx products in Critical
## Applications, subject only to applicable laws and
## regulations governing limitations on product liability.
##
## THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
## PART OF THIS FILE AT ALL TIMES.

##
#################################################################################

##
##  ZynqDesign_OPTOLINK_0_0
##
##
##  Description: This is the design constraints file for a 1 lane Aurora
##               core.
##  This is Aurora Simplex XDC file.
##
##
################################################################################

################################################################################
################################ CLOCK CONSTRAINTS #############################

current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/OPTOLINK_0/inst
set_false_path -to [get_pins -hier *data_fifo*/RST]
set_false_path -to [get_pins -hier *rxrecclk_bufg_i*/CE]




# Create clock constraint for TXOUTCLK from GT
create_clock -period 5.120 [get_pins -hier -filter name=~*ZynqDesign_OPTOLINK_0_0_wrapper_i*ZynqDesign_OPTOLINK_0_0_multi_gt_i*ZynqDesign_OPTOLINK_0_0_gtx_inst/gtxe2_i/TXOUTCLK]


# Create clock constraint for RXOUTCLK from GT
create_clock -period 5.120 [get_pins -hier -filter name=~*ZynqDesign_OPTOLINK_0_0_wrapper_i*ZynqDesign_OPTOLINK_0_0_multi_gt_i*ZynqDesign_OPTOLINK_0_0_gtx_inst/gtxe2_i/RXOUTCLK]







################################################################################
#Note: Below GT locations are placeholders. Based upon the board chosen user need to edit the locations.
#      This edit is applicable when the core is used in IPI based designs only.
#	   At the moment, these locations are commented out.
#set_property LOC GTXE2_CHANNEL_X0Y8 [get_cells  ZynqDesign_OPTOLINK_0_0_block_i/inst/ZynqDesign_OPTOLINK_0_0_core_i/ZynqDesign_OPTOLINK_0_0_wrapper_i/ZynqDesign_OPTOLINK_0_0_multi_gt_i/ZynqDesign_OPTOLINK_0_0_gtx_inst/gtxe2_i]
################################################################################
################################################################################

# below constraint is needed for core
set_false_path -to [get_pins -hier *ZynqDesign_OPTOLINK_0_0_cdc_to*/D]

set_false_path -to [get_cells -hierarchical -filter {NAME =~ *data_sync_reg1}]
set_false_path -to [get_cells -hierarchical -filter {NAME =~ *ack_sync_reg1}]
################################################################################
################################################################################


####################################################################################
# Constraints from file : 'ZynqDesign_OPTOLINK_1_0.xdc'
####################################################################################

##################################################################################
##
## Project:  Aurora 64B/66B
## Company:  Xilinx
##
##
##
## (c) Copyright 2012 - 2013 Xilinx, Inc. All rights reserved.
##
## This file contains confidential and proprietary information
## of Xilinx, Inc. and is protected under U.S. and
## international copyright and other intellectual property
## laws.
##
## DISCLAIMER
## This disclaimer is not a license and does not grant any
## rights to the materials distributed herewith. Except as
## otherwise provided in a valid license issued to you by
## Xilinx, and to the maximum extent permitted by applicable
## law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
## WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
## AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
## BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
## INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
## (2) Xilinx shall not be liable (whether in contract or tort,
## including negligence, or under any other theory of
## liability) for any loss or damage of any kind or nature
## related to, arising under or in connection with these
## materials, including for any direct, or any indirect,
## special, incidental, or consequential loss or damage
## (including loss of data, profits, goodwill, or any type of
## loss or damage suffered as a result of any action brought
## by a third party) even if such damage or loss was
## reasonably foreseeable or Xilinx had been advised of the
## possibility of the same.
##
## CRITICAL APPLICATIONS
## Xilinx products are not designed or intended to be fail-
## safe, or for use in any application requiring fail-safe
## performance, such as life-support or safety devices or
## systems, Class III medical devices, nuclear facilities,
## applications related to the deployment of airbags, or any
## other applications that could lead to death, personal
## injury, or severe property or environmental damage
## (individually and collectively, "Critical
## Applications"). Customer assumes the sole risk and
## liability of any use of Xilinx products in Critical
## Applications, subject only to applicable laws and
## regulations governing limitations on product liability.
##
## THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
## PART OF THIS FILE AT ALL TIMES.

##
#################################################################################

##
##  ZynqDesign_OPTOLINK_1_0
##
##
##  Description: This is the design constraints file for a 1 lane Aurora
##               core.
##  This is Aurora Simplex XDC file.
##
##
################################################################################

################################################################################
################################ CLOCK CONSTRAINTS #############################

current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/OPTOLINK_1/inst
set_false_path -to [get_pins -hier *data_fifo*/RST]
set_false_path -to [get_pins -hier *rxrecclk_bufg_i*/CE]




# Create clock constraint for TXOUTCLK from GT
create_clock -period 5.120 [get_pins -hier -filter name=~*ZynqDesign_OPTOLINK_1_0_wrapper_i*ZynqDesign_OPTOLINK_1_0_multi_gt_i*ZynqDesign_OPTOLINK_1_0_gtx_inst/gtxe2_i/TXOUTCLK]


# Create clock constraint for RXOUTCLK from GT
create_clock -period 5.120 [get_pins -hier -filter name=~*ZynqDesign_OPTOLINK_1_0_wrapper_i*ZynqDesign_OPTOLINK_1_0_multi_gt_i*ZynqDesign_OPTOLINK_1_0_gtx_inst/gtxe2_i/RXOUTCLK]







################################################################################
#Note: Below GT locations are placeholders. Based upon the board chosen user need to edit the locations.
#      This edit is applicable when the core is used in IPI based designs only.
#	   At the moment, these locations are commented out.

#set_property LOC GTXE2_CHANNEL_X0Y8 [get_cells  ZynqDesign_OPTOLINK_1_0_block_i/ZynqDesign_OPTOLINK_1_0_i/inst/ZynqDesign_OPTOLINK_1_0_wrapper_i/ZynqDesign_OPTOLINK_1_0_multi_gt_i/ZynqDesign_OPTOLINK_1_0_gtx_inst/gtxe2_i]
################################################################################
################################################################################

# below constraint is needed for core
set_false_path -to [get_pins -hier *ZynqDesign_OPTOLINK_1_0_cdc_to*/D]

set_false_path -to [get_cells -hierarchical -filter {NAME =~ *data_sync_reg1}]
set_false_path -to [get_cells -hierarchical -filter {NAME =~ *ack_sync_reg1}]
################################################################################
################################################################################


####################################################################################
# Constraints from file : 'ZynqDesign_axis_data_fifo_0_0.xdc'
####################################################################################







################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

#------------------------------------------------------------------------------#
#                             AXI FIFO Constraints                             #
#------------------------------------------------------------------------------#
# Set false path on the asynchronous AXI reset port (s_aresetn) to the inputs of synchronizers



################################################################################



####################################################################################
# Constraints from file : 'ZynqDesign_axis_data_fifo_0_1.xdc'
####################################################################################







################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

#------------------------------------------------------------------------------#
#                             AXI FIFO Constraints                             #
#------------------------------------------------------------------------------#
# Set false path on the asynchronous AXI reset port (s_aresetn) to the inputs of synchronizers



################################################################################



####################################################################################
# Constraints from file : 'ZynqDesign_axis_data_fifo_0_2.xdc'
####################################################################################







################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

#------------------------------------------------------------------------------#
#                             AXI FIFO Constraints                             #
#------------------------------------------------------------------------------#
# Set false path on the asynchronous AXI reset port (s_aresetn) to the inputs of synchronizers



################################################################################



####################################################################################
# Constraints from file : 'ZynqDesign_axis_data_fifo_2_0.xdc'
####################################################################################







################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

#------------------------------------------------------------------------------#
#                             AXI FIFO Constraints                             #
#------------------------------------------------------------------------------#
# Set false path on the asynchronous AXI reset port (s_aresetn) to the inputs of synchronizers



################################################################################



####################################################################################
# Constraints from file : 'ZynqDesign_axis_data_fifo_4_0.xdc'
####################################################################################







################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

#------------------------------------------------------------------------------#
#                             AXI FIFO Constraints                             #
#------------------------------------------------------------------------------#
# Set false path on the asynchronous AXI reset port (s_aresetn) to the inputs of synchronizers



################################################################################



####################################################################################
# Constraints from file : 'fifo_generator_0.xdc'
####################################################################################







################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

# Set false path on the asynchronous reset port (rst) to the inputs of synchronizers
#set_false_path -through [get_pins -of [get_cells -hier -filter name=~*rst_wr_reg2_inst*/arststages_ff_reg[1]] -filter {REF_PIN_NAME == Q}] -to [get_pins -of [get_cells -hier -filter name=~*rstblk*/*] -filter {REF_PIN_NAME == PRE}]



################################################################################








################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

# Set false path on the asynchronous reset port (rst) to the inputs of synchronizers
#set_false_path -through [get_pins -of [get_cells -hier -filter name=~*rst_wr_reg2_inst*/arststages_ff_reg[1]] -filter {REF_PIN_NAME == Q}] -to [get_pins -of [get_cells -hier -filter name=~*rstblk*/*] -filter {REF_PIN_NAME == PRE}]



################################################################################








################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

# Set false path on the asynchronous reset port (rst) to the inputs of synchronizers
#set_false_path -through [get_pins -of [get_cells -hier -filter name=~*rst_wr_reg2_inst*/arststages_ff_reg[1]] -filter {REF_PIN_NAME == Q}] -to [get_pins -of [get_cells -hier -filter name=~*rstblk*/*] -filter {REF_PIN_NAME == PRE}]



################################################################################








################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

# Set false path on the asynchronous reset port (rst) to the inputs of synchronizers
#set_false_path -through [get_pins -of [get_cells -hier -filter name=~*rst_wr_reg2_inst*/arststages_ff_reg[1]] -filter {REF_PIN_NAME == Q}] -to [get_pins -of [get_cells -hier -filter name=~*rstblk*/*] -filter {REF_PIN_NAME == PRE}]



################################################################################








################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

# Set false path on the asynchronous reset port (rst) to the inputs of synchronizers
#set_false_path -through [get_pins -of [get_cells -hier -filter name=~*rst_wr_reg2_inst*/arststages_ff_reg[1]] -filter {REF_PIN_NAME == Q}] -to [get_pins -of [get_cells -hier -filter name=~*rstblk*/*] -filter {REF_PIN_NAME == PRE}]



################################################################################








################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

# Set false path on the asynchronous reset port (rst) to the inputs of synchronizers
#set_false_path -through [get_pins -of [get_cells -hier -filter name=~*rst_wr_reg2_inst*/arststages_ff_reg[1]] -filter {REF_PIN_NAME == Q}] -to [get_pins -of [get_cells -hier -filter name=~*rstblk*/*] -filter {REF_PIN_NAME == PRE}]



################################################################################








################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

# Set false path on the asynchronous reset port (rst) to the inputs of synchronizers
#set_false_path -through [get_pins -of [get_cells -hier -filter name=~*rst_wr_reg2_inst*/arststages_ff_reg[1]] -filter {REF_PIN_NAME == Q}] -to [get_pins -of [get_cells -hier -filter name=~*rstblk*/*] -filter {REF_PIN_NAME == PRE}]



################################################################################








################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################

#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

# Set false path on the asynchronous reset port (rst) to the inputs of synchronizers
#set_false_path -through [get_pins -of [get_cells -hier -filter name=~*rst_wr_reg2_inst*/arststages_ff_reg[1]] -filter {REF_PIN_NAME == Q}] -to [get_pins -of [get_cells -hier -filter name=~*rstblk*/*] -filter {REF_PIN_NAME == PRE}]



################################################################################



####################################################################################
# Constraints from file : 'clk_wiz_0.xdc'
####################################################################################


# file: clk_wiz_0.xdc
#
# (c) Copyright 2008 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#

# Input clock periods. These duplicate the values entered for the
# input clocks. You can use these to time your system. If required
# commented constraints can be used in the top level xdc
#----------------------------------------------------------------
#create_clock -period 8.000 [get_ports clk_in1]
#set_input_jitter [get_clocks -of_objects [get_ports clk_in1]] 0.08


current_instance -quiet
current_instance adcs/U0/dcm_ref/inst
set_property PHASESHIFT_MODE WAVEFORM [get_cells -hierarchical *adv*]


####################################################################################
# Constraints from file : 'R5560_pins.xdc'
####################################################################################


current_instance -quiet
set_property PACKAGE_PIN G7 [get_ports sCLK_125]
set_property PACKAGE_PIN V19 [get_ports sCLK_CH_SEL]

set_property IOSTANDARD LVCMOS18 [get_ports sCLK_125]
set_property IOSTANDARD LVCMOS25 [get_ports sCLK_CH_SEL]

create_clock -period 8.000 -name sCLK_125 -waveform {0.000 4.000} [get_ports sCLK_125]

set_property IOSTANDARD LVDS [get_ports ADC_SERVICE_CLK_OUT_P]
set_property IOSTANDARD LVDS [get_ports ADC_SERVICE_CLK_OUT_N]

set_property PACKAGE_PIN C8 [get_ports ADC_SERVICE_CLK_OUT_P]


set_property PACKAGE_PIN L9 [get_ports SMADC_1_CSA]
set_property PACKAGE_PIN W14 [get_ports SMADC_1_CSB]


set_property PACKAGE_PIN K10 [get_ports SMADC_1_CLK]


set_property PACKAGE_PIN K12 [get_ports SMADC_1_MOSI]
set_property PACKAGE_PIN K11 [get_ports SMADC_2_MOSI]
set_property PACKAGE_PIN N8 [get_ports SMADC_3_MOSI]
set_property PACKAGE_PIN W17 [get_ports SMADC_4_MOSI]


set_property IOSTANDARD LVCMOS18 [get_ports SMADC_1_CLK]
set_property IOSTANDARD LVCMOS18 [get_ports SMADC_1_MOSI]
set_property IOSTANDARD LVCMOS18 [get_ports SMADC_2_MOSI]
set_property IOSTANDARD LVCMOS18 [get_ports SMADC_3_MOSI]
set_property IOSTANDARD LVCMOS25 [get_ports SMADC_4_MOSI]


set_property IOSTANDARD LVCMOS18 [get_ports SMADC_1_CSA]
set_property IOSTANDARD LVCMOS25 [get_ports SMADC_1_CSB]


create_clock -period 2.000 -name ADC_1_CLK_A_P -waveform {0.000 1.000} [get_ports ADC_1_CLK_A_P]
create_clock -period 2.000 -name ADC_1_CLK_B_P -waveform {0.000 1.000} [get_ports ADC_1_CLK_B_P]

create_clock -period 2.000 -name ADC_2_CLK_A_P -waveform {0.000 1.000} [get_ports ADC_2_CLK_A_P]
create_clock -period 2.000 -name ADC_2_CLK_B_P -waveform {0.000 1.000} [get_ports ADC_2_CLK_B_P]

create_clock -period 2.000 -name ADC_3_CLK_A_P -waveform {0.000 1.000} [get_ports ADC_3_CLK_A_P]
create_clock -period 2.000 -name ADC_3_CLK_B_P -waveform {0.000 1.000} [get_ports ADC_3_CLK_B_P]

create_clock -period 2.000 -name ADC_4_CLK_A_P -waveform {0.000 1.000} [get_ports ADC_4_CLK_A_P]
create_clock -period 2.000 -name ADC_4_CLK_B_P -waveform {0.000 1.000} [get_ports ADC_4_CLK_B_P]




set_property DIFF_TERM TRUE [get_ports ADC_1_CLK_A_P]
set_property DIFF_TERM TRUE [get_ports ADC_1_CLK_A_N]
set_property DIFF_TERM TRUE [get_ports ADC_1_CLK_B_P]
set_property DIFF_TERM TRUE [get_ports ADC_1_CLK_B_N]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_P[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_N[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_P[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_N[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_P[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_N[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_P[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_N[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_P[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_N[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_P[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_N[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_P[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_N[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_P[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_N[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_P[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_N[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_P[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_N[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_P[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_N[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_P[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_N[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_P[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_N[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_P[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_B_N[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_P[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_N[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_P[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_1_DATA_A_N[7]}]


set_property DIFF_TERM TRUE [get_ports ADC_2_CLK_A_P]
set_property DIFF_TERM TRUE [get_ports ADC_2_CLK_A_N]
set_property DIFF_TERM TRUE [get_ports ADC_2_CLK_B_P]
set_property DIFF_TERM TRUE [get_ports ADC_2_CLK_B_N]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_P[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_N[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_P[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_N[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_P[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_N[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_P[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_N[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_P[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_N[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_P[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_N[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_P[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_N[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_P[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_N[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_P[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_N[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_P[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_N[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_P[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_N[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_P[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_N[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_P[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_N[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_P[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_B_N[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_P[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_N[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_P[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_2_DATA_A_N[7]}]



set_property DIFF_TERM TRUE [get_ports ADC_3_CLK_A_P]
set_property DIFF_TERM TRUE [get_ports ADC_3_CLK_A_N]
set_property DIFF_TERM TRUE [get_ports ADC_3_CLK_B_P]
set_property DIFF_TERM TRUE [get_ports ADC_3_CLK_B_N]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_P[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_N[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_P[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_N[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_P[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_N[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_P[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_N[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_P[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_N[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_P[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_N[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_P[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_N[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_P[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_N[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_P[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_N[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_P[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_N[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_P[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_N[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_P[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_N[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_P[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_N[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_P[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_B_N[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_P[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_N[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_P[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_3_DATA_A_N[7]}]



set_property DIFF_TERM TRUE [get_ports ADC_4_CLK_A_P]
set_property DIFF_TERM TRUE [get_ports ADC_4_CLK_A_N]
set_property DIFF_TERM TRUE [get_ports ADC_4_CLK_B_P]
set_property DIFF_TERM TRUE [get_ports ADC_4_CLK_B_N]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_P[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_N[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_P[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_N[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_P[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_N[0]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_P[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_N[1]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_P[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_N[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_P[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_N[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_P[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_N[2]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_P[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_N[3]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_P[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_N[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_P[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_N[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_P[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_N[4]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_P[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_N[5]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_P[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_N[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_P[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_B_N[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_P[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_N[6]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_P[7]}]
set_property DIFF_TERM TRUE [get_ports {ADC_4_DATA_A_N[7]}]



set_property IOSTANDARD LVDS [get_ports ADC_1_CLK_A_P]
set_property IOSTANDARD LVDS [get_ports ADC_1_CLK_A_N]
set_property IOSTANDARD LVDS [get_ports ADC_1_CLK_B_P]
set_property IOSTANDARD LVDS [get_ports ADC_1_CLK_B_N]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_P[0]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_N[0]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_P[1]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_N[1]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_P[0]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_N[0]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_P[1]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_N[1]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_P[2]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_N[2]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_P[3]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_N[3]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_P[2]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_N[2]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_P[3]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_N[3]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_P[4]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_N[4]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_P[5]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_N[5]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_P[4]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_N[4]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_P[5]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_N[5]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_P[6]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_N[6]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_P[7]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_B_N[7]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_P[6]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_N[6]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_P[7]}]
set_property IOSTANDARD LVDS [get_ports {ADC_1_DATA_A_N[7]}]


set_property IOSTANDARD LVDS [get_ports ADC_2_CLK_A_P]
set_property IOSTANDARD LVDS [get_ports ADC_2_CLK_A_N]
set_property IOSTANDARD LVDS [get_ports ADC_2_CLK_B_P]
set_property IOSTANDARD LVDS [get_ports ADC_2_CLK_B_N]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_P[0]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_N[0]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_P[1]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_N[1]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_P[0]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_N[0]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_P[1]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_N[1]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_P[2]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_N[2]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_P[3]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_N[3]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_P[2]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_N[2]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_P[3]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_N[3]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_P[4]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_N[4]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_P[5]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_N[5]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_P[4]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_N[4]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_P[5]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_N[5]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_P[6]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_N[6]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_P[7]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_B_N[7]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_P[6]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_N[6]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_P[7]}]
set_property IOSTANDARD LVDS [get_ports {ADC_2_DATA_A_N[7]}]


set_property IOSTANDARD LVDS [get_ports ADC_3_CLK_A_P]
set_property IOSTANDARD LVDS [get_ports ADC_3_CLK_A_N]
set_property IOSTANDARD LVDS [get_ports ADC_3_CLK_B_P]
set_property IOSTANDARD LVDS [get_ports ADC_3_CLK_B_N]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_P[0]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_N[0]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_P[1]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_N[1]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_P[0]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_N[0]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_P[1]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_N[1]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_P[2]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_N[2]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_P[3]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_N[3]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_P[2]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_N[2]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_P[3]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_N[3]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_P[4]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_N[4]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_P[5]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_N[5]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_P[4]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_N[4]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_P[5]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_N[5]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_P[6]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_N[6]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_P[7]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_B_N[7]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_P[6]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_N[6]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_P[7]}]
set_property IOSTANDARD LVDS [get_ports {ADC_3_DATA_A_N[7]}]


set_property IOSTANDARD LVDS_25 [get_ports ADC_4_CLK_A_P]
set_property IOSTANDARD LVDS_25 [get_ports ADC_4_CLK_A_N]
set_property IOSTANDARD LVDS_25 [get_ports ADC_4_CLK_B_P]
set_property IOSTANDARD LVDS_25 [get_ports ADC_4_CLK_B_N]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_P[0]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_N[0]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_P[1]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_N[1]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_P[0]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_N[0]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_P[1]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_N[1]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_P[2]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_N[2]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_P[3]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_N[3]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_P[2]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_N[2]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_P[3]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_N[3]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_P[4]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_N[4]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_P[5]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_N[5]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_P[4]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_N[4]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_P[5]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_N[5]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_P[6]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_N[6]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_P[7]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_B_N[7]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_P[6]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_N[6]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_P[7]}]
set_property IOSTANDARD LVDS_25 [get_ports {ADC_4_DATA_A_N[7]}]

set_property IODELAY_GROUP IODELAY_ADC1 [get_cells adcs/adc_interface1/ADC_DESER1/delayctrl]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells adcs/adc_interface1/ADC_DESER1/idelaye2_clk]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER1/pins[0].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER1/pins[1].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER1/pins[2].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER1/pins[3].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER1/pins[4].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER1/pins[5].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER1/pins[6].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER1/pins[7].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER1/pins[8].idelaye2_bus}]

set_property IODELAY_GROUP IODELAY_ADC1 [get_cells adcs/adc_interface1/ADC_DESER2/idelaye2_clk]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER2/pins[0].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER2/pins[1].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER2/pins[2].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER2/pins[3].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER2/pins[4].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER2/pins[5].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER2/pins[6].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER2/pins[7].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC1 [get_cells {adcs/adc_interface1/ADC_DESER2/pins[8].idelaye2_bus}]

set_false_path -from [get_clocks -of_objects [get_pins adcs/adc_interface1/ADC_DESER1/clkout_buf_inst/O]] -to [get_clocks sCLK_125]
set_false_path -from [get_clocks -of_objects [get_pins adcs/adc_interface1/ADC_DESER2/clkout_buf_inst/O]] -to [get_clocks sCLK_125]



set_property IODELAY_GROUP IODELAY_ADC2 [get_cells adcs/adc_interface2/ADC_DESER1/delayctrl]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells adcs/adc_interface2/ADC_DESER1/idelaye2_clk]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER1/pins[1].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER1/pins[2].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER1/pins[3].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER1/pins[4].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER1/pins[5].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER1/pins[6].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER1/pins[7].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER1/pins[8].idelaye2_bus}]

set_property IODELAY_GROUP IODELAY_ADC2 [get_cells adcs/adc_interface2/ADC_DESER2/idelaye2_clk]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER2/pins[1].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER2/pins[2].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER2/pins[3].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER2/pins[4].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER2/pins[5].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER2/pins[6].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER2/pins[7].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC2 [get_cells {adcs/adc_interface2/ADC_DESER2/pins[8].idelaye2_bus}]

set_false_path -from [get_clocks -of_objects [get_pins adcs/adc_interface2/ADC_DESER1/clkout_buf_inst/O]] -to [get_clocks sCLK_125]
set_false_path -from [get_clocks -of_objects [get_pins adcs/adc_interface2/ADC_DESER2/clkout_buf_inst/O]] -to [get_clocks sCLK_125]



set_property IODELAY_GROUP IODELAY_ADC3 [get_cells adcs/adc_interface3/ADC_DESER1/delayctrl]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells adcs/adc_interface3/ADC_DESER1/idelaye2_clk]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER1/pins[1].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER1/pins[2].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER1/pins[3].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER1/pins[4].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER1/pins[5].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER1/pins[6].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER1/pins[7].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER1/pins[8].idelaye2_bus}]

set_property IODELAY_GROUP IODELAY_ADC3 [get_cells adcs/adc_interface3/ADC_DESER2/idelaye2_clk]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER2/pins[1].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER2/pins[2].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER2/pins[3].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER2/pins[4].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER2/pins[5].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER2/pins[6].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER2/pins[7].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC3 [get_cells {adcs/adc_interface3/ADC_DESER2/pins[8].idelaye2_bus}]

set_false_path -from [get_clocks -of_objects [get_pins adcs/adc_interface3/ADC_DESER1/clkout_buf_inst/O]] -to [get_clocks sCLK_125]
set_false_path -from [get_clocks -of_objects [get_pins adcs/adc_interface3/ADC_DESER2/clkout_buf_inst/O]] -to [get_clocks sCLK_125]



set_property IODELAY_GROUP IODELAY_ADC4 [get_cells adcs/adc_interface4/ADC_DESER1/delayctrl]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells adcs/adc_interface4/ADC_DESER1/idelaye2_clk]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER1/pins[1].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER1/pins[2].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER1/pins[3].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER1/pins[4].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER1/pins[5].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER1/pins[6].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER1/pins[7].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER1/pins[8].idelaye2_bus}]

set_property IODELAY_GROUP IODELAY_ADC4 [get_cells adcs/adc_interface4/ADC_DESER2/idelaye2_clk]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER2/pins[1].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER2/pins[2].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER2/pins[3].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER2/pins[4].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER2/pins[5].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER2/pins[6].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER2/pins[7].idelaye2_bus}]
set_property IODELAY_GROUP IODELAY_ADC4 [get_cells {adcs/adc_interface4/ADC_DESER2/pins[8].idelaye2_bus}]

set_false_path -from [get_clocks -of_objects [get_pins adcs/adc_interface4/ADC_DESER1/clkout_buf_inst/O]] -to [get_clocks sCLK_125]
set_false_path -from [get_clocks -of_objects [get_pins adcs/adc_interface4/ADC_DESER2/clkout_buf_inst/O]] -to [get_clocks sCLK_125]

######  ADC 1 ########

#D0A1 #D1A1     AN0		(1A/2A)
set_property PACKAGE_PIN B16 [get_ports {ADC_1_DATA_A_P[0]}]
set_property PACKAGE_PIN B17 [get_ports {ADC_1_DATA_B_P[0]}]

#D0B1 #D1B1     AN2		(3A/4A)
set_property PACKAGE_PIN C14 [get_ports {ADC_1_DATA_A_P[2]}]
set_property PACKAGE_PIN D13 [get_ports {ADC_1_DATA_B_P[2]}]

#D0C1 #D1C1     AN4		(5A/6A)
set_property PACKAGE_PIN F12 [get_ports {ADC_1_DATA_A_P[4]}]
set_property PACKAGE_PIN E11 [get_ports {ADC_1_DATA_B_P[4]}]

#D0D1 #D1D1     AN6		(7A/8A)
set_property PACKAGE_PIN H13 [get_ports {ADC_1_DATA_A_P[6]}]
set_property PACKAGE_PIN K13 [get_ports {ADC_1_DATA_B_P[6]}]

#D0A2 #D1A2     AN1		(1B/2B)
set_property PACKAGE_PIN E16 [get_ports {ADC_1_DATA_A_P[1]}]
set_property PACKAGE_PIN A15 [get_ports {ADC_1_DATA_B_P[1]}]

#D0B2 #D1B2     AN3		(3B/4B)
set_property PACKAGE_PIN G12 [get_ports {ADC_1_DATA_A_P[3]}]
set_property PACKAGE_PIN F13 [get_ports {ADC_1_DATA_B_P[3]}]

#D0C2 #D1C2     AN5		(5B/6B)
set_property PACKAGE_PIN E10 [get_ports {ADC_1_DATA_A_P[5]}]
set_property PACKAGE_PIN G10 [get_ports {ADC_1_DATA_B_P[5]}]

#D0D2 #D1D2     AN7		(7B/8B)
set_property PACKAGE_PIN K15 [get_ports {ADC_1_DATA_A_P[7]}]
set_property PACKAGE_PIN G16 [get_ports {ADC_1_DATA_B_P[7]}]

set_property PACKAGE_PIN G14 [get_ports ADC_1_CLK_A_P]
set_property PACKAGE_PIN F15 [get_ports ADC_1_CLK_B_P]




######  ADC 2 ########

#D0A1 #D1A1     AN0		(1A/2A)
set_property PACKAGE_PIN B10 [get_ports {ADC_2_DATA_A_P[0]}]
set_property PACKAGE_PIN A9 [get_ports {ADC_2_DATA_B_P[0]}]

#D0B1 #D1B1     AN2		(3A/4A)
set_property PACKAGE_PIN C4 [get_ports {ADC_2_DATA_A_P[2]}]
set_property PACKAGE_PIN B7 [get_ports {ADC_2_DATA_B_P[2]}]

#D0C1 #D1C1     AN4		(5A/6A)
set_property PACKAGE_PIN G6 [get_ports {ADC_2_DATA_A_P[4]}]
set_property PACKAGE_PIN J8 [get_ports {ADC_2_DATA_B_P[4]}]

#D0D1 #D1D1     AN6		(7A/8A)
set_property PACKAGE_PIN E6 [get_ports {ADC_2_DATA_A_P[6]}]
set_property PACKAGE_PIN F5 [get_ports {ADC_2_DATA_B_P[6]}]

#D0A2 #D1A2     AN1		(1B/2B)
set_property PACKAGE_PIN C9 [get_ports {ADC_2_DATA_A_P[1]}]
set_property PACKAGE_PIN D9 [get_ports {ADC_2_DATA_B_P[1]}]

#D0B2 #D1B2     AN3		(3B/4B)
set_property PACKAGE_PIN B6 [get_ports {ADC_2_DATA_A_P[3]}]
set_property PACKAGE_PIN B5 [get_ports {ADC_2_DATA_B_P[3]}]

#D0C2 #D1C2     AN5		(5B/6B)
set_property PACKAGE_PIN J10 [get_ports {ADC_2_DATA_A_P[5]}]
set_property PACKAGE_PIN J11 [get_ports {ADC_2_DATA_B_P[5]}]

#D0D2 #D1D2     AN7		(7B/8B)
set_property PACKAGE_PIN F9 [get_ports {ADC_2_DATA_A_P[7]}]
set_property PACKAGE_PIN H7 [get_ports {ADC_2_DATA_B_P[7]}]

set_property PACKAGE_PIN F8 [get_ports ADC_2_CLK_A_P]
set_property PACKAGE_PIN D6 [get_ports ADC_2_CLK_B_P]





######  ADC 3 ########

#D0A1 #D1A1     AN0		(1A/2A)
set_property PACKAGE_PIN F3 [get_ports {ADC_3_DATA_A_P[0]}]
set_property PACKAGE_PIN G4 [get_ports {ADC_3_DATA_B_P[0]}]

#D0B1 #D1B1     AN2		(3A/4A)
set_property PACKAGE_PIN D4 [get_ports {ADC_3_DATA_A_P[2]}]
set_property PACKAGE_PIN E2 [get_ports {ADC_3_DATA_B_P[2]}]

#D0C1 #D1C1     AN4		(5A/6A)
set_property PACKAGE_PIN J1 [get_ports {ADC_3_DATA_A_P[4]}]
set_property PACKAGE_PIN H4 [get_ports {ADC_3_DATA_B_P[4]}]

#D0D1 #D1D1     AN6		(7A/8A)
set_property PACKAGE_PIN N1 [get_ports {ADC_3_DATA_A_P[6]}]
set_property PACKAGE_PIN N4 [get_ports {ADC_3_DATA_B_P[6]}]

#D0A2 #D1A2     AN1		(1B/2B)
set_property PACKAGE_PIN K5 [get_ports {ADC_3_DATA_A_P[1]}]
set_property PACKAGE_PIN D1 [get_ports {ADC_3_DATA_B_P[1]}]

#D0B2 #D1B2     AN3		(3B/4B)
set_property PACKAGE_PIN G2 [get_ports {ADC_3_DATA_A_P[3]}]
set_property PACKAGE_PIN H2 [get_ports {ADC_3_DATA_B_P[3]}]

#D0C2 #D1C2     AN5		(5B/6B)
set_property PACKAGE_PIN K2 [get_ports {ADC_3_DATA_A_P[5]}]
set_property PACKAGE_PIN M2 [get_ports {ADC_3_DATA_B_P[5]}]

#D0D2 #D1D2     AN7		(7B/8B)
set_property PACKAGE_PIN M7 [get_ports {ADC_3_DATA_A_P[7]}]
set_property PACKAGE_PIN M8 [get_ports {ADC_3_DATA_B_P[7]}]

set_property PACKAGE_PIN L5 [get_ports ADC_3_CLK_A_P]
set_property PACKAGE_PIN L3 [get_ports ADC_3_CLK_B_P]

######  ADC 4 ########

#D0A1 #D1A1     AN0		(1A/2A)
set_property PACKAGE_PIN AE12 [get_ports {ADC_4_DATA_A_P[0]}]
set_property PACKAGE_PIN Y12 [get_ports {ADC_4_DATA_B_P[0]}]

#D0B1 #D1B1     AN2		(3A/4A)
set_property PACKAGE_PIN Y10 [get_ports {ADC_4_DATA_A_P[2]}]
set_property PACKAGE_PIN AA13 [get_ports {ADC_4_DATA_B_P[2]}]

#D0C1 #D1C1     AN4		(5A/6A)
set_property PACKAGE_PIN AB12 [get_ports {ADC_4_DATA_A_P[4]}]
set_property PACKAGE_PIN AE10 [get_ports {ADC_4_DATA_B_P[4]}]

#D0D1 #D1D1     AN6		(7A/8A)
set_property PACKAGE_PIN AC17 [get_ports {ADC_4_DATA_A_P[6]}]
set_property PACKAGE_PIN AE17 [get_ports {ADC_4_DATA_B_P[6]}]

#D0A2 #D1A2     AN1		(1B/2B)
set_property PACKAGE_PIN W13 [get_ports {ADC_4_DATA_A_P[1]}]
set_property PACKAGE_PIN AE13 [get_ports {ADC_4_DATA_B_P[1]}]

#D0B2 #D1B2     AN3		(3B/4B)
set_property PACKAGE_PIN AB17 [get_ports {ADC_4_DATA_A_P[3]}]
set_property PACKAGE_PIN AB11 [get_ports {ADC_4_DATA_B_P[3]}]

#D0C2 #D1C2     AN5		(5B/6B)
set_property PACKAGE_PIN AE11 [get_ports {ADC_4_DATA_A_P[5]}]
set_property PACKAGE_PIN AD16 [get_ports {ADC_4_DATA_B_P[5]}]

#D0D2 #D1D2     AN7		(7B/8B)
set_property PACKAGE_PIN AF15 [get_ports {ADC_4_DATA_A_P[7]}]
set_property PACKAGE_PIN AE16 [get_ports {ADC_4_DATA_B_P[7]}]

set_property PACKAGE_PIN AB15 [get_ports ADC_4_CLK_A_P]
set_property PACKAGE_PIN AC12 [get_ports ADC_4_CLK_B_P]


set_property PACKAGE_PIN R6 [get_ports GT_REFCLK_0_clk_p]


set_property PACKAGE_PIN J6 [get_ports SFP_DISABLE1]
set_property IOSTANDARD LVCMOS18 [get_ports SFP_DISABLE1]
set_property PACKAGE_PIN K6 [get_ports SFP_DISABLE2]
set_property IOSTANDARD LVCMOS18 [get_ports SFP_DISABLE2]


set_property BITSTREAM.GENERAL.COMPRESS TRUE [current_design]


set_property MARK_DEBUG true [get_nets {CH0[0]}]
set_property MARK_DEBUG true [get_nets {CH0[10]}]
set_property MARK_DEBUG true [get_nets {CH0[11]}]
set_property MARK_DEBUG true [get_nets {CH0[12]}]
set_property MARK_DEBUG true [get_nets {CH0[13]}]
set_property MARK_DEBUG true [get_nets {CH0[14]}]
set_property MARK_DEBUG true [get_nets {CH0[15]}]
set_property MARK_DEBUG true [get_nets {CH0[1]}]
set_property MARK_DEBUG true [get_nets {CH0[2]}]
set_property MARK_DEBUG true [get_nets {CH0[3]}]
set_property MARK_DEBUG true [get_nets {CH0[4]}]
set_property MARK_DEBUG true [get_nets {CH0[5]}]
set_property MARK_DEBUG true [get_nets {CH0[6]}]
set_property MARK_DEBUG true [get_nets {CH0[7]}]
set_property MARK_DEBUG true [get_nets {CH0[8]}]
set_property MARK_DEBUG true [get_nets {CH0[9]}]
set_property MARK_DEBUG true [get_nets {CH10[0]}]
set_property MARK_DEBUG true [get_nets {CH10[10]}]
set_property MARK_DEBUG true [get_nets {CH10[11]}]
set_property MARK_DEBUG true [get_nets {CH10[12]}]
set_property MARK_DEBUG true [get_nets {CH10[13]}]
set_property MARK_DEBUG true [get_nets {CH10[14]}]
set_property MARK_DEBUG true [get_nets {CH10[15]}]
set_property MARK_DEBUG true [get_nets {CH10[1]}]
set_property MARK_DEBUG true [get_nets {CH10[2]}]
set_property MARK_DEBUG true [get_nets {CH10[3]}]
set_property MARK_DEBUG true [get_nets {CH10[4]}]
set_property MARK_DEBUG true [get_nets {CH10[5]}]
set_property MARK_DEBUG true [get_nets {CH10[6]}]
set_property MARK_DEBUG true [get_nets {CH10[7]}]
set_property MARK_DEBUG true [get_nets {CH10[8]}]
set_property MARK_DEBUG true [get_nets {CH10[9]}]
set_property MARK_DEBUG true [get_nets {CH11[0]}]
set_property MARK_DEBUG true [get_nets {CH11[10]}]
set_property MARK_DEBUG true [get_nets {CH11[11]}]
set_property MARK_DEBUG true [get_nets {CH11[12]}]
set_property MARK_DEBUG true [get_nets {CH11[13]}]
set_property MARK_DEBUG true [get_nets {CH11[14]}]
set_property MARK_DEBUG true [get_nets {CH11[15]}]
set_property MARK_DEBUG true [get_nets {CH11[1]}]
set_property MARK_DEBUG true [get_nets {CH11[2]}]
set_property MARK_DEBUG true [get_nets {CH11[3]}]
set_property MARK_DEBUG true [get_nets {CH11[4]}]
set_property MARK_DEBUG true [get_nets {CH11[5]}]
set_property MARK_DEBUG true [get_nets {CH11[6]}]
set_property MARK_DEBUG true [get_nets {CH11[7]}]
set_property MARK_DEBUG true [get_nets {CH11[8]}]
set_property MARK_DEBUG true [get_nets {CH11[9]}]
set_property MARK_DEBUG true [get_nets {CH12[0]}]
set_property MARK_DEBUG true [get_nets {CH12[10]}]
set_property MARK_DEBUG true [get_nets {CH12[11]}]
set_property MARK_DEBUG true [get_nets {CH12[12]}]
set_property MARK_DEBUG true [get_nets {CH12[13]}]
set_property MARK_DEBUG true [get_nets {CH12[14]}]
set_property MARK_DEBUG true [get_nets {CH12[15]}]
set_property MARK_DEBUG true [get_nets {CH12[1]}]
set_property MARK_DEBUG true [get_nets {CH12[2]}]
set_property MARK_DEBUG true [get_nets {CH12[3]}]
set_property MARK_DEBUG true [get_nets {CH12[4]}]
set_property MARK_DEBUG true [get_nets {CH12[5]}]
set_property MARK_DEBUG true [get_nets {CH12[6]}]
set_property MARK_DEBUG true [get_nets {CH12[7]}]
set_property MARK_DEBUG true [get_nets {CH12[8]}]
set_property MARK_DEBUG true [get_nets {CH12[9]}]
set_property MARK_DEBUG true [get_nets {CH13[0]}]
set_property MARK_DEBUG true [get_nets {CH13[10]}]
set_property MARK_DEBUG true [get_nets {CH13[11]}]
set_property MARK_DEBUG true [get_nets {CH13[12]}]
set_property MARK_DEBUG true [get_nets {CH13[13]}]
set_property MARK_DEBUG true [get_nets {CH13[14]}]
set_property MARK_DEBUG true [get_nets {CH13[15]}]
set_property MARK_DEBUG true [get_nets {CH13[1]}]
set_property MARK_DEBUG true [get_nets {CH13[2]}]
set_property MARK_DEBUG true [get_nets {CH13[3]}]
set_property MARK_DEBUG true [get_nets {CH13[4]}]
set_property MARK_DEBUG true [get_nets {CH13[5]}]
set_property MARK_DEBUG true [get_nets {CH13[6]}]
set_property MARK_DEBUG true [get_nets {CH13[7]}]
set_property MARK_DEBUG true [get_nets {CH13[8]}]
set_property MARK_DEBUG true [get_nets {CH13[9]}]
set_property MARK_DEBUG true [get_nets {CH14[0]}]
set_property MARK_DEBUG true [get_nets {CH14[10]}]
set_property MARK_DEBUG true [get_nets {CH14[11]}]
set_property MARK_DEBUG true [get_nets {CH14[12]}]
set_property MARK_DEBUG true [get_nets {CH14[13]}]
set_property MARK_DEBUG true [get_nets {CH14[14]}]
set_property MARK_DEBUG true [get_nets {CH14[15]}]
set_property MARK_DEBUG true [get_nets {CH14[1]}]
set_property MARK_DEBUG true [get_nets {CH14[2]}]
set_property MARK_DEBUG true [get_nets {CH14[3]}]
set_property MARK_DEBUG true [get_nets {CH14[4]}]
set_property MARK_DEBUG true [get_nets {CH14[5]}]
set_property MARK_DEBUG true [get_nets {CH14[6]}]
set_property MARK_DEBUG true [get_nets {CH14[7]}]
set_property MARK_DEBUG true [get_nets {CH14[8]}]
set_property MARK_DEBUG true [get_nets {CH14[9]}]
set_property MARK_DEBUG true [get_nets {CH15[0]}]
set_property MARK_DEBUG true [get_nets {CH15[10]}]
set_property MARK_DEBUG true [get_nets {CH15[11]}]
set_property MARK_DEBUG true [get_nets {CH15[12]}]
set_property MARK_DEBUG true [get_nets {CH15[13]}]
set_property MARK_DEBUG true [get_nets {CH15[14]}]
set_property MARK_DEBUG true [get_nets {CH15[15]}]
set_property MARK_DEBUG true [get_nets {CH15[1]}]
set_property MARK_DEBUG true [get_nets {CH15[2]}]
set_property MARK_DEBUG true [get_nets {CH15[3]}]
set_property MARK_DEBUG true [get_nets {CH15[4]}]
set_property MARK_DEBUG true [get_nets {CH15[5]}]
set_property MARK_DEBUG true [get_nets {CH15[6]}]
set_property MARK_DEBUG true [get_nets {CH15[7]}]
set_property MARK_DEBUG true [get_nets {CH15[8]}]
set_property MARK_DEBUG true [get_nets {CH15[9]}]
set_property MARK_DEBUG true [get_nets {CH16[0]}]
set_property MARK_DEBUG true [get_nets {CH16[10]}]
set_property MARK_DEBUG true [get_nets {CH16[11]}]
set_property MARK_DEBUG true [get_nets {CH16[12]}]
set_property MARK_DEBUG true [get_nets {CH16[13]}]
set_property MARK_DEBUG true [get_nets {CH16[14]}]
set_property MARK_DEBUG true [get_nets {CH16[15]}]
set_property MARK_DEBUG true [get_nets {CH16[1]}]
set_property MARK_DEBUG true [get_nets {CH16[2]}]
set_property MARK_DEBUG true [get_nets {CH16[3]}]
set_property MARK_DEBUG true [get_nets {CH16[4]}]
set_property MARK_DEBUG true [get_nets {CH16[5]}]
set_property MARK_DEBUG true [get_nets {CH16[6]}]
set_property MARK_DEBUG true [get_nets {CH16[7]}]
set_property MARK_DEBUG true [get_nets {CH16[8]}]
set_property MARK_DEBUG true [get_nets {CH16[9]}]
set_property MARK_DEBUG true [get_nets {CH17[0]}]
set_property MARK_DEBUG true [get_nets {CH17[10]}]
set_property MARK_DEBUG true [get_nets {CH17[11]}]
set_property MARK_DEBUG true [get_nets {CH17[12]}]
set_property MARK_DEBUG true [get_nets {CH17[13]}]
set_property MARK_DEBUG true [get_nets {CH17[14]}]
set_property MARK_DEBUG true [get_nets {CH17[15]}]
set_property MARK_DEBUG true [get_nets {CH17[1]}]
set_property MARK_DEBUG true [get_nets {CH17[2]}]
set_property MARK_DEBUG true [get_nets {CH17[3]}]
set_property MARK_DEBUG true [get_nets {CH17[4]}]
set_property MARK_DEBUG true [get_nets {CH17[5]}]
set_property MARK_DEBUG true [get_nets {CH17[6]}]
set_property MARK_DEBUG true [get_nets {CH17[7]}]
set_property MARK_DEBUG true [get_nets {CH17[8]}]
set_property MARK_DEBUG true [get_nets {CH17[9]}]
set_property MARK_DEBUG true [get_nets {CH18[0]}]
set_property MARK_DEBUG true [get_nets {CH18[10]}]
set_property MARK_DEBUG true [get_nets {CH18[11]}]
set_property MARK_DEBUG true [get_nets {CH18[12]}]
set_property MARK_DEBUG true [get_nets {CH18[13]}]
set_property MARK_DEBUG true [get_nets {CH18[14]}]
set_property MARK_DEBUG true [get_nets {CH18[15]}]
set_property MARK_DEBUG true [get_nets {CH18[1]}]
set_property MARK_DEBUG true [get_nets {CH18[2]}]
set_property MARK_DEBUG true [get_nets {CH18[3]}]
set_property MARK_DEBUG true [get_nets {CH18[4]}]
set_property MARK_DEBUG true [get_nets {CH18[5]}]
set_property MARK_DEBUG true [get_nets {CH18[6]}]
set_property MARK_DEBUG true [get_nets {CH18[7]}]
set_property MARK_DEBUG true [get_nets {CH18[8]}]
set_property MARK_DEBUG true [get_nets {CH18[9]}]
set_property MARK_DEBUG true [get_nets {CH19[0]}]
set_property MARK_DEBUG true [get_nets {CH19[10]}]
set_property MARK_DEBUG true [get_nets {CH19[11]}]
set_property MARK_DEBUG true [get_nets {CH19[12]}]
set_property MARK_DEBUG true [get_nets {CH19[13]}]
set_property MARK_DEBUG true [get_nets {CH19[14]}]
set_property MARK_DEBUG true [get_nets {CH19[15]}]
set_property MARK_DEBUG true [get_nets {CH19[1]}]
set_property MARK_DEBUG true [get_nets {CH19[2]}]
set_property MARK_DEBUG true [get_nets {CH19[3]}]
set_property MARK_DEBUG true [get_nets {CH19[4]}]
set_property MARK_DEBUG true [get_nets {CH19[5]}]
set_property MARK_DEBUG true [get_nets {CH19[6]}]
set_property MARK_DEBUG true [get_nets {CH19[7]}]
set_property MARK_DEBUG true [get_nets {CH19[8]}]
set_property MARK_DEBUG true [get_nets {CH19[9]}]
set_property MARK_DEBUG true [get_nets {CH1[0]}]
set_property MARK_DEBUG true [get_nets {CH1[10]}]
set_property MARK_DEBUG true [get_nets {CH1[11]}]
set_property MARK_DEBUG true [get_nets {CH1[12]}]
set_property MARK_DEBUG true [get_nets {CH1[13]}]
set_property MARK_DEBUG true [get_nets {CH1[14]}]
set_property MARK_DEBUG true [get_nets {CH1[15]}]
set_property MARK_DEBUG true [get_nets {CH1[1]}]
set_property MARK_DEBUG true [get_nets {CH1[2]}]
set_property MARK_DEBUG true [get_nets {CH1[3]}]
set_property MARK_DEBUG true [get_nets {CH1[4]}]
set_property MARK_DEBUG true [get_nets {CH1[5]}]
set_property MARK_DEBUG true [get_nets {CH1[6]}]
set_property MARK_DEBUG true [get_nets {CH1[7]}]
set_property MARK_DEBUG true [get_nets {CH1[8]}]
set_property MARK_DEBUG true [get_nets {CH1[9]}]
set_property MARK_DEBUG true [get_nets {CH20[0]}]
set_property MARK_DEBUG true [get_nets {CH20[10]}]
set_property MARK_DEBUG true [get_nets {CH20[11]}]
set_property MARK_DEBUG true [get_nets {CH20[12]}]
set_property MARK_DEBUG true [get_nets {CH20[13]}]
set_property MARK_DEBUG true [get_nets {CH20[14]}]
set_property MARK_DEBUG true [get_nets {CH20[15]}]
set_property MARK_DEBUG true [get_nets {CH20[1]}]
set_property MARK_DEBUG true [get_nets {CH20[2]}]
set_property MARK_DEBUG true [get_nets {CH20[3]}]
set_property MARK_DEBUG true [get_nets {CH20[4]}]
set_property MARK_DEBUG true [get_nets {CH20[5]}]
set_property MARK_DEBUG true [get_nets {CH20[6]}]
set_property MARK_DEBUG true [get_nets {CH20[7]}]
set_property MARK_DEBUG true [get_nets {CH20[8]}]
set_property MARK_DEBUG true [get_nets {CH20[9]}]
set_property MARK_DEBUG true [get_nets {CH21[0]}]
set_property MARK_DEBUG true [get_nets {CH21[10]}]
set_property MARK_DEBUG true [get_nets {CH21[11]}]
set_property MARK_DEBUG true [get_nets {CH21[12]}]
set_property MARK_DEBUG true [get_nets {CH21[13]}]
set_property MARK_DEBUG true [get_nets {CH21[14]}]
set_property MARK_DEBUG true [get_nets {CH21[15]}]
set_property MARK_DEBUG true [get_nets {CH21[1]}]
set_property MARK_DEBUG true [get_nets {CH21[2]}]
set_property MARK_DEBUG true [get_nets {CH21[3]}]
set_property MARK_DEBUG true [get_nets {CH21[4]}]
set_property MARK_DEBUG true [get_nets {CH21[5]}]
set_property MARK_DEBUG true [get_nets {CH21[6]}]
set_property MARK_DEBUG true [get_nets {CH21[7]}]
set_property MARK_DEBUG true [get_nets {CH21[8]}]
set_property MARK_DEBUG true [get_nets {CH21[9]}]
set_property MARK_DEBUG true [get_nets {CH22[0]}]
set_property MARK_DEBUG true [get_nets {CH22[10]}]
set_property MARK_DEBUG true [get_nets {CH22[11]}]
set_property MARK_DEBUG true [get_nets {CH22[12]}]
set_property MARK_DEBUG true [get_nets {CH22[13]}]
set_property MARK_DEBUG true [get_nets {CH22[14]}]
set_property MARK_DEBUG true [get_nets {CH22[15]}]
set_property MARK_DEBUG true [get_nets {CH22[1]}]
set_property MARK_DEBUG true [get_nets {CH22[2]}]
set_property MARK_DEBUG true [get_nets {CH22[3]}]
set_property MARK_DEBUG true [get_nets {CH22[4]}]
set_property MARK_DEBUG true [get_nets {CH22[5]}]
set_property MARK_DEBUG true [get_nets {CH22[6]}]
set_property MARK_DEBUG true [get_nets {CH22[7]}]
set_property MARK_DEBUG true [get_nets {CH22[8]}]
set_property MARK_DEBUG true [get_nets {CH22[9]}]
set_property MARK_DEBUG true [get_nets {CH23[0]}]
set_property MARK_DEBUG true [get_nets {CH23[10]}]
set_property MARK_DEBUG true [get_nets {CH23[11]}]
set_property MARK_DEBUG true [get_nets {CH23[12]}]
set_property MARK_DEBUG true [get_nets {CH23[13]}]
set_property MARK_DEBUG true [get_nets {CH23[14]}]
set_property MARK_DEBUG true [get_nets {CH23[15]}]
set_property MARK_DEBUG true [get_nets {CH23[1]}]
set_property MARK_DEBUG true [get_nets {CH23[2]}]
set_property MARK_DEBUG true [get_nets {CH23[3]}]
set_property MARK_DEBUG true [get_nets {CH23[4]}]
set_property MARK_DEBUG true [get_nets {CH23[5]}]
set_property MARK_DEBUG true [get_nets {CH23[6]}]
set_property MARK_DEBUG true [get_nets {CH23[7]}]
set_property MARK_DEBUG true [get_nets {CH23[8]}]
set_property MARK_DEBUG true [get_nets {CH23[9]}]
set_property MARK_DEBUG true [get_nets {CH24[0]}]
set_property MARK_DEBUG true [get_nets {CH24[10]}]
set_property MARK_DEBUG true [get_nets {CH24[11]}]
set_property MARK_DEBUG true [get_nets {CH24[12]}]
set_property MARK_DEBUG true [get_nets {CH24[13]}]
set_property MARK_DEBUG true [get_nets {CH24[14]}]
set_property MARK_DEBUG true [get_nets {CH24[15]}]
set_property MARK_DEBUG true [get_nets {CH24[1]}]
set_property MARK_DEBUG true [get_nets {CH24[2]}]
set_property MARK_DEBUG true [get_nets {CH24[3]}]
set_property MARK_DEBUG true [get_nets {CH24[4]}]
set_property MARK_DEBUG true [get_nets {CH24[5]}]
set_property MARK_DEBUG true [get_nets {CH24[6]}]
set_property MARK_DEBUG true [get_nets {CH24[7]}]
set_property MARK_DEBUG true [get_nets {CH24[8]}]
set_property MARK_DEBUG true [get_nets {CH24[9]}]
set_property MARK_DEBUG true [get_nets {CH25[0]}]
set_property MARK_DEBUG true [get_nets {CH25[10]}]
set_property MARK_DEBUG true [get_nets {CH25[11]}]
set_property MARK_DEBUG true [get_nets {CH25[12]}]
set_property MARK_DEBUG true [get_nets {CH25[13]}]
set_property MARK_DEBUG true [get_nets {CH25[14]}]
set_property MARK_DEBUG true [get_nets {CH25[15]}]
set_property MARK_DEBUG true [get_nets {CH25[1]}]
set_property MARK_DEBUG true [get_nets {CH25[2]}]
set_property MARK_DEBUG true [get_nets {CH25[3]}]
set_property MARK_DEBUG true [get_nets {CH25[4]}]
set_property MARK_DEBUG true [get_nets {CH25[5]}]
set_property MARK_DEBUG true [get_nets {CH25[6]}]
set_property MARK_DEBUG true [get_nets {CH25[7]}]
set_property MARK_DEBUG true [get_nets {CH25[8]}]
set_property MARK_DEBUG true [get_nets {CH25[9]}]
set_property MARK_DEBUG true [get_nets {CH26[0]}]
set_property MARK_DEBUG true [get_nets {CH26[10]}]
set_property MARK_DEBUG true [get_nets {CH26[11]}]
set_property MARK_DEBUG true [get_nets {CH26[12]}]
set_property MARK_DEBUG true [get_nets {CH26[13]}]
set_property MARK_DEBUG true [get_nets {CH26[14]}]
set_property MARK_DEBUG true [get_nets {CH26[15]}]
set_property MARK_DEBUG true [get_nets {CH26[1]}]
set_property MARK_DEBUG true [get_nets {CH26[2]}]
set_property MARK_DEBUG true [get_nets {CH26[3]}]
set_property MARK_DEBUG true [get_nets {CH26[4]}]
set_property MARK_DEBUG true [get_nets {CH26[5]}]
set_property MARK_DEBUG true [get_nets {CH26[6]}]
set_property MARK_DEBUG true [get_nets {CH26[7]}]
set_property MARK_DEBUG true [get_nets {CH26[8]}]
set_property MARK_DEBUG true [get_nets {CH26[9]}]
set_property MARK_DEBUG true [get_nets {CH27[0]}]
set_property MARK_DEBUG true [get_nets {CH27[10]}]
set_property MARK_DEBUG true [get_nets {CH27[11]}]
set_property MARK_DEBUG true [get_nets {CH27[12]}]
set_property MARK_DEBUG true [get_nets {CH27[13]}]
set_property MARK_DEBUG true [get_nets {CH27[14]}]
set_property MARK_DEBUG true [get_nets {CH27[15]}]
set_property MARK_DEBUG true [get_nets {CH27[1]}]
set_property MARK_DEBUG true [get_nets {CH27[2]}]
set_property MARK_DEBUG true [get_nets {CH27[3]}]
set_property MARK_DEBUG true [get_nets {CH27[4]}]
set_property MARK_DEBUG true [get_nets {CH27[5]}]
set_property MARK_DEBUG true [get_nets {CH27[6]}]
set_property MARK_DEBUG true [get_nets {CH27[7]}]
set_property MARK_DEBUG true [get_nets {CH27[8]}]
set_property MARK_DEBUG true [get_nets {CH27[9]}]
set_property MARK_DEBUG true [get_nets {CH28[0]}]
set_property MARK_DEBUG true [get_nets {CH28[10]}]
set_property MARK_DEBUG true [get_nets {CH28[11]}]
set_property MARK_DEBUG true [get_nets {CH28[12]}]
set_property MARK_DEBUG true [get_nets {CH28[13]}]
set_property MARK_DEBUG true [get_nets {CH28[14]}]
set_property MARK_DEBUG true [get_nets {CH28[15]}]
set_property MARK_DEBUG true [get_nets {CH28[1]}]
set_property MARK_DEBUG true [get_nets {CH28[2]}]
set_property MARK_DEBUG true [get_nets {CH28[3]}]
set_property MARK_DEBUG true [get_nets {CH28[4]}]
set_property MARK_DEBUG true [get_nets {CH28[5]}]
set_property MARK_DEBUG true [get_nets {CH28[6]}]
set_property MARK_DEBUG true [get_nets {CH28[7]}]
set_property MARK_DEBUG true [get_nets {CH28[8]}]
set_property MARK_DEBUG true [get_nets {CH28[9]}]
set_property MARK_DEBUG true [get_nets {CH29[0]}]
set_property MARK_DEBUG true [get_nets {CH29[10]}]
set_property MARK_DEBUG true [get_nets {CH29[11]}]
set_property MARK_DEBUG true [get_nets {CH29[12]}]
set_property MARK_DEBUG true [get_nets {CH29[13]}]
set_property MARK_DEBUG true [get_nets {CH29[14]}]
set_property MARK_DEBUG true [get_nets {CH29[15]}]
set_property MARK_DEBUG true [get_nets {CH29[1]}]
set_property MARK_DEBUG true [get_nets {CH29[2]}]
set_property MARK_DEBUG true [get_nets {CH29[3]}]
set_property MARK_DEBUG true [get_nets {CH29[4]}]
set_property MARK_DEBUG true [get_nets {CH29[5]}]
set_property MARK_DEBUG true [get_nets {CH29[6]}]
set_property MARK_DEBUG true [get_nets {CH29[7]}]
set_property MARK_DEBUG true [get_nets {CH29[8]}]
set_property MARK_DEBUG true [get_nets {CH29[9]}]
set_property MARK_DEBUG true [get_nets {CH2[0]}]
set_property MARK_DEBUG true [get_nets {CH2[10]}]
set_property MARK_DEBUG true [get_nets {CH2[11]}]
set_property MARK_DEBUG true [get_nets {CH2[12]}]
set_property MARK_DEBUG true [get_nets {CH2[13]}]
set_property MARK_DEBUG true [get_nets {CH2[14]}]
set_property MARK_DEBUG true [get_nets {CH2[15]}]
set_property MARK_DEBUG true [get_nets {CH2[1]}]
set_property MARK_DEBUG true [get_nets {CH2[2]}]
set_property MARK_DEBUG true [get_nets {CH2[3]}]
set_property MARK_DEBUG true [get_nets {CH2[4]}]
set_property MARK_DEBUG true [get_nets {CH2[5]}]
set_property MARK_DEBUG true [get_nets {CH2[6]}]
set_property MARK_DEBUG true [get_nets {CH2[7]}]
set_property MARK_DEBUG true [get_nets {CH2[8]}]
set_property MARK_DEBUG true [get_nets {CH2[9]}]
set_property MARK_DEBUG true [get_nets {CH30[0]}]
set_property MARK_DEBUG true [get_nets {CH30[10]}]
set_property MARK_DEBUG true [get_nets {CH30[11]}]
set_property MARK_DEBUG true [get_nets {CH30[12]}]
set_property MARK_DEBUG true [get_nets {CH30[13]}]
set_property MARK_DEBUG true [get_nets {CH30[14]}]
set_property MARK_DEBUG true [get_nets {CH30[15]}]
set_property MARK_DEBUG true [get_nets {CH30[1]}]
set_property MARK_DEBUG true [get_nets {CH30[2]}]
set_property MARK_DEBUG true [get_nets {CH30[3]}]
set_property MARK_DEBUG true [get_nets {CH30[4]}]
set_property MARK_DEBUG true [get_nets {CH30[5]}]
set_property MARK_DEBUG true [get_nets {CH30[6]}]
set_property MARK_DEBUG true [get_nets {CH30[7]}]
set_property MARK_DEBUG true [get_nets {CH30[8]}]
set_property MARK_DEBUG true [get_nets {CH30[9]}]
set_property MARK_DEBUG true [get_nets {CH31[0]}]
set_property MARK_DEBUG true [get_nets {CH31[10]}]
set_property MARK_DEBUG true [get_nets {CH31[11]}]
set_property MARK_DEBUG true [get_nets {CH31[12]}]
set_property MARK_DEBUG true [get_nets {CH31[13]}]
set_property MARK_DEBUG true [get_nets {CH31[14]}]
set_property MARK_DEBUG true [get_nets {CH31[15]}]
set_property MARK_DEBUG true [get_nets {CH31[1]}]
set_property MARK_DEBUG true [get_nets {CH31[2]}]
set_property MARK_DEBUG true [get_nets {CH31[3]}]
set_property MARK_DEBUG true [get_nets {CH31[4]}]
set_property MARK_DEBUG true [get_nets {CH31[5]}]
set_property MARK_DEBUG true [get_nets {CH31[6]}]
set_property MARK_DEBUG true [get_nets {CH31[7]}]
set_property MARK_DEBUG true [get_nets {CH31[8]}]
set_property MARK_DEBUG true [get_nets {CH31[9]}]
set_property MARK_DEBUG true [get_nets {CH3[0]}]
set_property MARK_DEBUG true [get_nets {CH3[10]}]
set_property MARK_DEBUG true [get_nets {CH3[11]}]
set_property MARK_DEBUG true [get_nets {CH3[12]}]
set_property MARK_DEBUG true [get_nets {CH3[13]}]
set_property MARK_DEBUG true [get_nets {CH3[14]}]
set_property MARK_DEBUG true [get_nets {CH3[15]}]
set_property MARK_DEBUG true [get_nets {CH3[1]}]
set_property MARK_DEBUG true [get_nets {CH3[2]}]
set_property MARK_DEBUG true [get_nets {CH3[3]}]
set_property MARK_DEBUG true [get_nets {CH3[4]}]
set_property MARK_DEBUG true [get_nets {CH3[5]}]
set_property MARK_DEBUG true [get_nets {CH3[6]}]
set_property MARK_DEBUG true [get_nets {CH3[7]}]
set_property MARK_DEBUG true [get_nets {CH3[8]}]
set_property MARK_DEBUG true [get_nets {CH3[9]}]
set_property MARK_DEBUG true [get_nets {CH4[0]}]
set_property MARK_DEBUG true [get_nets {CH4[10]}]
set_property MARK_DEBUG true [get_nets {CH4[11]}]
set_property MARK_DEBUG true [get_nets {CH4[12]}]
set_property MARK_DEBUG true [get_nets {CH4[13]}]
set_property MARK_DEBUG true [get_nets {CH4[14]}]
set_property MARK_DEBUG true [get_nets {CH4[15]}]
set_property MARK_DEBUG true [get_nets {CH4[1]}]
set_property MARK_DEBUG true [get_nets {CH4[2]}]
set_property MARK_DEBUG true [get_nets {CH4[3]}]
set_property MARK_DEBUG true [get_nets {CH4[4]}]
set_property MARK_DEBUG true [get_nets {CH4[5]}]
set_property MARK_DEBUG true [get_nets {CH4[6]}]
set_property MARK_DEBUG true [get_nets {CH4[7]}]
set_property MARK_DEBUG true [get_nets {CH4[8]}]
set_property MARK_DEBUG true [get_nets {CH4[9]}]
set_property MARK_DEBUG true [get_nets {CH5[0]}]
set_property MARK_DEBUG true [get_nets {CH5[10]}]
set_property MARK_DEBUG true [get_nets {CH5[11]}]
set_property MARK_DEBUG true [get_nets {CH5[12]}]
set_property MARK_DEBUG true [get_nets {CH5[13]}]
set_property MARK_DEBUG true [get_nets {CH5[14]}]
set_property MARK_DEBUG true [get_nets {CH5[15]}]
set_property MARK_DEBUG true [get_nets {CH5[1]}]
set_property MARK_DEBUG true [get_nets {CH5[2]}]
set_property MARK_DEBUG true [get_nets {CH5[3]}]
set_property MARK_DEBUG true [get_nets {CH5[4]}]
set_property MARK_DEBUG true [get_nets {CH5[5]}]
set_property MARK_DEBUG true [get_nets {CH5[6]}]
set_property MARK_DEBUG true [get_nets {CH5[7]}]
set_property MARK_DEBUG true [get_nets {CH5[8]}]
set_property MARK_DEBUG true [get_nets {CH5[9]}]
set_property MARK_DEBUG true [get_nets {CH6[0]}]
set_property MARK_DEBUG true [get_nets {CH6[10]}]
set_property MARK_DEBUG true [get_nets {CH6[11]}]
set_property MARK_DEBUG true [get_nets {CH6[12]}]
set_property MARK_DEBUG true [get_nets {CH6[13]}]
set_property MARK_DEBUG true [get_nets {CH6[14]}]
set_property MARK_DEBUG true [get_nets {CH6[15]}]
set_property MARK_DEBUG true [get_nets {CH6[1]}]
set_property MARK_DEBUG true [get_nets {CH6[2]}]
set_property MARK_DEBUG true [get_nets {CH6[3]}]
set_property MARK_DEBUG true [get_nets {CH6[4]}]
set_property MARK_DEBUG true [get_nets {CH6[5]}]
set_property MARK_DEBUG true [get_nets {CH6[6]}]
set_property MARK_DEBUG true [get_nets {CH6[7]}]
set_property MARK_DEBUG true [get_nets {CH6[8]}]
set_property MARK_DEBUG true [get_nets {CH6[9]}]
set_property MARK_DEBUG true [get_nets {CH7[0]}]
set_property MARK_DEBUG true [get_nets {CH7[10]}]
set_property MARK_DEBUG true [get_nets {CH7[11]}]
set_property MARK_DEBUG true [get_nets {CH7[12]}]
set_property MARK_DEBUG true [get_nets {CH7[13]}]
set_property MARK_DEBUG true [get_nets {CH7[14]}]
set_property MARK_DEBUG true [get_nets {CH7[15]}]
set_property MARK_DEBUG true [get_nets {CH7[1]}]
set_property MARK_DEBUG true [get_nets {CH7[2]}]
set_property MARK_DEBUG true [get_nets {CH7[3]}]
set_property MARK_DEBUG true [get_nets {CH7[4]}]
set_property MARK_DEBUG true [get_nets {CH7[5]}]
set_property MARK_DEBUG true [get_nets {CH7[6]}]
set_property MARK_DEBUG true [get_nets {CH7[7]}]
set_property MARK_DEBUG true [get_nets {CH7[8]}]
set_property MARK_DEBUG true [get_nets {CH7[9]}]
set_property MARK_DEBUG true [get_nets {CH8[0]}]
set_property MARK_DEBUG true [get_nets {CH8[10]}]
set_property MARK_DEBUG true [get_nets {CH8[11]}]
set_property MARK_DEBUG true [get_nets {CH8[12]}]
set_property MARK_DEBUG true [get_nets {CH8[13]}]
set_property MARK_DEBUG true [get_nets {CH8[14]}]
set_property MARK_DEBUG true [get_nets {CH8[15]}]
set_property MARK_DEBUG true [get_nets {CH8[1]}]
set_property MARK_DEBUG true [get_nets {CH8[2]}]
set_property MARK_DEBUG true [get_nets {CH8[3]}]
set_property MARK_DEBUG true [get_nets {CH8[4]}]
set_property MARK_DEBUG true [get_nets {CH8[5]}]
set_property MARK_DEBUG true [get_nets {CH8[6]}]
set_property MARK_DEBUG true [get_nets {CH8[7]}]
set_property MARK_DEBUG true [get_nets {CH8[8]}]
set_property MARK_DEBUG true [get_nets {CH8[9]}]
set_property MARK_DEBUG true [get_nets {CH9[0]}]
set_property MARK_DEBUG true [get_nets {CH9[10]}]
set_property MARK_DEBUG true [get_nets {CH9[11]}]
set_property MARK_DEBUG true [get_nets {CH9[12]}]
set_property MARK_DEBUG true [get_nets {CH9[13]}]
set_property MARK_DEBUG true [get_nets {CH9[14]}]
set_property MARK_DEBUG true [get_nets {CH9[15]}]
set_property MARK_DEBUG true [get_nets {CH9[1]}]
set_property MARK_DEBUG true [get_nets {CH9[2]}]
set_property MARK_DEBUG true [get_nets {CH9[3]}]
set_property MARK_DEBUG true [get_nets {CH9[4]}]
set_property MARK_DEBUG true [get_nets {CH9[5]}]
set_property MARK_DEBUG true [get_nets {CH9[6]}]
set_property MARK_DEBUG true [get_nets {CH9[7]}]
set_property MARK_DEBUG true [get_nets {CH9[8]}]
set_property MARK_DEBUG true [get_nets {CH9[9]}]

#set_property PACKAGE_PIN V4 [get_ports {GT_RX_2_rxp[0]}]
#set_property PACKAGE_PIN T4 [get_ports {GT_RX_3_rxp[0]}]

set_property PACKAGE_PIN AB4 [get_ports {GT_RX_0_rxp[0]}]
set_property PACKAGE_PIN Y4 [get_ports {GT_RX_1_rxp[0]}]

set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[25]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[13]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[29]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[11]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[23]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[0]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[10]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[2]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[15]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[31]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[1]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[12]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[14]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[5]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[16]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[7]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[17]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[21]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[18]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[19]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[20]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[22]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[4]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[24]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[26]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[27]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[28]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[30]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[3]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[6]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[8]}]
set_property MARK_DEBUG true [get_nets {AW_MEMORY_MANAGER/BUS_ADDR[9]}]

set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[9]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[19]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[6]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[17]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[2]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[14]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[10]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[28]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[24]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[2]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[31]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[23]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[27]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[2]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[14]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[12]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[10]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[17]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[21]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[12]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[0]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[10]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[3]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[3]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[6]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[7]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[8]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[11]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[27]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[11]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[25]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[4]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[19]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[7]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[29]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[24]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[16]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[22]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[16]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[27]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[23]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[1]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[11]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[13]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[1]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[4]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[15]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[31]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[6]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[9]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[21]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[31]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[15]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[19]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[18]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[20]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[16]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[13]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[5]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[4]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[5]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[12]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[18]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[21]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[8]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[3]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[30]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[20]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[17]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[0]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[22]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[26]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[13]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[23]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[5]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[9]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[29]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[1]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[14]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[22]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[18]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[0]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[20]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[24]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[26]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[8]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[28]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[7]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[25]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[30]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[30]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[26]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_writedata[29]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[25]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_readdata[15]}]
set_property MARK_DEBUG true [get_nets {M_AVALON_0_address[28]}]
set_property MARK_DEBUG true [get_nets M_AVALON_0_read]
set_property MARK_DEBUG true [get_nets M_AVALON_0_write]

#create_debug_core u_ila_0 ila
#set_property ALL_PROBE_SAME_MU true [get_debug_cores u_ila_0]
#set_property ALL_PROBE_SAME_MU_CNT 1 [get_debug_cores u_ila_0]
#set_property C_ADV_TRIGGER false [get_debug_cores u_ila_0]
#set_property C_DATA_DEPTH 1024 [get_debug_cores u_ila_0]
#set_property C_EN_STRG_QUAL false [get_debug_cores u_ila_0]
#set_property C_INPUT_PIPE_STAGES 0 [get_debug_cores u_ila_0]
#set_property C_TRIGIN_EN false [get_debug_cores u_ila_0]
#set_property C_TRIGOUT_EN false [get_debug_cores u_ila_0]
#set_property port_width 1 [get_debug_ports u_ila_0/clk]
#connect_debug_port u_ila_0/clk [get_nets [list zynq_subsystem/ZynqDesign_i/processing_system7_0/inst/FCLK_CLK0]]
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe0]
#set_property port_width 32 [get_debug_ports u_ila_0/probe0]
#connect_debug_port u_ila_0/probe0 [get_nets [list {AW_MEMORY_MANAGER/BUS_ADDR[0]} {AW_MEMORY_MANAGER/BUS_ADDR[1]} {AW_MEMORY_MANAGER/BUS_ADDR[2]} {AW_MEMORY_MANAGER/BUS_ADDR[3]} {AW_MEMORY_MANAGER/BUS_ADDR[4]} {AW_MEMORY_MANAGER/BUS_ADDR[5]} {AW_MEMORY_MANAGER/BUS_ADDR[6]} {AW_MEMORY_MANAGER/BUS_ADDR[7]} {AW_MEMORY_MANAGER/BUS_ADDR[8]} {AW_MEMORY_MANAGER/BUS_ADDR[9]} {AW_MEMORY_MANAGER/BUS_ADDR[10]} {AW_MEMORY_MANAGER/BUS_ADDR[11]} {AW_MEMORY_MANAGER/BUS_ADDR[12]} {AW_MEMORY_MANAGER/BUS_ADDR[13]} {AW_MEMORY_MANAGER/BUS_ADDR[14]} {AW_MEMORY_MANAGER/BUS_ADDR[15]} {AW_MEMORY_MANAGER/BUS_ADDR[16]} {AW_MEMORY_MANAGER/BUS_ADDR[17]} {AW_MEMORY_MANAGER/BUS_ADDR[18]} {AW_MEMORY_MANAGER/BUS_ADDR[19]} {AW_MEMORY_MANAGER/BUS_ADDR[20]} {AW_MEMORY_MANAGER/BUS_ADDR[21]} {AW_MEMORY_MANAGER/BUS_ADDR[22]} {AW_MEMORY_MANAGER/BUS_ADDR[23]} {AW_MEMORY_MANAGER/BUS_ADDR[24]} {AW_MEMORY_MANAGER/BUS_ADDR[25]} {AW_MEMORY_MANAGER/BUS_ADDR[26]} {AW_MEMORY_MANAGER/BUS_ADDR[27]} {AW_MEMORY_MANAGER/BUS_ADDR[28]} {AW_MEMORY_MANAGER/BUS_ADDR[29]} {AW_MEMORY_MANAGER/BUS_ADDR[30]} {AW_MEMORY_MANAGER/BUS_ADDR[31]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe1]
#set_property port_width 16 [get_debug_ports u_ila_0/probe1]
#connect_debug_port u_ila_0/probe1 [get_nets [list {CH14[0]} {CH14[1]} {CH14[2]} {CH14[3]} {CH14[4]} {CH14[5]} {CH14[6]} {CH14[7]} {CH14[8]} {CH14[9]} {CH14[10]} {CH14[11]} {CH14[12]} {CH14[13]} {CH14[14]} {CH14[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe2]
#set_property port_width 16 [get_debug_ports u_ila_0/probe2]
#connect_debug_port u_ila_0/probe2 [get_nets [list {CH15[0]} {CH15[1]} {CH15[2]} {CH15[3]} {CH15[4]} {CH15[5]} {CH15[6]} {CH15[7]} {CH15[8]} {CH15[9]} {CH15[10]} {CH15[11]} {CH15[12]} {CH15[13]} {CH15[14]} {CH15[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe3]
#set_property port_width 16 [get_debug_ports u_ila_0/probe3]
#connect_debug_port u_ila_0/probe3 [get_nets [list {CH17[0]} {CH17[1]} {CH17[2]} {CH17[3]} {CH17[4]} {CH17[5]} {CH17[6]} {CH17[7]} {CH17[8]} {CH17[9]} {CH17[10]} {CH17[11]} {CH17[12]} {CH17[13]} {CH17[14]} {CH17[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe4]
#set_property port_width 16 [get_debug_ports u_ila_0/probe4]
#connect_debug_port u_ila_0/probe4 [get_nets [list {CH8[0]} {CH8[1]} {CH8[2]} {CH8[3]} {CH8[4]} {CH8[5]} {CH8[6]} {CH8[7]} {CH8[8]} {CH8[9]} {CH8[10]} {CH8[11]} {CH8[12]} {CH8[13]} {CH8[14]} {CH8[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe5]
#set_property port_width 16 [get_debug_ports u_ila_0/probe5]
#connect_debug_port u_ila_0/probe5 [get_nets [list {CH22[0]} {CH22[1]} {CH22[2]} {CH22[3]} {CH22[4]} {CH22[5]} {CH22[6]} {CH22[7]} {CH22[8]} {CH22[9]} {CH22[10]} {CH22[11]} {CH22[12]} {CH22[13]} {CH22[14]} {CH22[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe6]
#set_property port_width 16 [get_debug_ports u_ila_0/probe6]
#connect_debug_port u_ila_0/probe6 [get_nets [list {CH26[0]} {CH26[1]} {CH26[2]} {CH26[3]} {CH26[4]} {CH26[5]} {CH26[6]} {CH26[7]} {CH26[8]} {CH26[9]} {CH26[10]} {CH26[11]} {CH26[12]} {CH26[13]} {CH26[14]} {CH26[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe7]
#set_property port_width 16 [get_debug_ports u_ila_0/probe7]
#connect_debug_port u_ila_0/probe7 [get_nets [list {CH31[0]} {CH31[1]} {CH31[2]} {CH31[3]} {CH31[4]} {CH31[5]} {CH31[6]} {CH31[7]} {CH31[8]} {CH31[9]} {CH31[10]} {CH31[11]} {CH31[12]} {CH31[13]} {CH31[14]} {CH31[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe8]
#set_property port_width 16 [get_debug_ports u_ila_0/probe8]
#connect_debug_port u_ila_0/probe8 [get_nets [list {CH29[0]} {CH29[1]} {CH29[2]} {CH29[3]} {CH29[4]} {CH29[5]} {CH29[6]} {CH29[7]} {CH29[8]} {CH29[9]} {CH29[10]} {CH29[11]} {CH29[12]} {CH29[13]} {CH29[14]} {CH29[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe9]
#set_property port_width 32 [get_debug_ports u_ila_0/probe9]
#connect_debug_port u_ila_0/probe9 [get_nets [list {M_AVALON_0_readdata[0]} {M_AVALON_0_readdata[1]} {M_AVALON_0_readdata[2]} {M_AVALON_0_readdata[3]} {M_AVALON_0_readdata[4]} {M_AVALON_0_readdata[5]} {M_AVALON_0_readdata[6]} {M_AVALON_0_readdata[7]} {M_AVALON_0_readdata[8]} {M_AVALON_0_readdata[9]} {M_AVALON_0_readdata[10]} {M_AVALON_0_readdata[11]} {M_AVALON_0_readdata[12]} {M_AVALON_0_readdata[13]} {M_AVALON_0_readdata[14]} {M_AVALON_0_readdata[15]} {M_AVALON_0_readdata[16]} {M_AVALON_0_readdata[17]} {M_AVALON_0_readdata[18]} {M_AVALON_0_readdata[19]} {M_AVALON_0_readdata[20]} {M_AVALON_0_readdata[21]} {M_AVALON_0_readdata[22]} {M_AVALON_0_readdata[23]} {M_AVALON_0_readdata[24]} {M_AVALON_0_readdata[25]} {M_AVALON_0_readdata[26]} {M_AVALON_0_readdata[27]} {M_AVALON_0_readdata[28]} {M_AVALON_0_readdata[29]} {M_AVALON_0_readdata[30]} {M_AVALON_0_readdata[31]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe10]
#set_property port_width 32 [get_debug_ports u_ila_0/probe10]
#connect_debug_port u_ila_0/probe10 [get_nets [list {M_AVALON_0_writedata[0]} {M_AVALON_0_writedata[1]} {M_AVALON_0_writedata[2]} {M_AVALON_0_writedata[3]} {M_AVALON_0_writedata[4]} {M_AVALON_0_writedata[5]} {M_AVALON_0_writedata[6]} {M_AVALON_0_writedata[7]} {M_AVALON_0_writedata[8]} {M_AVALON_0_writedata[9]} {M_AVALON_0_writedata[10]} {M_AVALON_0_writedata[11]} {M_AVALON_0_writedata[12]} {M_AVALON_0_writedata[13]} {M_AVALON_0_writedata[14]} {M_AVALON_0_writedata[15]} {M_AVALON_0_writedata[16]} {M_AVALON_0_writedata[17]} {M_AVALON_0_writedata[18]} {M_AVALON_0_writedata[19]} {M_AVALON_0_writedata[20]} {M_AVALON_0_writedata[21]} {M_AVALON_0_writedata[22]} {M_AVALON_0_writedata[23]} {M_AVALON_0_writedata[24]} {M_AVALON_0_writedata[25]} {M_AVALON_0_writedata[26]} {M_AVALON_0_writedata[27]} {M_AVALON_0_writedata[28]} {M_AVALON_0_writedata[29]} {M_AVALON_0_writedata[30]} {M_AVALON_0_writedata[31]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe11]
#set_property port_width 16 [get_debug_ports u_ila_0/probe11]
#connect_debug_port u_ila_0/probe11 [get_nets [list {CH10[0]} {CH10[1]} {CH10[2]} {CH10[3]} {CH10[4]} {CH10[5]} {CH10[6]} {CH10[7]} {CH10[8]} {CH10[9]} {CH10[10]} {CH10[11]} {CH10[12]} {CH10[13]} {CH10[14]} {CH10[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe12]
#set_property port_width 16 [get_debug_ports u_ila_0/probe12]
#connect_debug_port u_ila_0/probe12 [get_nets [list {CH6[0]} {CH6[1]} {CH6[2]} {CH6[3]} {CH6[4]} {CH6[5]} {CH6[6]} {CH6[7]} {CH6[8]} {CH6[9]} {CH6[10]} {CH6[11]} {CH6[12]} {CH6[13]} {CH6[14]} {CH6[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe13]
#set_property port_width 16 [get_debug_ports u_ila_0/probe13]
#connect_debug_port u_ila_0/probe13 [get_nets [list {CH16[0]} {CH16[1]} {CH16[2]} {CH16[3]} {CH16[4]} {CH16[5]} {CH16[6]} {CH16[7]} {CH16[8]} {CH16[9]} {CH16[10]} {CH16[11]} {CH16[12]} {CH16[13]} {CH16[14]} {CH16[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe14]
#set_property port_width 16 [get_debug_ports u_ila_0/probe14]
#connect_debug_port u_ila_0/probe14 [get_nets [list {CH18[0]} {CH18[1]} {CH18[2]} {CH18[3]} {CH18[4]} {CH18[5]} {CH18[6]} {CH18[7]} {CH18[8]} {CH18[9]} {CH18[10]} {CH18[11]} {CH18[12]} {CH18[13]} {CH18[14]} {CH18[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe15]
#set_property port_width 16 [get_debug_ports u_ila_0/probe15]
#connect_debug_port u_ila_0/probe15 [get_nets [list {CH1[0]} {CH1[1]} {CH1[2]} {CH1[3]} {CH1[4]} {CH1[5]} {CH1[6]} {CH1[7]} {CH1[8]} {CH1[9]} {CH1[10]} {CH1[11]} {CH1[12]} {CH1[13]} {CH1[14]} {CH1[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe16]
#set_property port_width 16 [get_debug_ports u_ila_0/probe16]
#connect_debug_port u_ila_0/probe16 [get_nets [list {CH24[0]} {CH24[1]} {CH24[2]} {CH24[3]} {CH24[4]} {CH24[5]} {CH24[6]} {CH24[7]} {CH24[8]} {CH24[9]} {CH24[10]} {CH24[11]} {CH24[12]} {CH24[13]} {CH24[14]} {CH24[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe17]
#set_property port_width 16 [get_debug_ports u_ila_0/probe17]
#connect_debug_port u_ila_0/probe17 [get_nets [list {CH11[0]} {CH11[1]} {CH11[2]} {CH11[3]} {CH11[4]} {CH11[5]} {CH11[6]} {CH11[7]} {CH11[8]} {CH11[9]} {CH11[10]} {CH11[11]} {CH11[12]} {CH11[13]} {CH11[14]} {CH11[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe18]
#set_property port_width 16 [get_debug_ports u_ila_0/probe18]
#connect_debug_port u_ila_0/probe18 [get_nets [list {CH5[0]} {CH5[1]} {CH5[2]} {CH5[3]} {CH5[4]} {CH5[5]} {CH5[6]} {CH5[7]} {CH5[8]} {CH5[9]} {CH5[10]} {CH5[11]} {CH5[12]} {CH5[13]} {CH5[14]} {CH5[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe19]
#set_property port_width 16 [get_debug_ports u_ila_0/probe19]
#connect_debug_port u_ila_0/probe19 [get_nets [list {CH9[0]} {CH9[1]} {CH9[2]} {CH9[3]} {CH9[4]} {CH9[5]} {CH9[6]} {CH9[7]} {CH9[8]} {CH9[9]} {CH9[10]} {CH9[11]} {CH9[12]} {CH9[13]} {CH9[14]} {CH9[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe20]
#set_property port_width 32 [get_debug_ports u_ila_0/probe20]
#connect_debug_port u_ila_0/probe20 [get_nets [list {M_AVALON_0_address[0]} {M_AVALON_0_address[1]} {M_AVALON_0_address[2]} {M_AVALON_0_address[3]} {M_AVALON_0_address[4]} {M_AVALON_0_address[5]} {M_AVALON_0_address[6]} {M_AVALON_0_address[7]} {M_AVALON_0_address[8]} {M_AVALON_0_address[9]} {M_AVALON_0_address[10]} {M_AVALON_0_address[11]} {M_AVALON_0_address[12]} {M_AVALON_0_address[13]} {M_AVALON_0_address[14]} {M_AVALON_0_address[15]} {M_AVALON_0_address[16]} {M_AVALON_0_address[17]} {M_AVALON_0_address[18]} {M_AVALON_0_address[19]} {M_AVALON_0_address[20]} {M_AVALON_0_address[21]} {M_AVALON_0_address[22]} {M_AVALON_0_address[23]} {M_AVALON_0_address[24]} {M_AVALON_0_address[25]} {M_AVALON_0_address[26]} {M_AVALON_0_address[27]} {M_AVALON_0_address[28]} {M_AVALON_0_address[29]} {M_AVALON_0_address[30]} {M_AVALON_0_address[31]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe21]
#set_property port_width 16 [get_debug_ports u_ila_0/probe21]
#connect_debug_port u_ila_0/probe21 [get_nets [list {CH19[0]} {CH19[1]} {CH19[2]} {CH19[3]} {CH19[4]} {CH19[5]} {CH19[6]} {CH19[7]} {CH19[8]} {CH19[9]} {CH19[10]} {CH19[11]} {CH19[12]} {CH19[13]} {CH19[14]} {CH19[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe22]
#set_property port_width 16 [get_debug_ports u_ila_0/probe22]
#connect_debug_port u_ila_0/probe22 [get_nets [list {CH4[0]} {CH4[1]} {CH4[2]} {CH4[3]} {CH4[4]} {CH4[5]} {CH4[6]} {CH4[7]} {CH4[8]} {CH4[9]} {CH4[10]} {CH4[11]} {CH4[12]} {CH4[13]} {CH4[14]} {CH4[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe23]
#set_property port_width 16 [get_debug_ports u_ila_0/probe23]
#connect_debug_port u_ila_0/probe23 [get_nets [list {CH25[0]} {CH25[1]} {CH25[2]} {CH25[3]} {CH25[4]} {CH25[5]} {CH25[6]} {CH25[7]} {CH25[8]} {CH25[9]} {CH25[10]} {CH25[11]} {CH25[12]} {CH25[13]} {CH25[14]} {CH25[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe24]
#set_property port_width 16 [get_debug_ports u_ila_0/probe24]
#connect_debug_port u_ila_0/probe24 [get_nets [list {CH2[0]} {CH2[1]} {CH2[2]} {CH2[3]} {CH2[4]} {CH2[5]} {CH2[6]} {CH2[7]} {CH2[8]} {CH2[9]} {CH2[10]} {CH2[11]} {CH2[12]} {CH2[13]} {CH2[14]} {CH2[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe25]
#set_property port_width 16 [get_debug_ports u_ila_0/probe25]
#connect_debug_port u_ila_0/probe25 [get_nets [list {CH23[0]} {CH23[1]} {CH23[2]} {CH23[3]} {CH23[4]} {CH23[5]} {CH23[6]} {CH23[7]} {CH23[8]} {CH23[9]} {CH23[10]} {CH23[11]} {CH23[12]} {CH23[13]} {CH23[14]} {CH23[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe26]
#set_property port_width 16 [get_debug_ports u_ila_0/probe26]
#connect_debug_port u_ila_0/probe26 [get_nets [list {CH28[0]} {CH28[1]} {CH28[2]} {CH28[3]} {CH28[4]} {CH28[5]} {CH28[6]} {CH28[7]} {CH28[8]} {CH28[9]} {CH28[10]} {CH28[11]} {CH28[12]} {CH28[13]} {CH28[14]} {CH28[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe27]
#set_property port_width 16 [get_debug_ports u_ila_0/probe27]
#connect_debug_port u_ila_0/probe27 [get_nets [list {CH7[0]} {CH7[1]} {CH7[2]} {CH7[3]} {CH7[4]} {CH7[5]} {CH7[6]} {CH7[7]} {CH7[8]} {CH7[9]} {CH7[10]} {CH7[11]} {CH7[12]} {CH7[13]} {CH7[14]} {CH7[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe28]
#set_property port_width 16 [get_debug_ports u_ila_0/probe28]
#connect_debug_port u_ila_0/probe28 [get_nets [list {CH13[0]} {CH13[1]} {CH13[2]} {CH13[3]} {CH13[4]} {CH13[5]} {CH13[6]} {CH13[7]} {CH13[8]} {CH13[9]} {CH13[10]} {CH13[11]} {CH13[12]} {CH13[13]} {CH13[14]} {CH13[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe29]
#set_property port_width 16 [get_debug_ports u_ila_0/probe29]
#connect_debug_port u_ila_0/probe29 [get_nets [list {CH20[0]} {CH20[1]} {CH20[2]} {CH20[3]} {CH20[4]} {CH20[5]} {CH20[6]} {CH20[7]} {CH20[8]} {CH20[9]} {CH20[10]} {CH20[11]} {CH20[12]} {CH20[13]} {CH20[14]} {CH20[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe30]
#set_property port_width 16 [get_debug_ports u_ila_0/probe30]
#connect_debug_port u_ila_0/probe30 [get_nets [list {CH30[0]} {CH30[1]} {CH30[2]} {CH30[3]} {CH30[4]} {CH30[5]} {CH30[6]} {CH30[7]} {CH30[8]} {CH30[9]} {CH30[10]} {CH30[11]} {CH30[12]} {CH30[13]} {CH30[14]} {CH30[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe31]
#set_property port_width 16 [get_debug_ports u_ila_0/probe31]
#connect_debug_port u_ila_0/probe31 [get_nets [list {CH27[0]} {CH27[1]} {CH27[2]} {CH27[3]} {CH27[4]} {CH27[5]} {CH27[6]} {CH27[7]} {CH27[8]} {CH27[9]} {CH27[10]} {CH27[11]} {CH27[12]} {CH27[13]} {CH27[14]} {CH27[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe32]
#set_property port_width 16 [get_debug_ports u_ila_0/probe32]
#connect_debug_port u_ila_0/probe32 [get_nets [list {CH0[0]} {CH0[1]} {CH0[2]} {CH0[3]} {CH0[4]} {CH0[5]} {CH0[6]} {CH0[7]} {CH0[8]} {CH0[9]} {CH0[10]} {CH0[11]} {CH0[12]} {CH0[13]} {CH0[14]} {CH0[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe33]
#set_property port_width 16 [get_debug_ports u_ila_0/probe33]
#connect_debug_port u_ila_0/probe33 [get_nets [list {CH3[0]} {CH3[1]} {CH3[2]} {CH3[3]} {CH3[4]} {CH3[5]} {CH3[6]} {CH3[7]} {CH3[8]} {CH3[9]} {CH3[10]} {CH3[11]} {CH3[12]} {CH3[13]} {CH3[14]} {CH3[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe34]
#set_property port_width 16 [get_debug_ports u_ila_0/probe34]
#connect_debug_port u_ila_0/probe34 [get_nets [list {CH12[0]} {CH12[1]} {CH12[2]} {CH12[3]} {CH12[4]} {CH12[5]} {CH12[6]} {CH12[7]} {CH12[8]} {CH12[9]} {CH12[10]} {CH12[11]} {CH12[12]} {CH12[13]} {CH12[14]} {CH12[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe35]
#set_property port_width 16 [get_debug_ports u_ila_0/probe35]
#connect_debug_port u_ila_0/probe35 [get_nets [list {CH21[0]} {CH21[1]} {CH21[2]} {CH21[3]} {CH21[4]} {CH21[5]} {CH21[6]} {CH21[7]} {CH21[8]} {CH21[9]} {CH21[10]} {CH21[11]} {CH21[12]} {CH21[13]} {CH21[14]} {CH21[15]}]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe36]
#set_property port_width 1 [get_debug_ports u_ila_0/probe36]
#connect_debug_port u_ila_0/probe36 [get_nets [list M_AVALON_0_read]]
#create_debug_port u_ila_0 probe
#set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe37]
#set_property port_width 1 [get_debug_ports u_ila_0/probe37]
#connect_debug_port u_ila_0/probe37 [get_nets [list M_AVALON_0_write]]
#set_property C_CLK_INPUT_FREQ_HZ 300000000 [get_debug_cores dbg_hub]
#set_property C_ENABLE_CLK_DIVIDER false [get_debug_cores dbg_hub]
#set_property C_USER_SCAN_CHAIN 1 [get_debug_cores dbg_hub]
#connect_debug_port dbg_hub/clk [get_nets BOARD_CLOCK]

set_property PACKAGE_PIN M6 [get_ports Si_ClkOut_p]
set_property PACKAGE_PIN AC14 [get_ports Si_ClkIn_p]
set_property IOSTANDARD LVDS_25 [get_ports Si_ClkIn_p]
set_property IOSTANDARD LVDS_25 [get_ports Si_ClkIn_n]

set_property IOSTANDARD LVDS [get_ports Si_ClkOut_p]
set_property IOSTANDARD LVDS [get_ports Si_ClkOut_n]

set_property PACKAGE_PIN C17 [get_ports {BOARDPOSITION[0]}]
set_property PACKAGE_PIN C16 [get_ports {BOARDPOSITION[1]}]
set_property IOSTANDARD LVCMOS18 [get_ports {BOARDPOSITION[1]}]
set_property IOSTANDARD LVCMOS18 [get_ports {BOARDPOSITION[0]}]
set_property PACKAGE_PIN C12 [get_ports SLAVE_I2C_SDA_0]
set_property PACKAGE_PIN H16 [get_ports SLAVE_I2C_SCL_0]
set_property IOSTANDARD LVCMOS18 [get_ports SLAVE_I2C_SCL_0]
set_property IOSTANDARD LVCMOS18 [get_ports SLAVE_I2C_SDA_0]


####################################################################################
# Constraints from file : 'ZynqDesign_OPTOLINK_0_0_clocks.xdc'
####################################################################################

##################################################################################
##
## Project:  Aurora 64B/66B
## Company:  Xilinx
##
##
##
## (c) Copyright 2012 - 2013 Xilinx, Inc. All rights reserved.
##
## This file contains confidential and proprietary information
## of Xilinx, Inc. and is protected under U.S. and
## international copyright and other intellectual property
## laws.
##
## DISCLAIMER
## This disclaimer is not a license and does not grant any
## rights to the materials distributed herewith. Except as
## otherwise provided in a valid license issued to you by
## Xilinx, and to the maximum extent permitted by applicable
## law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
## WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
## AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
## BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
## INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
## (2) Xilinx shall not be liable (whether in contract or tort,
## including negligence, or under any other theory of
## liability) for any loss or damage of any kind or nature
## related to, arising under or in connection with these
## materials, including for any direct, or any indirect,
## special, incidental, or consequential loss or damage
## (including loss of data, profits, goodwill, or any type of
## loss or damage suffered as a result of any action brought
## by a third party) even if such damage or loss was
## reasonably foreseeable or Xilinx had been advised of the
## possibility of the same.
##
## CRITICAL APPLICATIONS
## Xilinx products are not designed or intended to be fail-
## safe, or for use in any application requiring fail-safe
## performance, such as life-support or safety devices or
## systems, Class III medical devices, nuclear facilities,
## applications related to the deployment of airbags, or any
## other applications that could lead to death, personal
## injury, or severe property or environmental damage
## (individually and collectively, "Critical
## Applications"). Customer assumes the sole risk and
## liability of any use of Xilinx products in Critical
## Applications, subject only to applicable laws and
## regulations governing limitations on product liability.
##
## THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
## PART OF THIS FILE AT ALL TIMES.

##
#################################################################################

##
##  ZynqDesign_OPTOLINK_0_0
##
##
##  Description: This is the design constraints file for a 1 lane Aurora
##               core.
##               It contains all the clocks generated by the core
##
##
################################################################################

################################################################################
# below commented constraints are kept as is to maintain the backward compatibility structure.
## set_false_path -from [get_clocks -of_objects [get_ports init_clk_out]] -to [get_clocks -of_objects [get_pins inst/clock_module_i/mmcm_adv_inst/CLKOUT0]]
## set_false_path -from [get_clocks -of_objects [get_pins inst/clock_module_i/mmcm_adv_inst/CLKOUT0]] -to [get_clocks -of_objects [get_ports init_clk_out]]
## set_false_path -from [get_clocks -of_objects [get_ports init_clk_out]] -to [get_clocks -of_objects [get_pins inst/clock_module_i/mmcm_adv_inst/CLKOUT1]]
## set_false_path -from [get_clocks -of_objects [get_pins inst/clock_module_i/mmcm_adv_inst/CLKOUT1]] -to [get_clocks -of_objects [get_ports init_clk_out]]
## set_false_path -from [get_clocks -of_objects [get_ports init_clk_out]] -to [get_clocks -of_objects [get_pins -hier -filter {name=~*inst*ZynqDesign_OPTOLINK_0_0_core_i*ZynqDesign_OPTOLINK_0_0_wrapper_i*ZynqDesign_OPTOLINK_0_0_multi_gt_i*ZynqDesign_OPTOLINK_0_0_gtx_inst/gtxe2_i/RXOUTCLK}]]
## set_false_path -from [get_clocks -of_objects [get_pins -hier -filter {name=~*inst*ZynqDesign_OPTOLINK_0_0_core_i*ZynqDesign_OPTOLINK_0_0_wrapper_i*ZynqDesign_OPTOLINK_0_0_multi_gt_i*ZynqDesign_OPTOLINK_0_0_gtx_inst/gtxe2_i/RXOUTCLK}]] -to [get_clocks -of_objects [get_ports init_clk_out]]
## set_false_path -from [get_clocks -of_objects [get_pins -hier -filter {name=~*inst*ZynqDesign_OPTOLINK_0_0_core_i*ZynqDesign_OPTOLINK_0_0_wrapper_i*ZynqDesign_OPTOLINK_0_0_multi_gt_i*ZynqDesign_OPTOLINK_0_0_gtx_inst/gtxe2_i/RXOUTCLK}]] -to [get_clocks -of_objects [get_ports user_clk_out]]
## set_false_path -from [get_clocks -of_objects [get_ports user_clk_out]] -to [get_clocks -of_objects [get_pins -hier -filter {name=~*inst*ZynqDesign_OPTOLINK_0_0_core_i*ZynqDesign_OPTOLINK_0_0_wrapper_i*ZynqDesign_OPTOLINK_0_0_multi_gt_i*ZynqDesign_OPTOLINK_0_0_gtx_inst/gtxe2_i/RXOUTCLK}]]




################################################################################
################################################################################




####################################################################################
# Constraints from file : 'ZynqDesign_OPTOLINK_1_0_clocks.xdc'
####################################################################################

##################################################################################
##
## Project:  Aurora 64B/66B
## Company:  Xilinx
##
##
##
## (c) Copyright 2012 - 2013 Xilinx, Inc. All rights reserved.
##
## This file contains confidential and proprietary information
## of Xilinx, Inc. and is protected under U.S. and
## international copyright and other intellectual property
## laws.
##
## DISCLAIMER
## This disclaimer is not a license and does not grant any
## rights to the materials distributed herewith. Except as
## otherwise provided in a valid license issued to you by
## Xilinx, and to the maximum extent permitted by applicable
## law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
## WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
## AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
## BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
## INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
## (2) Xilinx shall not be liable (whether in contract or tort,
## including negligence, or under any other theory of
## liability) for any loss or damage of any kind or nature
## related to, arising under or in connection with these
## materials, including for any direct, or any indirect,
## special, incidental, or consequential loss or damage
## (including loss of data, profits, goodwill, or any type of
## loss or damage suffered as a result of any action brought
## by a third party) even if such damage or loss was
## reasonably foreseeable or Xilinx had been advised of the
## possibility of the same.
##
## CRITICAL APPLICATIONS
## Xilinx products are not designed or intended to be fail-
## safe, or for use in any application requiring fail-safe
## performance, such as life-support or safety devices or
## systems, Class III medical devices, nuclear facilities,
## applications related to the deployment of airbags, or any
## other applications that could lead to death, personal
## injury, or severe property or environmental damage
## (individually and collectively, "Critical
## Applications"). Customer assumes the sole risk and
## liability of any use of Xilinx products in Critical
## Applications, subject only to applicable laws and
## regulations governing limitations on product liability.
##
## THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
## PART OF THIS FILE AT ALL TIMES.

##
#################################################################################

##
##  ZynqDesign_OPTOLINK_1_0
##
##
##  Description: This is the design constraints file for a 1 lane Aurora
##               core.
##               It contains all the clocks generated by the core
##
##
################################################################################

################################################################################
# below commented constraints are kept as is to maintain the backward compatibility structure.
## ## set_false_path -from [get_clocks -of_objects [get_ports init_clk_out]] -to [get_clocks -of_objects [get_pins -hier -filter {name=~*ZynqDesign_OPTOLINK_1_0_i*inst*ZynqDesign_OPTOLINK_1_0_wrapper_i*ZynqDesign_OPTOLINK_1_0_multi_gt_i*ZynqDesign_OPTOLINK_1_0_gtx_inst/gtxe2_i/RXOUTCLK}]]
##
## ## set_false_path -from [get_clocks -of_objects [get_pins -hier -filter {name=~*ZynqDesign_OPTOLINK_1_0_i*inst*ZynqDesign_OPTOLINK_1_0_wrapper_i*ZynqDesign_OPTOLINK_1_0_multi_gt_i*ZynqDesign_OPTOLINK_1_0_gtx_inst/gtxe2_i/RXOUTCLK}]] -to [get_clocks -of_objects [get_ports init_clk_out]]
##
## ## set_false_path -from [get_clocks -of_objects [get_pins -hier -filter {name=~*ZynqDesign_OPTOLINK_1_0_i*inst*ZynqDesign_OPTOLINK_1_0_wrapper_i*ZynqDesign_OPTOLINK_1_0_multi_gt_i*ZynqDesign_OPTOLINK_1_0_gtx_inst/gtxe2_i/RXOUTCLK}]] -to [get_clocks -of_objects [get_ports user_clk_out]]
##
## ## set_false_path -from [get_clocks -of_objects [get_ports user_clk_out]] -to [get_clocks -of_objects [get_pins -hier -filter {name=~*ZynqDesign_OPTOLINK_1_0_i*inst*ZynqDesign_OPTOLINK_1_0_wrapper_i*ZynqDesign_OPTOLINK_1_0_multi_gt_i*ZynqDesign_OPTOLINK_1_0_gtx_inst/gtxe2_i/RXOUTCLK}]]




################################################################################
################################################################################




####################################################################################
# Constraints from file : 'ZynqDesign_axis_data_fifo_0_0_clocks.xdc'
####################################################################################

################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################
#------------------------------------------------------------------------------#
#                             AXI FIFO Constraints                             #
#------------------------------------------------------------------------------#
#set wr_clock          [get_clocks -of_objects [get_ports s_aclk]]
#set rd_clock          [get_clocks -of_objects [get_ports m_aclk]]
#set wr_clk_period     [get_property PERIOD $wr_clock]
#set rd_clk_period     [get_property PERIOD $rd_clock]
#set skew_value [expr {(($wr_clk_period < $rd_clk_period) ? $wr_clk_period : $rd_clk_period)} ]



#set_false_path -from [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.sckt_wrst_i_reg}] -to [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.garst_sync_ic[1].rd_rst_inst/Q_reg_reg[0]}]
#set_false_path -from [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.garst_sync_ic[3].rd_rst_inst/Q_reg_reg[0]}] -to [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.garst_sync_ic[1].rd_rst_wr_inst/Q_reg_reg[0]}]
# This example is using the Set Max Delay constrains for the cross clock domain pointers for AXI4-Stream FIFO

## set_max_delay -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $rd_clock]
## set_bus_skew -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] $skew_value

## set_max_delay -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $wr_clock]
## set_bus_skew -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] $skew_value



################################################################################


####################################################################################
# Constraints from file : 'ZynqDesign_axis_data_fifo_0_1_clocks.xdc'
####################################################################################

################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################
#------------------------------------------------------------------------------#
#                             AXI FIFO Constraints                             #
#------------------------------------------------------------------------------#
#set wr_clock          [get_clocks -of_objects [get_ports s_aclk]]
#set rd_clock          [get_clocks -of_objects [get_ports m_aclk]]
#set wr_clk_period     [get_property PERIOD $wr_clock]
#set rd_clk_period     [get_property PERIOD $rd_clock]
#set skew_value [expr {(($wr_clk_period < $rd_clk_period) ? $wr_clk_period : $rd_clk_period)} ]



#set_false_path -from [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.sckt_wrst_i_reg}] -to [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.garst_sync_ic[1].rd_rst_inst/Q_reg_reg[0]}]
#set_false_path -from [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.garst_sync_ic[3].rd_rst_inst/Q_reg_reg[0]}] -to [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.garst_sync_ic[1].rd_rst_wr_inst/Q_reg_reg[0]}]
# This example is using the Set Max Delay constrains for the cross clock domain pointers for AXI4-Stream FIFO

## set_max_delay -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $rd_clock]
## set_bus_skew -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] $skew_value

## set_max_delay -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $wr_clock]
## set_bus_skew -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] $skew_value



################################################################################


####################################################################################
# Constraints from file : 'ZynqDesign_axis_data_fifo_0_2_clocks.xdc'
####################################################################################

################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################
#------------------------------------------------------------------------------#
#                             AXI FIFO Constraints                             #
#------------------------------------------------------------------------------#
#set wr_clock          [get_clocks -of_objects [get_ports s_aclk]]
#set rd_clock          [get_clocks -of_objects [get_ports m_aclk]]
#set wr_clk_period     [get_property PERIOD $wr_clock]
#set rd_clk_period     [get_property PERIOD $rd_clock]
#set skew_value [expr {(($wr_clk_period < $rd_clk_period) ? $wr_clk_period : $rd_clk_period)} ]



#set_false_path -from [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.sckt_wrst_i_reg}] -to [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.garst_sync_ic[1].rd_rst_inst/Q_reg_reg[0]}]
#set_false_path -from [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.garst_sync_ic[3].rd_rst_inst/Q_reg_reg[0]}] -to [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.garst_sync_ic[1].rd_rst_wr_inst/Q_reg_reg[0]}]
# This example is using the Set Max Delay constrains for the cross clock domain pointers for AXI4-Stream FIFO

## set_max_delay -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $rd_clock]
## set_bus_skew -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] $skew_value

## set_max_delay -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $wr_clock]
## set_bus_skew -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] $skew_value



################################################################################


####################################################################################
# Constraints from file : 'ZynqDesign_axis_data_fifo_2_0_clocks.xdc'
####################################################################################

################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################
#------------------------------------------------------------------------------#
#                             AXI FIFO Constraints                             #
#------------------------------------------------------------------------------#
#set wr_clock          [get_clocks -of_objects [get_ports s_aclk]]
#set rd_clock          [get_clocks -of_objects [get_ports m_aclk]]
#set wr_clk_period     [get_property PERIOD $wr_clock]
#set rd_clk_period     [get_property PERIOD $rd_clock]
#set skew_value [expr {(($wr_clk_period < $rd_clk_period) ? $wr_clk_period : $rd_clk_period)} ]



#set_false_path -from [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.sckt_wrst_i_reg}] -to [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.garst_sync_ic[1].rd_rst_inst/Q_reg_reg[0]}]
#set_false_path -from [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.garst_sync_ic[3].rd_rst_inst/Q_reg_reg[0]}] -to [get_cells -hierarchical -filter {NAME =~ *gsckt_wrst.gic_rst.garst_sync_ic[1].rd_rst_wr_inst/Q_reg_reg[0]}]
# This example is using the Set Max Delay constrains for the cross clock domain pointers for AXI4-Stream FIFO

## set_max_delay -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $rd_clock]
## set_bus_skew -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] $skew_value

## set_max_delay -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $wr_clock]
## set_bus_skew -from [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells ${fg_root}/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] $skew_value



################################################################################


####################################################################################
# Constraints from file : 'ZynqDesign_auto_us_0_clocks.xdc'
####################################################################################

###############################################################################################################
# Core-Level Timing Constraints for axi_dwidth_converter Component "ZynqDesign_auto_us_0"
###############################################################################################################
#
# This component is not configured to perform asynchronous clock-domain-crossing.
# No timing core-level constraints are needed.
# (Synchronous clock-domain-crossings, if any, remain covered by your system-level PERIOD constraints.)


####################################################################################
# Constraints from file : 'fifo_generator_0_clocks.xdc'
####################################################################################

################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################
#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

#set wr_clock          [get_clocks -of_objects [get_ports wr_clk]]
#set rd_clock          [get_clocks -of_objects [get_ports rd_clk]]
#set wr_clk_period     [get_property PERIOD $wr_clock]
#set rd_clk_period     [get_property PERIOD $rd_clock]
#set skew_value [expr {(($wr_clk_period < $rd_clk_period) ? $wr_clk_period : $rd_clk_period)} ]

# Ignore paths from the write clock to the read data registers for Asynchronous Distributed RAM based FIFO
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO1/U0
set_false_path -from [filter [all_fanout -from [get_ports -scoped_to_current_instance wr_clk] -flat -endpoints_only] IS_LEAF] -to [get_cells -hierarchical -filter {NAME =~ *gdm.dm_gen.dm*/gpr1.dout_i_reg*}]


# Set max delay on cross clock domain path for Block/Distributed RAM based FIFO

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $rd_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] $skew_value

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $wr_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] $skew_value
################################################################################

################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################
#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

#set wr_clock          [get_clocks -of_objects [get_ports wr_clk]]
#set rd_clock          [get_clocks -of_objects [get_ports rd_clk]]
#set wr_clk_period     [get_property PERIOD $wr_clock]
#set rd_clk_period     [get_property PERIOD $rd_clock]
#set skew_value [expr {(($wr_clk_period < $rd_clk_period) ? $wr_clk_period : $rd_clk_period)} ]

# Ignore paths from the write clock to the read data registers for Asynchronous Distributed RAM based FIFO
current_instance -quiet
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO2/U0
set_false_path -from [filter [all_fanout -from [get_ports -scoped_to_current_instance wr_clk] -flat -endpoints_only] IS_LEAF] -to [get_cells -hierarchical -filter {NAME =~ *gdm.dm_gen.dm*/gpr1.dout_i_reg*}]


# Set max delay on cross clock domain path for Block/Distributed RAM based FIFO

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $rd_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] $skew_value

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $wr_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] $skew_value
################################################################################

################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################
#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

#set wr_clock          [get_clocks -of_objects [get_ports wr_clk]]
#set rd_clock          [get_clocks -of_objects [get_ports rd_clk]]
#set wr_clk_period     [get_property PERIOD $wr_clock]
#set rd_clk_period     [get_property PERIOD $rd_clock]
#set skew_value [expr {(($wr_clk_period < $rd_clk_period) ? $wr_clk_period : $rd_clk_period)} ]

# Ignore paths from the write clock to the read data registers for Asynchronous Distributed RAM based FIFO
current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO1/U0
set_false_path -from [filter [all_fanout -from [get_ports -scoped_to_current_instance wr_clk] -flat -endpoints_only] IS_LEAF] -to [get_cells -hierarchical -filter {NAME =~ *gdm.dm_gen.dm*/gpr1.dout_i_reg*}]


# Set max delay on cross clock domain path for Block/Distributed RAM based FIFO

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $rd_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] $skew_value

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $wr_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] $skew_value
################################################################################

################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################
#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

#set wr_clock          [get_clocks -of_objects [get_ports wr_clk]]
#set rd_clock          [get_clocks -of_objects [get_ports rd_clk]]
#set wr_clk_period     [get_property PERIOD $wr_clock]
#set rd_clk_period     [get_property PERIOD $rd_clock]
#set skew_value [expr {(($wr_clk_period < $rd_clk_period) ? $wr_clk_period : $rd_clk_period)} ]

# Ignore paths from the write clock to the read data registers for Asynchronous Distributed RAM based FIFO
current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO2/U0
set_false_path -from [filter [all_fanout -from [get_ports -scoped_to_current_instance wr_clk] -flat -endpoints_only] IS_LEAF] -to [get_cells -hierarchical -filter {NAME =~ *gdm.dm_gen.dm*/gpr1.dout_i_reg*}]


# Set max delay on cross clock domain path for Block/Distributed RAM based FIFO

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $rd_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] $skew_value

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $wr_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] $skew_value
################################################################################

################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################
#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

#set wr_clock          [get_clocks -of_objects [get_ports wr_clk]]
#set rd_clock          [get_clocks -of_objects [get_ports rd_clk]]
#set wr_clk_period     [get_property PERIOD $wr_clock]
#set rd_clk_period     [get_property PERIOD $rd_clock]
#set skew_value [expr {(($wr_clk_period < $rd_clk_period) ? $wr_clk_period : $rd_clk_period)} ]

# Ignore paths from the write clock to the read data registers for Asynchronous Distributed RAM based FIFO
current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO1/U0
set_false_path -from [filter [all_fanout -from [get_ports -scoped_to_current_instance wr_clk] -flat -endpoints_only] IS_LEAF] -to [get_cells -hierarchical -filter {NAME =~ *gdm.dm_gen.dm*/gpr1.dout_i_reg*}]


# Set max delay on cross clock domain path for Block/Distributed RAM based FIFO

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $rd_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] $skew_value

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $wr_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] $skew_value
################################################################################

################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################
#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

#set wr_clock          [get_clocks -of_objects [get_ports wr_clk]]
#set rd_clock          [get_clocks -of_objects [get_ports rd_clk]]
#set wr_clk_period     [get_property PERIOD $wr_clock]
#set rd_clk_period     [get_property PERIOD $rd_clock]
#set skew_value [expr {(($wr_clk_period < $rd_clk_period) ? $wr_clk_period : $rd_clk_period)} ]

# Ignore paths from the write clock to the read data registers for Asynchronous Distributed RAM based FIFO
current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO2/U0
set_false_path -from [filter [all_fanout -from [get_ports -scoped_to_current_instance wr_clk] -flat -endpoints_only] IS_LEAF] -to [get_cells -hierarchical -filter {NAME =~ *gdm.dm_gen.dm*/gpr1.dout_i_reg*}]


# Set max delay on cross clock domain path for Block/Distributed RAM based FIFO

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $rd_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] $skew_value

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $wr_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] $skew_value
################################################################################

################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################
#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

#set wr_clock          [get_clocks -of_objects [get_ports wr_clk]]
#set rd_clock          [get_clocks -of_objects [get_ports rd_clk]]
#set wr_clk_period     [get_property PERIOD $wr_clock]
#set rd_clk_period     [get_property PERIOD $rd_clock]
#set skew_value [expr {(($wr_clk_period < $rd_clk_period) ? $wr_clk_period : $rd_clk_period)} ]

# Ignore paths from the write clock to the read data registers for Asynchronous Distributed RAM based FIFO
current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO1/U0
set_false_path -from [filter [all_fanout -from [get_ports -scoped_to_current_instance wr_clk] -flat -endpoints_only] IS_LEAF] -to [get_cells -hierarchical -filter {NAME =~ *gdm.dm_gen.dm*/gpr1.dout_i_reg*}]


# Set max delay on cross clock domain path for Block/Distributed RAM based FIFO

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $rd_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] $skew_value

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $wr_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] $skew_value
################################################################################

################################################################################
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#
################################################################################
#------------------------------------------------------------------------------#
#                         Native FIFO Constraints                              #
#------------------------------------------------------------------------------#

#set wr_clock          [get_clocks -of_objects [get_ports wr_clk]]
#set rd_clock          [get_clocks -of_objects [get_ports rd_clk]]
#set wr_clk_period     [get_property PERIOD $wr_clock]
#set rd_clk_period     [get_property PERIOD $rd_clock]
#set skew_value [expr {(($wr_clk_period < $rd_clk_period) ? $wr_clk_period : $rd_clk_period)} ]

# Ignore paths from the write clock to the read data registers for Asynchronous Distributed RAM based FIFO
current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO2/U0
set_false_path -from [filter [all_fanout -from [get_ports -scoped_to_current_instance wr_clk] -flat -endpoints_only] IS_LEAF] -to [get_cells -hierarchical -filter {NAME =~ *gdm.dm_gen.dm*/gpr1.dout_i_reg*}]


# Set max delay on cross clock domain path for Block/Distributed RAM based FIFO

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $rd_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*rd_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].wr_stg_inst/Q_reg_reg[*]] $skew_value

## set_max_delay -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property -min PERIOD $wr_clock]
## set_bus_skew -from [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*wr_pntr_gc_reg[*]] -to [get_cells inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/*gsync_stage[1].rd_stg_inst/Q_reg_reg[*]] $skew_value
################################################################################


####################################################################################
# Constraints from file : 'clk_wiz_0_late.xdc'
####################################################################################


# file: clk_wiz_0_late.xdc
#
# (c) Copyright 2008 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#






####################################################################################
# Constraints from file : 'xpm_cdc_async_rst.tcl'
####################################################################################

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axi_interconnect_0/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axi_interconnect_0/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axi_interconnect_0/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]



####################################################################################
# Constraints from file : 'xpm_cdc_gray.tcl'
####################################################################################

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_0/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 10.240

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_0/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_3/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 10.240

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_3/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_2/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_2/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 10.240

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_1/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 10.240

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_1/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000

# Scoped constraints for xpm_cdc_gray




current_instance -quiet
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst
set_bus_skew -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000
set_max_delay -datapath_only -from [get_cells src_gray_ff_reg*] -to [get_cells {dest_graysync_ff_reg[0]*}] 8.000


####################################################################################
# Constraints from file : 'xpm_cdc_single.tcl'
####################################################################################

# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_0/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_0/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_3/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_3/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_2/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_2/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_1/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_1/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface2/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface3/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface4/ADC_OUTFIFO2/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance adcs/U0/adc_interface1/ADC_OUTFIFO1/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_2/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_2/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_2/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_2/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_2/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_2/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_2/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_2/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_2/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_2/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_2/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_2/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_2/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_2/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_2/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_2/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_delay_1/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_delay_1/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_delay_1/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_delay_1/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_delay_1/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_1/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_1/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_1/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_1/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_1/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_1/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_1/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_1/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_1/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_1/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_1/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_1/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_1/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_1/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_1/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_1/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_1/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_1/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_delay_2/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_delay_2/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_delay_2/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_delay_2/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_delay_2/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_2/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_2/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_2/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_2/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_2/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_2/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_2/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_2/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_serdes1_program_delay_2/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_2/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_2/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_2/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_2/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_2/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_2/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_2/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_2/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface3/xpm_cdc_bitsleep_2/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_delay_1/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_delay_1/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_delay_1/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_delay_1/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_delay_1/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_1/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_1/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_1/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_1/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_1/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_1/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_1/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_1/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_1/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_1/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_1/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_1/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_1/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_1/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_1/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_1/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_1/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_1/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_delay_2/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_delay_2/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_delay_2/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_delay_2/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_delay_2/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_2/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_2/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_2/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_2/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_2/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_2/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_2/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_2/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_serdes1_program_delay_2/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_2/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_2/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_2/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_2/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_2/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_2/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_2/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface4/xpm_cdc_bitsleep_2/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_delay_1/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_delay_1/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_delay_1/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_delay_1/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_delay_1/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_1/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_1/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_1/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_1/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_1/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_1/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_1/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_1/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_1/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_1/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_1/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_1/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_1/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_1/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_1/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_1/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_1/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_1/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_delay_2/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_delay_2/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_delay_2/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_delay_2/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_delay_2/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_2/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_2/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_2/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_2/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_2/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_2/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_2/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_2/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_serdes1_program_delay_2/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_2/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_2/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_2/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_2/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_2/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_2/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_2/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_2/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface1/xpm_cdc_bitsleep_2/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_delay_1/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_delay_1/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_delay_1/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_delay_1/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_delay_1/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_1/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_1/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_1/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_1/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_1/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_1/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_1/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_1/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_1/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_1/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_1/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_1/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_1/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_1/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_1/single_array[5].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_1/single_array[6].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_1/single_array[7].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_bitsleep_1/single_array[8].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_delay_2/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_delay_2/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_delay_2/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_delay_2/single_array[3].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_delay_2/single_array[4].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_2/single_array[0].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_2/single_array[1].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_single

current_instance -quiet
current_instance {adcs/U0/adc_interface2/xpm_cdc_serdes1_program_delay_2/single_array[2].xpm_cdc_single_inst}
set_false_path -to [get_cells {syncstages_ff_reg[0]}]



####################################################################################
# Constraints from file : 'xpm_cdc_sync_rst.tcl'
####################################################################################

# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_0/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_sync_rst_inst_wrst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_1/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_sync_rst_inst_wrst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_0/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.xpm_cdc_sync_rst_inst_wrst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/FS_0_AXIFIFO/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.xpm_cdc_sync_rst_inst_wrst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_3/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.xpm_cdc_sync_rst_inst_wrst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_3/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_sync_rst_inst_wrst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_2/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.xpm_cdc_sync_rst_inst_wrst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_2/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_sync_rst_inst_wrst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_1/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.xpm_cdc_sync_rst_inst_wrst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_0/inst/gen_async_clock_and_reset.inst_xpm_cdc_sync_rst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_3/inst/gen_async_clock_and_reset.inst_xpm_cdc_sync_rst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_2/inst/gen_async_clock_and_reset.inst_xpm_cdc_sync_rst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]


# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance zynq_subsystem/ZynqDesign_i/axis_data_fifo_1/inst/gen_async_clock_and_reset.inst_xpm_cdc_sync_rst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]



# Vivado Generated miscellaneous constraints 

#revert back to original instance
current_instance -quiet




set_property PACKAGE_PIN C2 [get_ports SYNC_0_OUTb]
set_property PACKAGE_PIN B2 [get_ports SYNC_1_OUTb]
set_property PACKAGE_PIN A4 [get_ports SYNC_2_OUTb]

set_property PACKAGE_PIN B1 [get_ports SYNC_0_INb]
set_property PACKAGE_PIN A2 [get_ports SYNC_1_INb]
set_property PACKAGE_PIN A3 [get_ports SYNC_2_INb]


set_property IOSTANDARD LVCMOS18 [get_ports SYNC_0_OUTb]
set_property IOSTANDARD LVCMOS18 [get_ports SYNC_1_OUTb]
set_property IOSTANDARD LVCMOS18 [get_ports SYNC_2_OUTb]

set_property IOSTANDARD LVCMOS18 [get_ports SYNC_0_INb]
set_property IOSTANDARD LVCMOS18 [get_ports SYNC_1_INb]
set_property IOSTANDARD LVCMOS18 [get_ports SYNC_2_INb]



set_property PACKAGE_PIN C11 [get_ports SPI_CLK]
set_property PACKAGE_PIN B11 [get_ports SPI_CS]
set_property PACKAGE_PIN A12 [get_ports SPI_MOSI_1]
set_property PACKAGE_PIN A13 [get_ports SPI_MOSI_0]
set_property IOSTANDARD LVCMOS18 [get_ports SPI_CLK]
set_property IOSTANDARD LVCMOS18 [get_ports SPI_CS]
set_property IOSTANDARD LVCMOS18 [get_ports SPI_MOSI_0]
set_property IOSTANDARD LVCMOS18 [get_ports SPI_MOSI_1]


set_property CLOCK_DEDICATED_ROUTE FALSE [get_nets O]

set_false_path -from [get_clocks -of_objects [get_pins main_clock_gen/inst/mmcm_adv_inst/CLKOUT1] -filter {IS_GENERATED && MASTER_CLOCK == testADCClk}] -to [get_clocks -of_objects [get_pins main_clock_gen/inst/mmcm_adv_inst/CLKOUT1] -filter {IS_GENERATED && MASTER_CLOCK == clk_fpga_0}]
set_false_path -from [get_clocks -of_objects [get_pins main_clock_gen/inst/mmcm_adv_inst/CLKOUT1] -filter {IS_GENERATED && MASTER_CLOCK == clk_fpga_0}] -to [get_clocks -of_objects [get_pins main_clock_gen/inst/mmcm_adv_inst/CLKOUT1] -filter {IS_GENERATED && MASTER_CLOCK == testADCClk}]
set_false_path -from [get_clocks -of_objects [get_pins main_clock_gen/inst/mmcm_adv_inst/CLKOUT1] -filter {IS_GENERATED && MASTER_CLOCK == clk_fpga_0}] -to [get_clocks -of_objects [get_pins adcs/adc_interface1/ADC_DESER1/clkout_buf_inst/O]]
set_false_path -from [get_clocks -of_objects [get_pins main_clock_gen/inst/mmcm_adv_inst/CLKOUT1] -filter {IS_GENERATED && MASTER_CLOCK == clk_fpga_0}] -to [get_clocks clk_fpga_0]
set_false_path -from [get_clocks -of_objects [get_pins main_clock_gen/inst/mmcm_adv_inst/CLKOUT1] -filter {IS_GENERATED && MASTER_CLOCK == testADCClk}] -to [get_clocks -of_objects [get_pins adcs/adc_interface1/ADC_DESER1/clkout_buf_inst/O]]
